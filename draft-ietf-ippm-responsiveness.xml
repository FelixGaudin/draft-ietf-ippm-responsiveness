<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="exp" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="19"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and its solutions.
We believe that creating a tool whose measurement matches people's
everyday experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the "RPM Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
would help establish a new expectation
that the standard measures of network quality should
-- in addition to throughput and idle latency --
also include latency under load, or, as we prefer to call it,
responsiveness under working conditions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we create the term "Responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is "the higher the better". This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "RPM Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport's congestion control that might
reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as "traditional" bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two communicating devices,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved to make it no longer
the lowest-capacity hop, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in other traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the RPM Test mimics normal network operations and data transfers,
to cause this bottleneck buffer to fill to capacity, and then
measures the resulting end-to-end latency under these operating conditions.
A well managed bottleneck queue keeps its queue occupancy
under control, resulting in consistently low round-trip time
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today's Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those "working conditions".
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>There are many different ways to define the state of "working conditions" to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
network is used at its nearly full capacity, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow"><name>From single-flow to multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
For higher throughput and/or networks with higher round-trip time,
TCP allows larger receive window sizes, up to 1 GB.
For most applications there is little reason to open multiple
parallel TCP connections in an attempt to achieve higher throughput.</t>

<t>However, it may take some time for a single TCP connection to ramp
up to full speed, and one of the goals of the RPM test is to quickly
load the network to capacity, take its measurements, and then finish.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the RPM Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the RPM Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions, and then end the test.
Because of this, using multiple simultaneous parallel connections
allows the RPM test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-link-utilization"><name>Reaching full link utilization</name>

<t>The RPM Test gradually increases the number of TCP connections
and measures "goodput" -- the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that the network is used at its full capacity.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
<section anchor="final-working-conditions-algorithm"><name>Final "Working Conditions" Algorithm</name>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p, divided by the interval duration.
If p is negative (i.e., a time interval logically prior to the start of the test beginning,
used in moving average calculations),
the number of total bytes of data transferred within that
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
  <t>moving average stability during the period between intervals b and e:
Whether or not, for all b≤x&lt;e, the absolute difference is less than 5% between
the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1.
If all absolute differences are below 5% then the moving average has achieved stability.
If any of the absolute differences are 5% or more then the moving average has not achieved stability.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create four load-generating connections.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached full link utilization.
      <list style="symbols">
          <t>If no load-generating connections have been added within the last four intervals, add four more load-generating connections.</t>
        </list></t>
      <t>Else, the network has reached full link utilization with the existing load-generating connections. The current state is a candidate for stable working conditions.
      <list style="symbols">
          <t>If a) there have been load-generating connections added in the past four intervals and b) there has been moving average stability during the period between intervals i-4 and i,
then the network has reached full link utilization and the algorithm terminates.</t>
          <t>Otherwise, add four more load-generating connections.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when full link utilization is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

</section>
</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness during the previously explained working conditions creation
is a continuous process during the duration of the test. It requires a sufficiently
large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests for a small
object. There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as tcp_foreign).
Second, the TLS round-trip-time (noted tls_foreign). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted http_foreign).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted http_self).</t>

<t>tcp_foreign, tls_foreign, http_foreign and http_self are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data is available for calculation. In order to generate
as much data as possible, the methodology requires a client to issue these probes every 100ms.
For the probes on the load-generating connections, the client needs to use one of the
initial load-generating connections.
This means that every 100ms, 2 probes are being evaluated. The total amount of data
used for these probes would be no more than about 50KB worth of data within one second.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_foreign, tls_foreign, http_foreign, http_self (from the previous section). Each of these sets
will have a large number of samples. Use the following methodology to calculate a single RPM value
from these data:</t>

<t><list style="numbers">
  <t>Among each set, take the 90th percentile, thus resulting in 4 individual numbers (tcp_foreign_p90, tls_foreign_p90, http_foreign_p90, http_self_p90).</t>
  <t>Calculate the RPM as the weighted mean:</t>
</list></t>

<figure><artwork><![CDATA[
Responsiveness = 60000 / ((1/3*tcp_foreign_p90 + 1/3*tls_foreign_p90 + 1/3*http_foreign_p90 + http_self_p90)/2)
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api"><name>RPM Test Server API</name>

<t>The RPM measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for RPM test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the RPM test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for RPM test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below). The server SHOULD specify the
content-type as application/json.
Sample JSON:</t>
</list></t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_https_download_url":"https://nq.example.com/api/v1/large",
    "small_https_download_url":"https://nq.example.com/api/v1/small",
    "https_upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="rpm-test-server-discovery"><name>RPM Test Server Discovery</name>

<t>It makes sense to host RPM Test Server instances in Internet
Data Centers where they can be accessed easily by users
wishing to test the quality of their Internet connection.
However, when a user performs an RPM test and determines
that they are suffering from poor RPM during download,
the logical next question might be,
“What’s causing my poor performance?
Is it poor buffer management by my ISP?
Is it poor buffer management in my home Wi-Fi Access point?
Something else?”</t>

<t>To help an end user answer this question, it will be useful for home gateway
equipment to host RPM Test Server instances.
In an example configuration, a user may have cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in the home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host an RPM Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<t>To aid in discoverability of these facilities,
local RPM Test Server instances SHOULD advertise the availability
of service type <xref target="RFC6335"/> “_nq._tcp” (Network Quality),
via DNS-Based Service Discovery <xref target="RFC6763"/>,
using Multicast DNS on its local link(s) <xref target="RFC6762"/>.
Where applicable, an RPM Test Server instance SHOULD also advertise
the availability of its service via unicast discovery,
for discovery by client devices not directly attached to the same link.
Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.
Similarly, a “cloud” service, providing Internet hosting service for
“example.com” could choose to include the relevant DNS-SD records
within the “example.com” domain <xref target="RFC6763"/> to communicate
to clients the list of available RPM Test Server instances.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of RPM Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Will Hawkins and Jeroen Schickendantz for their tireless
enthousiasm around the project and their contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAHJ+UGMAA9V963Ijx7Hm/3qKWjr2iNwDYDg32UOHw+ZcJI+tmaGHlPVj
z8ZEo7sItNnohvpCDKyQQ6+xET4vpyfZ/DKzLg2A1MjHu+F1+BxzGt11yczK
e2ZNp1PTl33lzux7162buitvXe26zg514Vr7TdPelPXCvmjqouxL+t1k83nr
bj/9/aLJ62xFExRtdt1PS9dfT8v1ejVtRwNMTx+aIuvdmcnp/y+adntm3ce1
Md0wX5VdR2Ndbdc0zOtXV1+YvClomjM70GC/MuW6PbN9O3T9o9PTZ6ePTNa6
7MxetVlNU7S92dCyFm0zrOnzC3vh2uumXWV17uwbl3VD61au7s2N29KLBb1T
966tXT99iSXTEvqsLj5kVVPT/FvXmXV5Zv9n3+QT29Hwrbvu6K/tCn/8L2Oy
oV827Zmxdkr/Z21Zd2f2xcxeZFmXL/mRQOTFsi27vlkv05+alvZ1vl5XjtaR
z/hZR3O4/sy+q53+dJG1N/abbMs/52VP0HoxrF3bl3UzsS+yqqQt1mVmnz09
ffhE3mqGugdYv67L3hX2sidAd7a5tucr15Z5xm+5VVZWZzZf84p+l2G2Wd6s
zHg772cEuq1rk928JyBlVZU8/9fYStuu7tzG5YyQ4Lpl2bpkJ5f9kLX9+Jd/
jb3kuqQ7N/RuZi+X2bpss2Q/72ig0eN/jc00tJc7N/KGCCzrl2WX7IMe9OlT
3saXTbOo3AQbGe3j4eenpzTreln2S5fRQ97PZrSdN1huVtb2z6Xb0JbOrX32
5PTJ45+/lxUtbcUr+92CFyRbKmvmND0xOfCD58P1tWvnVZP1Z/x1ZBX0n6ns
/A8z+6Xr+203evrHmX1b5sumksfKtI/SEe1LIEyedPSVpY0HXnYkwKGFuw6r
Ilw2q9VQ0z6YT2NfeP/8xZuJ/XNTDStnnz6d2LfDak7U89AePzp9+OiERkn4
eJ+Dj1/nv3z2eF52d2/pm5l9VRTb0cqZOytnh7zo26ayF21DbJX+OL56cXFi
L9cuL691ifs78Huzr+pFWTv6hUTPVdbd2C+aNse5ff/Fi1Na3Jn8+fnjx0/9
n7/8/FH807/wq19+/rn/89GzU//n6ePwwqOnz/yfT57Qu2Y6ndpsTkSX5SQp
aF4ihXpLUiJrSShktsryG8B2LO0m9jZry2boqq3NiWm6wlTZYkJv967OtxMi
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
/x+85JyBJI0AAA==

-->

</rfc>

