<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2023" month="March" day="13"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., throughput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges, 
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms 
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines a Responsiveness Test that serves as a good
proxy for user experience. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (we target 20 seconds).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines 
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user 
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the Responsiveness Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions.
Because of this, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>In this document, we impose an upper bound on the number of parallel load-generating
connections to 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition, once goodput is maximized, buffers will start filling up, creating the
"standing queue" that is characteristic of bufferbloat. At this moment the test starts
measuring the responsiveness until it, too, reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters serve as input to the test methodology. The following lists
their names, default values and explanation. Hereafter the detailed description of the
methodology will explain how these parameters are being used. Experience has shown
that these parameters allow for a low runtime and accurate results among a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving average distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be removed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is a process of continuous measurement.
It requires a sufficiently large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted <spanx style="verb">http_s</spanx>).</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_s</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before probing for responsiveness, we are able to
accurately estimate how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for a
responsiveness probe. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a probe on a foreign connection to be around 5000 bytes.
On load-generating connections we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that at each responsiveness probing interval does
not send more than MPS (Maximum responsiveness Probes per Second - default to 100) probes per second.
The probes should be spread out equally over the duration of the interval with an
equal split between foreign and different load-generating connections. For the probes on
load-generating connections, the connection should be selected randomly for each probe.</t>

<t>This would result in a total amount of data per second of 300 KB or 2400Kb, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, this will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency and in such a way that the probing traffic does not consume
more than PTC (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_f, tls_f, http_f, http_l (from the previous section).
The responsiveness evolves over time as buffers gradually reach saturation. Once
the buffers are saturated responsiveness is stable over time. Thus, the aggregation
of the measurements considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over the timeframe of these intervals a potentially large number of samples has been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest to use a trimmed mean at the TMP (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
TM(tcp_f), TM(tls_f), TM(http_f), TM(http_l).</t>

<t>The responsiveness is then calculated as the weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
(1/6*(TM(tcp_f) + TM(tls_f) + TM(http_f)) +
  1/2*TM(http_s))
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explain what the meaning of
working conditions is and the definition of responsiveness, we can design the
final algorithm. In order to measure the worst-case latency we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in a ID (Interval duration - default to 1 second) interval. This will ensure that we quickly reach capacity and full
buffer occupancy. First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, responsiveness probes are being transmitted
until responsiveness stability is reached.</t>

<t>We consider both, goodput and responsiveness to be stable, when the standard deviation
of the past MAD intervals is within SDT (Standard Deviation Tolerance - default to 5%) of the last of the moving averages.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval i as current_average.</t>
          <t>If the standard deviation of the past MAD average goodput values is less than SDT of the current_average, declare saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput has saturated:
      <list style="symbols">
          <t>Compute the responsiveness at interval i as current_responsiveness.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the current_responsiveness, declare saturation and report current_responsiveness.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute 4 iterations of the specific stage. Meaning, the moving average is
not taking the full window into account.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least 4
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the define standard deviation tolerance.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for Responsiveness Test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the Responsiveness Test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for Responsiveness Test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for 
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to 
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What’s causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?”</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the 
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/> 
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of Responsiveness Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Will Hawkins and Jeroen Schickendantz for their tireless
enthousiasm around the project and their contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
<front>
<title>Domain names - concepts and facilities</title>
<author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'><organization/></author>
<date month='November' year='1987'/>
<abstract><t>This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1034'/>
<seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIACWOD2QAA9V9e3PjRpLn//UpcJzbsDRHsqV+jVsbjlm5u233Tj80LXkc
F7cXXpAokRiBAI0CpOZ4vOGvcRGzX86f5PKXmfUASLV77jYu9vYe26aAQlVW
VuYvnzWbzUxXdpU9y95bt21qV97a2jqX9XVh2+y7pr0p61X2vKmLsivp7yZf
LFp7++nPF82yzjf0gaLNr7tZabvrWbndbmbtYIDZyakp8s6emSX9/6um3Z1l
riuMcf1iUzpHY13ttjTMq5dXX5llU9BnzrKeBvvclNv2LOva3nUPT06enTw0
eWvzs+yqzWv6RNuZO5rWqm36Lb1+kV3Y9rppN3m9tNkbm7u+tRtbd+bG7ujB
gp6pO9vWtpu9wJRpCl1eF9/nVVPT93fWmW15lv2PrllOM0fDt/ba0b92G/zj
fxqT9926ac9Mls3o/2VZWbuz7Pk8u8hzt1zzT0KR5+u2dF2zXad/alpa1/l2
W1max3LOvzn6hu3Osne11T9d5O1N9l2+4z8vy46o9bzf2rYr62aaPc+rkpZY
l3n27MnJ6WN5qunrDmT9ti47W2SXHRHaZc11dr6xbbnM+Sm7ycvqLFtueUb/
lONr82WzMcPlvJ8T6Xa2TVbznoiUV1Xy+3+OpbTt5t5lXM5pE6xbl61NVnLZ
9XnbDf/yn2MtS53SvQv6bp59k9/RGXTJer4raVvSn3kx9L1b2zqaJD72vKyX
ZV3nXZl+b80v3a3/qV/ih3m/nNuiN6as+QR1NAL4/Mv++tq2i6rJuzN+PR4B
+p+ZTO2f59nXtut2bvDrH+bZ23K5bir5WYXRJB0xewGqyi+O3sq6tQ1ndCI7
QZSyDrMigjebTV8T4Vj+YG14/vz5m2n2p6bqNzZ78mSave03CxJYp9nRw5PT
h8c0SiKfuiXk0/Xyd88eLUp3/5KI2i+LYjeYOUsdlViQg13bVNlF25C4oH8c
XT2/OM4ut3ZZXusU91fg15a9rFdlbekvJFKvcneTfdW0S/Dj+6+en9DkzuSf
pyePHus/nz569MT/83dPH8Z/+mc/f3rqH/j8d0+f+n8+fHbi/3nyKDz78Mmz
M2Nms1mWL4jZ8yUJQ5pCRrJzR4Iwb0nu5VmVL29A5qFAn2a3eVs2vat22ZLk
gi1Mla+m9HRn6+VuSkyYLeIuT4nXXLawtqZxls2qLv9Cb9BPeU26hbit64k5
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
3jb1jDZnjVhVrpe34FNnZvQoS84vMkx6b5Dhd1x7e/ix+7914HG/CV9kJ/R/
Hj9+lEV6zQXN+PZkCiz3KbELTnOXViQoofXi0eRKE+aT8BVRdMjMRSwFM1CF
kDgHCaiN9QObyqsy+vnYf3VpibUgfrwJqlLOXH35gguzzt+e7/2Nf0xaNbJ2
lhkLF+8dc/PLz3/zhERuxJFP0v2jAPRj1gleWPgQYzzAJAA+xZjnJZ0vsejK
Fivt8XQJ9YbwOOG2G4JxjZioaD6Z391oX4Hsn23b0Goul2TX3pDGJ0nyl3hm
MnZiICGOxiTR5srcbXzHO424hd6dwZUltSyxqwmpvFezF0kTmFtbNWzVeSX/
dfMxXypCdNxZ5S7enyzWXyOry97DKP+yxaZj7uxOIG1NrM3a2vnAg06FB+Nh
5PWXbXmTnROLuru8KsIQ0n5MbtDKrok5kUIQboPGMAY91TmxwATh5bfneYoQ
tXePz51DA3mXgITQp8njwgG8jDZkXo8TFVM6ecAmiOJ8i4ruzN9wLbMiyXro
Z2ntrJak4vjs2fx0fuJzaMae9dzt5YMazSjI0rbeIJW6qpt4eS9iWbRl8NBV
PZ1OH4EUGtBy8u3oe2gxIh6K0stTPPRxC02GyP6FTTw8Sk+ybgcxH+jv/yRT
+CLMaU584f/Ejf2/mM3w+Rlg3xcyZvq1OZvK4zc2KPaGEPhiDE/NJ8xc8vPv
mfgSO/jg8yefP3v26PGTZw/HKwn0ppV8ysfE9//Rj53+335D40efthWDwbHV
/xsZkJimQKYAAA==

-->

</rfc>

