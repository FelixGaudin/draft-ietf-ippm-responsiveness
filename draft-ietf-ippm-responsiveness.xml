<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2023" month="March" day="13"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., throughput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges, 
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms 
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines a Responsiveness Test that serves as a good
proxy for user experience. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (we target 20 seconds).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines 
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user 
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the Responsiveness Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions.
Because of this, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>In this document, we impose an upper bound on the number of parallel load-generating
connections to 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition, once goodput is maximized, buffers will start filling up, creating the
"standing queue" that is characteristic of bufferbloat. At this moment the test starts
measuring the responsiveness until it, too, reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters serve as input to the test methodology. The following lists
their names, default values and explanation. Hereafter the detailed description of the
methodology will explain how these parameters are being used. Experience has shown
that these parameters allow for a low runtime and accurate results among a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving average distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be removed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is a process of continuous measurement.
It requires a sufficiently large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted <spanx style="verb">http_s</spanx>).</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_s</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before probing for responsiveness, we are able to
accurately estimate how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for a
responsiveness probe. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a probe on a foreign connection to be around 5000 bytes.
On load-generating connections we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that at each responsiveness probing interval does
not send more than MPS (Maximum responsiveness Probes per Second - default to 100) probes per second.
The probes should be spread out equally over the duration of the interval with an
equal split between foreign and different load-generating connections. For the probes on
load-generating connections, the connection should be selected randomly for each probe.</t>

<t>This would result in a total amount of data per second of 300 KB or 2400Kb, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, this will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency and in such a way that the probing traffic does not consume
more than PTC (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_f, tls_f, http_f, http_l (from the previous section).
The responsiveness evolves over time as buffers gradually reach saturation. Once
the buffers are saturated responsiveness is stable over time. Thus, the aggregation
of the measurements considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over the timeframe of these intervals a potentially large number of samples has been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest to use a trimmed mean at the TMP (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
TM(tcp_f), TM(tls_f), TM(http_f), TM(http_l).</t>

<t>The responsiveness is then calculated as the weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
(1/6*(TM(tcp_f) + TM(tls_f) + TM(http_f)) +
  1/2*TM(http_s))
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explain what the meaning of
working conditions is and the definition of responsiveness, we can design the
final algorithm. In order to measure the worst-case latency we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in a ID (Interval duration - default to 1 second) interval. This will ensure that we quickly reach capacity and full
buffer occupancy. First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, responsiveness probes are being transmitted
until responsiveness stability is reached.</t>

<t>We consider both, goodput and responsiveness to be stable, when the standard deviation
of the past MAD intervals is within SDT (Standard Deviation Tolerance - default to 5%) of the last of the moving averages.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval i as current_average.</t>
          <t>If the standard deviation of the past MAD average goodput values is less than SDT of the current_average, declare saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput has saturated:
      <list style="symbols">
          <t>Compute the responsiveness at interval i as current_responsiveness.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the current_responsiveness, declare saturation and report current_responsiveness.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute 4 iterations of the specific stage. Meaning, the moving average is
not taking the full window into account.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least 4
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the define standard deviation tolerance.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for Responsiveness Test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the Responsiveness Test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for Responsiveness Test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to 
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What’s causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?”</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the 
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/> 
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of Responsiveness Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Jeroen Schickendantz for his tireless
enthousiasm around the project and his contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald, Matt Matthis and Omer Shapira for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
<front>
<title>Domain names - concepts and facilities</title>
<author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'><organization/></author>
<date month='November' year='1987'/>
<abstract><t>This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1034'/>
<seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAPiRD2QAA9V9e3PjRpLn//UpcJzbsDRHsqV+jVsbjlm5u233Tj80LXkc
F7cXXpAokRiBAI0CpOZ4vOGvcRGzX86f5PKXmfUASLV77jYu9mYfoyaJQlVW
VuYvnzWbzUxXdpU9y95bt21qV97a2jqX9XVh2+y7pr0p61X2vKmLsivpe5Mv
Fq29/fTfF82yzjf0gqLNr7tZabvrWbndbmbtYIDZyakp8s6emSX9/1XT7s4y
1xXGuH6xKZ2jsa52Wxrm1curr8yyKeg1Z1lPg31uym17lnVt77qHJyfPTh6a
vLX5WXbV5jW9ou3MHU1r1Tb9lh6/yC5se920m7xe2uyNzV3f2o2tO3Njd/TD
gn5Td7atbTd7gSnTFLq8Lr7Pq6am9++sM9vyLPsfXbOcZo6Gb+21o792G/zx
P43J+27dtGcmy2b0f1lW1u4sez7PLvLcLdf8kVDk+botXdds1+lXTUvrOt9u
K0vzWM75M0fvsN1Z9q62+tVF3t5k3+U7/npZdkSt5/3Wtl1ZN9PseV6VtMS6
zLNnT05OH8uvmr7uQNZv67KzRXbZEaFd1lxn5xvblsucf2U3eVmdZcstz+if
crxtvmw2Zric93Mi3c62yWreE5Hyqko+/8+xlLbd3LuMyzltgnXrsrXJSi67
Pm+74Tf/Oday1Cndu6Dv5tk3+R2dQZes57uStiX9mBdD77u1raNJ4mXPy3pZ
1nXelen71vzQ3fqf+iU+mPfLuS16Y8qaT1BHI4DPv+yvr227qJq8O+PH4xGg
/8xkav88z762Xbdzg0//MM/elst1U8nHKowm6YjZC1BVPnH0VNatbTijE9kJ
opR1mBURvNls+poIx/IHa8Pvz5+/mWZ/aqp+Y7MnT6bZ236zIIF1mh09PDl9
eEyjJPKpW0I+XS9/9+zRonT3L4mo/bIodoOZs9RRiQU52LVNlV20DYkL+uPo
6vnFcXa5tcvyWqe4vwK/tuxlvSprS9+QSL3K3U32VdMuwY/vv3p+QpM7kz9P
Tx491j+fPnr0xP/5u6cP45/+t58/PfU/+Px3T5/6Px8+O/F/njwKv3345NmZ
MbPZLMsXxOz5koQhTSEj2bkjQZi3JPfyrMqXNyDzUKBPs9u8LZveVbtsSXLB
FqbKV1P6dWfr5W5KTJgt4i5PiddctrC2pnGWzaou/0JP0Ed5TbqFuK3riTnt
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
//YdGkr6tK0YDI6t/t+ytXvuS6YAAA==

-->

</rfc>

