<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2023" month="February" day="22"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and its solutions.
We believe that creating a tool whose measurement matches people's
everyday experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the "RPM Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
would help establish a new expectation
that the standard measures of network quality should
-- in addition to throughput and idle latency --
also include latency under load, or, as we prefer to call it,
responsiveness under working conditions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we create the term "Responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is "the higher the better". This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "RPM Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport's congestion control that might
reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as "traditional" bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two communicating devices,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved to make it no longer
the lowest-capacity hop, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in other traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the RPM Test mimics normal network operations and data transfers,
to cause this bottleneck buffer to fill to capacity, and then
measures the resulting end-to-end latency under these operating conditions.
A well managed bottleneck queue keeps its queue occupancy
under control, resulting in consistently low round-trip time
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today's Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those "working conditions".
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>There are many different ways to define the state of "working conditions" to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The working conditions we try to achieve is a scenario where the path between the
measuring endpoints is utilized at its full end-to-end capacity. An ideal
sender could send at just this link-speed without building a queue on the
bottleneck. Thus, in order to measure the worst-case responsiveness we need to
ensure that a queue is building up on the bottleneck, meaning that responsiveness
is at its worst.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow"><name>From single-flow to multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the RPM test is to quickly
load the network, take its measurements, and then finish.
Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the RPM Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the RPM Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions, and then end the test.
Because of this, using multiple simultaneous parallel connections
allows the RPM test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-buffer-utilization"><name>Reaching full buffer utilization</name>

<t>The RPM Test gradually increases the number of TCP connections
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
as well as responsiveness continuously.
When both goodput and responsiveness stop changing, it means that the test
managed to fill the buffer of the bottleneck.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness during the previously explained working conditions creation
is a continuous process during the duration of the test. It requires a sufficiently
large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests for a small
object. There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as tcp_foreign).
Second, the TLS round-trip-time (noted tls_foreign). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted http_foreign).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted http_self).</t>

<t>tcp_foreign, tls_foreign, http_foreign and http_self are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data is available for calculation. In order to generate
as much data as possible, the methodology requires a client to issue these probes every 100ms.
For the probes on the load-generating connections, the client needs to use one of the
initial load-generating connections.
This means that every 100ms, 2 probes are being evaluated. The total amount of data
used for these probes would be no more than about 50KB worth of data within one second.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_foreign, tls_foreign, http_foreign, http_self (from the previous section). Each of these sets
will have a large number of samples. Use the following methodology to calculate a single RPM value
from these data:</t>

<t><list style="numbers">
  <t>Among each set, take the 90th percentile, thus resulting in 4 individual numbers (tcp_foreign_p90, tls_foreign_p90, http_foreign_p90, http_self_p90).</t>
  <t>Calculate the RPM as the weighted mean:</t>
</list></t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
((1/3*tcp_foreign_p90 + 1/3*tls_foreign_p90 + 1/3*http_foreign_p90 +
  http_self_p90)/2)
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explain what the meaning of
working conditions is and the definition of responsiveness, we can design the
final algorithm. In order to measure the worst-case latency we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in a 1-second interval. This will ensure that we quickly reach capacity and full
buffer occupancy. We need to continuously measure goodput and responsiveness and
as soon as we detect stability for both metrics we can ensure that the full
working conditions have been reached.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p, divided by the interval duration.
If p is negative (i.e., a time interval logically prior to the start of the test beginning,
used in moving average calculations),
the number of total bytes of data transferred within that
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>Start probing for responsiveness every 100ms, as described in the previous section.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>Compute the responsiveness</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached full link utilization.
Continue for 4 more iterations.</t>
      <t>If the responsiveness at interval i is more than a 5% reduction over the responsiveness at interval i - 1, the network
has not yet reached full buffer occupancy.
Continue for 4 more iterations.</t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api"><name>RPM Test Server API</name>

<t>The RPM measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for RPM test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the RPM test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for RPM test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for 
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>RPM Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host RPM Test Server instances on their
network so customers can determine what to expect about the quality of their connection to 
the service offered by that provider.
However, when a user performs an RPM test and determines
that they are suffering from poor RPM during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What’s causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?”</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover RPM Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host an RPM Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of an RPM Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the 
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the RPM Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The RPM Test Service instances should advertise using the service type <xref target="RFC6335"/> 
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting an RPM Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of RPM Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Will Hawkins and Jeroen Schickendantz for their tireless
enthousiasm around the project and their contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
<front>
<title>Domain names - concepts and facilities</title>
<author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'><organization/></author>
<date month='November' year='1987'/>
<abstract><t>This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1034'/>
<seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIABqh9mMAA9V965Ib15Hm//MUtdBuqHsHALt5s9gTCrt5kUybpNrslhUb
OxuKQtUBUGahCqpLg7CCDr3GRHheTk+y+WXmuVQBTVGz3g2v5+ImgDqXPHky
v7zWbDYzXdGV9iJ5a9ttXbXFra1s2yZ9ldsm+a5u3hXVKnlWV3nRFfS9SReL
xt5++u/zOqvSDU2QN+mymxW2W86K7XYzawYDzM7OTZ529sJk9P9XdbO/SNou
N6btF5uibWmsm/2Whnn54uYrk9U5TXOR9DTYF6bYNhdJ1/Rtd//s7MnZfZM2
Nr1Ibpq0oimazuxoWaum7rf0+FVyZZtl3WzSKrPJa5u2fWM3turMO7unH+b0
m6qzTWW72XMsmZbQpVX+fVrWFc2/t63ZFhfJ/+zqbJq0NHxjly39td/gj/9l
TNp367q5MEkyo/9LkqJqL5Jn8+QqTdtszR8JRZ6tm6Lt6u06/qpuaF+X221p
aR3ZnD9raQ7bXSTfVFa/ukqbd8l36Z6/zoqOqPWs39qmK6p6mjxLy4K2WBVp
8uTR2flD+VXdVx3I+m1VdDZPrjsidJvUy+RyY5siS/lXdpMW5UWSbXlFv0sx
2zyrN2a4nbdzIt3eNtFu3hKR0rKMPv/n2ErTbO7cxvWcDsG266Kx0U6uuz5t
uuE3/xx7yXRJd27om3lyvU63RZNG+/mGBhp8/M+xmZr2cudGvpsnv093JEza
aCPfFcRf8ce8EZrr1jYtLRATPSuqrKiqtCviudb80G79uz7DB/M+m9u8H835
mpg67dZFPCV90MWf8oxf1/WqtFMQb0C788dnZ7TT7bro1jalD5mGuwEJX4NE
aVElfy7sjsh4mSRPHp49fPDr6behpW14Zb9b8YKEjEXF0q0jokAGPe2XS9ss
yjrtLvjpIJ7oPzPZ+R/myde26/bt4NM/zpM3RbauS/lYFcUkHjF5DiaRT1p6
KqGNe/k5EeLQwm2LVRH/1JtNX9E+WDdgX/j95bPX0+TPddlvbPLo0TR5028W
xLHnycn9s/P7pzRKpDu6DLpjmf3myYNF0d69JWKgF3m+H6ycNYJqE+iorqnL
5KqpSZTTHyc3z65Ok+utzYqlLvFwB25vyYtqVVSWviF1d5O275Kv6iaDrHj7
1bMzWtyF/Hl+9uCh/vn4wYNH7s/fPL4f/nS//eLxufvBF795/Nj9ef/Jmfvz
7IH/7f1HTy6Mmc1mSbog/kszUlS0BOKKak9KKm1IJ6VJmWbvQOahsp0mt2lT
1H1b7pOMZLbNTZmupvTrzlbZfkpcnizCKU/p+rTJwtqKxsnqVVX8lZ6gj9KK
9D5xW9fTfaP7sOg7YuHNpq5YH267esM8Uefp/vM2IbJBE7dz84LWkdCR0imn
SW6zNLdYJb5N6GhY4aZNXvwV1O1stgbPlKRty545Z2qKjtZC94C4KNU5k21T
L0q7SWhFzFe2ypOeDo8mxIzNnhR4MnlX1bt2Qj9Iu4RGKdpkUuHClBN+ME1u
i9zWNGZF+7cACV1t1umtdeO3yW5Ny2/rjV3U+T6xZWsTGmxNH9BwZpd22RoL
T5OHf0w29W1hQdB+S7QEbEm2a+K4Nlk2RB5aZ9Hgk8rOze/rnaV1TvFpg7GS
qo62T6impW3K9ujLrqZD4Z1maUuPv6TviA/86SY/9La34Ih0xRAnEDA5Wf7w
PaEoW07p4Xd0dlcvX5zKNulHtyR7MK7umOj3Td/481PK09kHtprSUjvZUuC6
oycHJmlS7DD6ZbojzMZAUmWCO0tiBDqlNgwwN99Z2nZZEKXkEDOiSyf07mq6
x7t1TQeyCcgOkhKaM9namrTN560BlffElIl9v8XlxinvoFx4LKFpZTNaT9rs
w+KmBsuhTfdlB8YG727wEY6EVpz3GS2VF8VEHNHwBodGeLiXsxBBY1v+1eTt
1evkxradcKGsHpsa3lw65A483UY8z9KrZUptiOBpVbQbZg4lAd8BE+20dSKu
pPvPvCz75dMF1wmY3ymYzzyYn9MWhpSlH9PAtMaWOIYkwuQtabB81jXFtgXQ
Tl4XVd/ZSXJC+ztl8rXrui9zcC5p6rLP6cEd6UtaAyH01XpL7HHSb3k7eb2r
TvGXKXICJCqeME/W0IrAWAWtjWR13TDnuD380BM66fZzEZCbIqfHjfkM0ltO
iXbz/424TH78MVK5Hz7MzbW/xmXxzibuKtMPVV98+IA10ZXWj0hv0Ed8u3ld
QcBiZURpYnBwDGQaHWiHo92RGKQNFxu6Mjhrm8/NG1wcYpaSqSLXiQbDzWl5
iSIBImLQEVyWpJ3pZJO2IFqA76qORRzGJnkFiQ8WjS8j/YZlGxR2Qae7T2Cp
ssimiSEQLE2RdSIjuyQtCWW1JLrbgi4btoLxMSrJC+JwrJvON+JxmpiOlza4
sGDynhm446GXPSRBSmsjHoLAEnSDNS2xVeVOlRWOK1ksE06hDco9yfuGQYSI
NMgkHtgNt0kxd7KgHS8vTErXKi/6zazFmWAe3f0S+oCPmaZn5EfL7NJszTbr
Eb0yNVioLm7RN23HV8Mts93SWHSTL2m09ykOV9ZHJKH/Jb5O6izrG5Y9uYgg
VYlBI07NjhUUNG9FcpJ3SU/zXoikdMV3Fa5pXxGn0YGw8LNEAfqm6WZlAQWT
F23Tb4WPN6SDoI3XxJQ4vSptmnrHAkAVXA8NNxb9or+DpKYndePpgMcT4g6o
cScRcXwqtw4ErHnxnqxy7NtxSyzwoGEgfCHCSH7VzbZueD4zHGcoJSthSNL0
LUFHovfGkojMaLbnNWZqa5K2GDIt6c8mLVrRHR9Ti0aeoMu4TSyTuWjXzOM7
vklZx9wntwbPOoK4pR2TmCqdSWyyfstF8Mt98uKZdXIskOlu8sJVoPvPRY+A
PSEjp+CIHfZgISlwVvAXFN10TLu79Y/57DPSks2GTNCyXu1JuOBnRLdF3csu
CVNukkkkgSa0PJEGNGpLJvAirFyIQzLYtg670C4BS+li1YxRHIHsD32x5Tsn
YzMyrUnJ9tk6ydMunY/0O2tpvyKI/2RF22tIadE6SIFtnXBYpLnXJaZvMfKm
bphQGTgBO8SHcumIJUgusDg2k1fy2IQlWrKtPXSwR9SYoaEzvmYqXvm2ObTs
FrftiZMyHA8fA3ONCDSy3EiWQFWQGks3RVmkTXIy2YlYpvnpI2JCiwP77UQU
N1u0oFbXFxC49PtzMpI39Cs5F8ZKNFObkBGbg5WKjpRfXZEcIUBHlFwzQExk
3P8yOaV9vyS5YsFVxE4RZJOzP+qZPGSmiQFEUrmTlQQBZDU0JLYYEBgxqaDb
v/Rtx4w/jYYRTEiHnUyaCPuQJiNyCPZJhQ/kzgsp0/yWzpBgOR/T0edEJ+/q
2bIu84vkq4KOAqoP6yELRo0VGdSpxmSCidbFCpyLPxdk1dtmMk+YN4kCeZA+
+H1NNlgl3BaOCCOT7TRT2+maCS8amzhvZZ0wuk3LHjxucXpijKS8F/724Swv
VgULP7ui5ciju3WRrQ24BQIjlTESorUI75oQgcrnhg84XcHS4C3jLHTTw/Wy
aviqqIBnmSXER104thjKb4baE6A9GvGdQgUzoQc8qooPz/EEThizZymIA9u/
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

-->

</rfc>

