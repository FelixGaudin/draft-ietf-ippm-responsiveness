<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-00" category="exp" submissionType="IETF">

  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="July" day="11"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and its solutions.
We believe that creating a tool whose measurement matches people’s
everyday experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory –
that is, its effect is not always present.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
would help establish a new expectation
that the standard measures of network quality should
– in addition to throughput and idle latency –
also include latency under load, or, as we prefer to call it,
responsiveness under working conditions.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” – the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what is a millisecond?”) and
counterintuitive (“100 msec – that sounds good –
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is “the higher the better”. This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for car engines.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic – typical
for people’s use of the network –
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two communicating devices,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved to make it no longer
the lowest-capacity hop, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile –
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in other traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the RPM Test mimics normal network operations and data transfers,
to cause this bottleneck buffer to fill to capacity, and then
measures the resulting end-to-end latency under these operating conditions.
A well managed bottleneck queue will keeps its queue occupancy
under control, resulting in consistently low round-trip time
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>There are many different ways to define the state of “working conditions” to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
network is used at its nearly full capacity, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient
to reach the capacity of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
For higher throughput and/or networks with higher round-trip time,
TCP allows larger receive window sizes, up to 1 GB.
For most applications there is little reason to open multiple
parallel TCP connections in an attempt to achieve higher throughput.</t>

<t>However, it may take some time for a single TCP connection to ramp
up to full speed, and one of the goals of the RPM test is to quickly
load the network to capacity, take its measurements, and then finish.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the RPM Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the RPM Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions, and then end the test.
Because of this, using multiple simultaneous parallel connections
allows the RPM test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path’s capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-link-utilization" title="Reaching full link utilization">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” – the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that the network is used at its full capacity.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and – more importantly –
the working condition is stable.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load-generating connection” for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p, divided by the interval duration.
If p is negative (i.e., a time interval logically prior to the start of the test beginning,
used in moving average calculations),
the number of total bytes of data transferred within that
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
  <t>moving average stability during the period between intervals b and e:
Whether or not, for all b≤x&lt;e, the absolute difference is less than 5% between
the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1.
If all absolute differences are below 5% then the moving average has achieved stability.
If any of the absolute differences are 5% or more then the moving average has not achieved stability.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create four load-generating connections.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached full link utilization.
      <list style="symbols">
          <t>If no load-generating connections have been added within the last four intervals, add four more load-generating connections.</t>
        </list></t>
      <t>Else, the network has reached full link utilization with the existing load-generating connections. The current state is a candidate for stable working conditions.
      <list style="symbols">
          <t>If a) there have been load-generating connections added in the past four intervals and b) there has been moving average stability during the period between intervals i-4 and i,
then the network has reached full link utilization and the algorithm terminates.</t>
          <t>Otherwise, add four more load-generating connections.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when full link utilization is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Measuring responsiveness during the previously explained working conditions creation
is a continuous process during the duration of the test. It requires a sufficiently
large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests for a small
object. The probe requests are being sent in two ways:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection.
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections.
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>The former will provide 3 set of data-points. First, the duration of the TCP-handshake
(noted hereafter as tcp_foreign).
Second, the TLS round-trip-time (noted tls_foreign). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP latency between issuing the GET
request for a 1-byte object until the entire response has been received (noted http_foreign).</t>

<t>The latter will provide a single data-point between the time the HTTP GET request
for the 1-byte object is issued on the load-generating connection until the
full HTTP response has been received (noted http_self).</t>

<t>It is important to issue multiple of these probes. To have a large dataset, the
methodology requires a client to issue these probes every 100 milli-seconds.
For the probes on the load-generating connections, the client needs to use one of the
initial load-generating connections.
This means that every 100ms, 2 probes are being evaluated. The total amount of data
used for these probes would be no more than about 50KB worth of data within one second.</t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_foreign, tls_foreign, http_foreign, http_self (fromm the previous section). Each of these sets
will have a large number of sample. To aggregate the methodology proposes the following:</t>

<t>Among each set, we take the 90th percentile, thus resulting in 4 individual numbers.
To aggregate these individual numbers into a single responsiveness number, we suggest the following weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 / ((1/3*tcp_foreign + 1/3*tls_foreign + 1/3*http_foreign + http_self)/2)
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results" title="Interpreting responsiveness results">

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness" title="Elements influencing responsiveness">

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP “accelerators”), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence" title="Client side influence">

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network’s bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence" title="Network influence">

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP “accelerators”,…
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network’s use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence" title="Server side influence">

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness" title="Root-causing Responsiveness">

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don’t do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS 1.3.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual body content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD be terse in the headers returned in the response.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual body content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The server should discard the payload.
The actual POST body content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below). The server SHOULD specify the
content-type as application/json.
Sample JSON:</t>
</list></t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_https_download_url":"https://nq.example.com/api/v1/large",
    "small_https_download_url":"https://nq.example.com/api/v1/small",
    "https_upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>All of the fields in the sample configuration are required except “test_endpoint”.
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
“test_endpoint” field.</t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="rpm-test-server-discovery" title="RPM Test Server Discovery">

<t>It makes sense to host RPM Test Server instances in Internet
Data Centers where they can be accessed easily by users
wishing to test the quality of their Internet connection.
However, when a user performs an RPM test and determines
that they are suffering from poor RPM during download,
the logical next question might be,
“What’s causing my poor performance?
Is it poor buffer management by my ISP?
Is it poor buffer management in my home Wi-Fi Access point?
Something else?”</t>

<t>To help an end user answer this question, it will be useful for home gateway
equipment to host RPM Test Server instances.
In an example configuration, a user may have cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in the home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host an RPM Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<t>To aid in discoverability of these facilities,
local RPM Test Server instances SHOULD advertise the availability
of service type <xref target="RFC6335"/> “_nq._tcp” (Network Quality),
via DNS-Based Service Discovery <xref target="RFC6763"/>,
using Multicast DNS on its local link(s) <xref target="RFC6762"/>.
Where applicable, an RPM Test Server instance SHOULD also advertise
the availability of its service via unicast discovery,
for discovery by client devices not directly attached to the same link.
Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.
Similarly, a “cloud” service, providing Internet hosting service for
“example.com” could choose to include the relevant DNS-SD records
within the “example.com” domain <xref target="RFC6763"/> to communicate
to clients the list of available RPM Test Server instances.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of RPM Test Server instances.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>We would like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald and Will Hawkins for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference  anchor="RFC0793" target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor="RFC6335" target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='L.' surname='Eggert' fullname='L. Eggert'><organization /></author>
<author initials='J.' surname='Touch' fullname='J. Touch'><organization /></author>
<author initials='M.' surname='Westerlund' fullname='M. Westerlund'><organization /></author>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'><organization /></author>
<date year='2011' month='August' />
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference  anchor="RFC6762" target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'><organization /></author>
<author initials='M.' surname='Krochmal' fullname='M. Krochmal'><organization /></author>
<date year='2013' month='February' />
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference  anchor="RFC6763" target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'><organization /></author>
<author initials='M.' surname='Krochmal' fullname='M. Krochmal'><organization /></author>
<date year='2013' month='February' />
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference  anchor="RFC8766" target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'><organization /></author>
<date year='2020' month='June' />
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference  anchor="RFC8290" target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author initials='T.' surname='Hoeiland-Joergensen' fullname='T. Hoeiland-Joergensen'><organization /></author>
<author initials='P.' surname='McKenney' fullname='P. McKenney'><organization /></author>
<author initials='D.' surname='Taht' fullname='D. Taht'><organization /></author>
<author initials='J.' surname='Gettys' fullname='J. Gettys'><organization /></author>
<author initials='E.' surname='Dumazet' fullname='E. Dumazet'><organization /></author>
<date year='2018' month='January' />
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference  anchor="RFC8033" target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author initials='R.' surname='Pan' fullname='R. Pan'><organization /></author>
<author initials='P.' surname='Natarajan' fullname='P. Natarajan'><organization /></author>
<author initials='F.' surname='Baker' fullname='F. Baker'><organization /></author>
<author initials='G.' surname='White' fullname='G. White'><organization /></author>
<date year='2017' month='February' />
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC8446" target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2018' month='August' />
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>


<section anchor="example-server-configuration" title="Example Server Configuration">

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server" title="Apache Traffic Server">

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAK99zGIAA9V96ZIbyZHm/3iK2JLtdNUMABavVrNkMql4dIujJllisYc/
ZtZogcwAkKpEJjqPAqG2luk1xkz7cnqS9c/dIzISQLGbM9o1rWwPNiozDncP
98+P8JxOp6YrutJf2Le+3dRVW9z6yret7avcN/Z93dwU1dI+q6u86Ar6u3Hz
eeNvf/7zeZ1Vbk0T5I1bdNPCd4tpsdmsp81ogOn5ucld5y9MRv/vsm52F9Z/
3BjT9vN10bY01rvdhoZ5+eLd1yarc5rmwvY02Fem2DQXtmv6tntwfv7k/IFx
jXcX9l3jKpqi6cyWlrVs6n5Dr1/ZK98s6mbtqszbV961fePXvurMjd/Rgzk9
U3W+qXw3fY4l0xI6V+UfXFlXNP/Ot2ZTXNh/7+psYlsavvGLlv61W+Mf/8sY
13erurkw1k7p/1pbVO2FfTazV8612Yp/Eoo8WzVF29WbVfqnuqF9XW42pad1
ZDP+raU5fHdh31Re/3Tlmhv73u34z1nREbWe9RvfdEVVT+wzVxa0xapw9snj
8/uP5Km6rzqQ9buq6HxurzsidGvrhb1c+6bIHD/l164oL2y24RX91mG2WVav
zXg7b2dEup1vkt28JSK5skx+/8fYStOs79zG9YyY4NtV0fhkJ9dd75pu/Jd/
jL1kuqQ7N/RmZq9XblM0LtnPGxpo9PM/xmZq2sudG3lFAua6VdEm+6AfuvRX
3sY3db0s/QQbGe3j/pfn5zTrZlV0K+/oR97PdrSdV1iuKyr7b4Xf0pYurX3y
6PzRw8/fy5qWtuaV/XbJC5ItFRVrmo6UHPTB036x8M28rF13wW8PqoL+N5Wd
/+vMfuO7bteOfv39zL4uslVdys+qtE/SEe1zMEx+aektSxuPuuxEiEML9y1W
Rbys1+u+on2wnsa+8Pzls1cT+2912a+9ffx4Yl/36zlJz317+uD8/oMzGiXR
410GPb7Ifvnk4bxo797S+5l9kee70cpZO6tmh73omrq0V01NapX+cfru2dWZ
vd74rFjoEg93EPZmX1TLovL0FzI971x7Y7+umwzn9u3Xz85pcRfyzy8fPnwc
/vnLLx8M/wwPfPXLL78M/3zw5Dz88/xhfODB4yfhn48e0bNmOp1aNyehcxlZ
CpqXRKHakZVwDRkFZ0uX3YC2Y2s3sbeuKeq+LXc2I6Xpc1O65YSe7nyV7SYk
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

-->

</rfc>

