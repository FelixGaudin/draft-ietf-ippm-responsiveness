<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="21"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and its solutions.
We believe that creating a tool whose measurement matches people's
everyday experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the "RPM Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
would help establish a new expectation
that the standard measures of network quality should
-- in addition to throughput and idle latency --
also include latency under load, or, as we prefer to call it,
responsiveness under working conditions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we create the term "Responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is "the higher the better". This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "RPM Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport's congestion control that might
reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as "traditional" bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two communicating devices,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved to make it no longer
the lowest-capacity hop, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in other traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the RPM Test mimics normal network operations and data transfers,
to cause this bottleneck buffer to fill to capacity, and then
measures the resulting end-to-end latency under these operating conditions.
A well managed bottleneck queue keeps its queue occupancy
under control, resulting in consistently low round-trip time
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today's Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those "working conditions".
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>There are many different ways to define the state of "working conditions" to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The working conditions we try to achieve is a scenario where the path between the
measuring endpoints is utilized at its full end-to-end capacity. An ideal
sender could send at just this link-speed without building a queue on the
bottleneck. Thus, in order to measure the worst-case responsiveness we need to
ensure that a queue is building up on the bottleneck, meaning that responsiveness
is at its worst.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow"><name>From single-flow to multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the RPM test is to quickly
load the network, take its measurements, and then finish.
Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the RPM Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the RPM Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions, and then end the test.
Because of this, using multiple simultaneous parallel connections
allows the RPM test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-buffer-utilization"><name>Reaching full buffer utilization</name>

<t>The RPM Test gradually increases the number of TCP connections
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
as well as responsiveness continuously.
When both goodput and responsiveness stop changing, it means that the test
managed to fill the buffer of the bottleneck.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness during the previously explained working conditions creation
is a continuous process during the duration of the test. It requires a sufficiently
large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests for a small
object. There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as tcp_foreign).
Second, the TLS round-trip-time (noted tls_foreign). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted http_foreign).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted http_self).</t>

<t>tcp_foreign, tls_foreign, http_foreign and http_self are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data is available for calculation. In order to generate
as much data as possible, the methodology requires a client to issue these probes every 100ms.
For the probes on the load-generating connections, the client needs to use one of the
initial load-generating connections.
This means that every 100ms, 2 probes are being evaluated. The total amount of data
used for these probes would be no more than about 50KB worth of data within one second.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_foreign, tls_foreign, http_foreign, http_self (from the previous section). Each of these sets
will have a large number of samples. Use the following methodology to calculate a single RPM value
from these data:</t>

<t><list style="numbers">
  <t>Among each set, take the 90th percentile, thus resulting in 4 individual numbers (tcp_foreign_p90, tls_foreign_p90, http_foreign_p90, http_self_p90).</t>
  <t>Calculate the RPM as the weighted mean:</t>
</list></t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
((1/3*tcp_foreign_p90 + 1/3*tls_foreign_p90 + 1/3*http_foreign_p90 +
  http_self_p90)/2)
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explain what the meaning of
working conditions is and the definition of responsiveness, we can design the
final algorithm. In order to measure the worst-case latency we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in a 1-second interval. This will ensure that we quickly reach capacity and full
buffer occupancy. We need to continuously measure goodput and responsiveness and
as soon as we detect stability for both metrics we can ensure that the full
working conditions have been reached.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p, divided by the interval duration.
If p is negative (i.e., a time interval logically prior to the start of the test beginning,
used in moving average calculations),
the number of total bytes of data transferred within that
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>Start probing for responsiveness every 100ms, as described in the previous section.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>Compute the responsiveness</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached full link utilization.
Continue for 4 more iterations.</t>
      <t>If the responsiveness at interval i is more than a 5% reduction over the responsiveness at interval i - 1, the network
has not yet reached full buffer occupancy.
Continue for 4 more iterations.</t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api"><name>RPM Test Server API</name>

<t>The RPM measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for RPM test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the RPM test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for RPM test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below). The server SHOULD specify the
content-type as application/json.
Sample JSON:</t>
</list></t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_https_download_url":"https://nq.example.com/api/v1/large",
    "small_https_download_url":"https://nq.example.com/api/v1/small",
    "https_upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="rpm-test-server-discovery"><name>RPM Test Server Discovery</name>

<t>It makes sense to host RPM Test Server instances in Internet
Data Centers where they can be accessed easily by users
wishing to test the quality of their Internet connection.
However, when a user performs an RPM test and determines
that they are suffering from poor RPM during download,
the logical next question might be,
“What’s causing my poor performance?
Is it poor buffer management by my ISP?
Is it poor buffer management in my home Wi-Fi Access point?
Something else?”</t>

<t>To help an end user answer this question, it will be useful for home gateway
equipment to host RPM Test Server instances.
In an example configuration, a user may have cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in the home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host an RPM Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<t>To aid in discoverability of these facilities,
local RPM Test Server instances SHOULD advertise the availability
of service type <xref target="RFC6335"/> “_nq._tcp” (Network Quality),
via DNS-Based Service Discovery <xref target="RFC6763"/>,
using Multicast DNS on its local link(s) <xref target="RFC6762"/>.
Where applicable, an RPM Test Server instance SHOULD also advertise
the availability of its service via unicast discovery,
for discovery by client devices not directly attached to the same link.
Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.
Similarly, a “cloud” service, providing Internet hosting service for
“example.com” could choose to include the relevant DNS-SD records
within the “example.com” domain <xref target="RFC6763"/> to communicate
to clients the list of available RPM Test Server instances.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of RPM Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Will Hawkins and Jeroen Schickendantz for their tireless
enthousiasm around the project and their contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAH4CU2MAA9V965Ibx7Hm/3qK3lFsaOYcABzeZHNOOOzhRTJtkRxzRtaP
PRuMQncBaLPRDfVlQFghh15jI3xeTk+y+WVmXRrAUJTXu+F1+BwPAXR1VVZW
5pfXmk6npi/7yl1kb123aequvHW167psqAvXZt827fuyXmbPmroo+5K+N3Y+
b93tp/++aPLarukFRWsX/bR0/WJabjbraTsaYHp+3xS2dxcmp/+/bNrdRdb1
hTHdMF+XXUdj3ew2NMzLFzdfmrwp6DUX2UCD/dqUm/Yi69uh6x+cnz85f2Bs
6+xFdtPaml7R9mZL01q2zbChx6+yK9cumnZt69xlr5zthtatXd2b925HPyzo
N3Xv2tr10+eYMk2ht3XxzlZNTe/fuc5syovsf/RNPsk6Gr51i47+2q3xx/80
xg79qmkvTJZN6f+yrKy7i+zZLLuytstX/JFQ5NmqLbu+2azSr5qW1nW52VSO
5pHP+LOO3uH6i+xN7fSrK9u+z761O/46L3ui1rNh49q+rJtJ9sxWJS2xLm32
5PH5/Ufyq2aoe5D1m7rsXZFd90ToLmsW2eXatWVu+VdubcvqIss3PKPfWbxt
ljdrM17O2xmRbufaZDVviUi2qpLP/zWW0rbrO5dxPaNNcN2qbF2ykut+sG0/
/uZfYy25TunOBb2ZZdcruylbm6znDQ00+vhfYzENreXOhbwiBrP9quySddAH
ffopL+OrpllWboKFjNZx/4vzc3rrZlX2K2fpQ17PdrScV5iuLevsz6Xb0pIu
s+zJo/NHD3/5WtY0tTXP7HdLnpAsqaxZ0vQk5CAPng6LhWvnVWP7C346igr6
z1RW/odZ9pXr+103+vSPs+x1ma+aSj5WoX2Sjpg9x4bJJx09ldHCgyw7EeLQ
xF2HWdFeNuv1UNM6WE5jXfj95bNXk+zPTTWsXfb48SR7PaznxD33s9MH5/cf
nNEoiRzvc8jxRf6rJw/nZXf3kr6dZS+KYjeaOUtnlezQF33bVNlV25BYpT9O
b55dnWXXG5eXC53i4Qr82rIX9bKsHX1DqufGdu+zL5s2x7l9++Wzc5rchfz5
xcOHj/2fv/riQfzT/+DXv/riC//ngyfn/s/zh+EHDx4/8X8+ekS/NdPpNLNz
Yjqbk6ag9xIr1DvSErYlpWCzyubvQduxtptkt7Ytm6GrdllOQtMVprLLCf26
d3W+mxBrZ/O4tZNsZbts7lxN4+TNsi7/Sk/QR7YmxUss1g81PTmhZ3ri2/W6
qVkhbfpmzYzQFHb3eZcRraAKu5l5QfPIaB9pa21WuNwWDrPEtxntB2s82xbl
X0HS3uUrMEpF6q4amF0mpuxpLsT8xDpW35lt2mZeuXVGM2JmcnWRDbRj9EK8
sd2RBs1O3tfNtjuhH9g+o1HKLjupcUqqE37QZrdl4Roas6b1O2jpvjEre+v8
+F22XdH0u2bt5k2xy1zVuYwGW9EHNJzZ2j5fYeI2e/THbN3clg4EHTZES+CG
bLMiNuuyRUvkoXmWLT6p3cz8vtk6mucEn7YYK6ubZPkEKzpapiyPvuwb2hRe
aW47evwlfUd8EHY3+25wgwNH2CVjjEjA7HTx3TuCMa6a0MPvae+uXr44k2XS
j25J4GBcXTHR783Qhv1TytPeR7aa0FR7WVLkuqM7ByZpLVaY/NJuCTQxklNB
4PeSGIF2qYsDzMy3jpZdlUQp2cSc6NILvfuGDu921dCGrCO0gniE6so2riFx
/3lnQOUdMWXmPmxworHL25LQA48lNK1dTvOx7S5ObmIwHVr0UPVgbPDuGh9h
S2jGxZDTVHlSTMQ9Gt5g0wiQDrIXIl1cx786eXv1KrtxXS9cKLPHosYnlza5
B093Cc+zyOqYUmsiuK3Lbs3MoSTgM2CSlXZerlV0/pmXZb28u+A6QdNbRdN5
QNMzWsKYsvRjGpjm2BHHkEQ4eUtqq5j2bbnpgHSzV2U99O4kO6X1nTH5ulUz
VAU4t6zzaijowS0pSZoDQeTlakPscTpseDlFs63P8JcpC0IEKp7wnrylGYGx
SpobCeimZc7xa/huIHjQ72YiINdlQY8b8xlEtuwSreb/G3GZff99omd/+GFm
rsMxrsr3LvNHmX6oquOHHzAnOtL6EakQ+ohPN88rCljMjChNDA6OgUyjDe2x
tVsSg7Tgck1HBnvtipl5jYNDzFIxVeQ40WA4OR1PUSRAQgzagsuKVDLtbNaV
RAvwXd2ziMPYJK8g8cGi6WGk37Bsg5YuaXd3GUxFFtn0YggER6/Ie5GRfWYr
glYdie6upMOGpWB8jErygjgc86b9TXicXkzbSwucOzD5wAzc89CLAZLA0tyI
hyCwBNJgTgssVblTZYXnShbLBE5ogXJOiqFl5CAiDTKJB/bDrS3enc1pxYsL
Y+lYFeWwnnbYE7xHV7+APuBtptcz3KNp9jZfsdF4RK9MDCaqk5sPbdfz0fDT
7DY0Fp3kSxrtg8XmyvyIJPRf4uusyfOhZdlTiAhSlRg14sRsWUFB89YkJ3mV
9DSvhUhKR3xb45gONXEabQgLP0cUoG/aflqVUDBF2bXDRvh4TToI2nhFTInd
q23bNlsWAKrgBmi4fdEv+jtKanpSF25HPJ4Rd0CNe4mI7VO5dSBgzYsPZBZj
3Z5bUoEHDQPhCxFG8qtpycLn95nxOGMpWQtDkqbvCC8SvdeORGROb3ve4E1d
Q9IWQ9qK/mxt2Ynu+JhaNPIEHcZN5pjMZbdiHt/yScp75j45NXjWE8RP7ZjE
VOlMYpP1WyGCX85TEM+sk1OBTGeTJ64CPXwuegTsCRk5AUdssQYHSYG9gsFe
9pN92t2tf8xnn5GWbNdkA1bNckfCBT8jus2bQVZJmHKdnSQS6ISmJ9KARu3I
Bp3HmQtxSAa7zmMXWiVgKR2shjGKJ5D7big3fOZkbEamDSnZIV9lhe3tbE+/
s5YOM4L4z5a0vJaUFs2DFNjGC4e5LYIuMUOHkddNy4TKwQlYIT6UQ0csQXKB
xbE5+VoeO2GJlm2aAB3cETVmaOicj5mKVz5tHi37yW0G4qQc28PbwFwjAo3M
NZIlUBWkxuy6rErbZqcnWxHL9H76iJjQYcN+eyKKm81YUKsfSghc+v19sozX
9CvZF8ZK9KYuI8u1ACuVPSm/piY5QoCOKLligJjJuP/t5IzW/ZLkigNXETsl
kE32/qhr8JCZTgwgksqdvCIIILOhIbHEiMCISQXd/mXoemb8STKMYELa7Oyk
TbAPaTIih2AfK3wgZ15IaYtb2kOC5bxNR58TnbxtpoumKi6yL0vaCqg+zIcs
GDVWZFCvGrMTvGhVLsG5+HNOprxrT2YZ8yZRoIjSB79vyAarhdviFmFksp2m
ajtdM+FFYxPnLZ0XRre2GsDjDrsnxojltfC3j6ZFuSxZ+LklTUce3a7KfGXA
LRAYVsbIiNYivBtCBCqfW95gu4SlwUvGXuiix/Nl1fBlWQPPMkuIk7j0bDGW
3wy1T4D2aMT3ChXMCT0QUFW6eZ4nsMN4e25BHBj83QGkL9wCn0NT22rZEEZd
RWs0InzZLZLRdM7Knvg8CORfIAez5w54Cr4LmP9EjY6VbKvsC1xLxgChVSJ7
5zcmIQXO2MhHw5y5C0IcXxW7ms55Tuq4V5GSPjAx/BuabUvEGf9GkZD8pLIt
bX0tvhz6QUGbkzu1lKwAufCAVf4pSvybLK0dn/8enjI+jhtSgpuWdzfd2RF5
gm9mQ5amyCxYRks9zzLFck1885wQFYG3ioyCQX1R6rtS245FBJ+lpu+Jmi4n
SO7mc2bSBfEl0a0Bu5Rrghp6MGh685IVqpxvxhM8A8fOi89hIHTMju+d26j0
og8CaGxdZRWhMmgCsz274pd+8/wqkCuLqBP7iXhDl/36nH/36NHDCcPMnpZg
EvRNY4K6AHOeQnu8wLKbznM3zP/Cu9MQ0/dl60aP/klBA63x2rXY0+z0T831
Gc2IZDJ2hXCmyHVeHJvYOEgBivQ+SDKt7M7FpUA17Daw8Azb1mq488PKYV4x
R8Mgna3yoAz+ORAbSM+UzdXbx0+tSVb2hD/IKHQp49IjguuYG4eODYOo+cuR
zYy9aa1wnwgheJoIU9fvGWQlaIR07mbjmJGF5EYAh9jvHVnC7KnYO2lj15B/
LSNHMgXeh9/nhI1xsnks2hE1W8SvsxqWzlsf4PuedGrZ97ocMFfX5O8dBAMJ
HVv2XuAyEt1AWimiJEMRvjX6CkJawDkOWQ/+KglDBMuYbUs+4N2+jceSobNr
x+AcvoM+0vBkz4YM0l0Qf94O/B6aSTCxFUtELjfs/hJKE9sK4ZnTHTzrnkvo
BBNjTL29Z05pWT/9+Pd42n/68b/OslWzwZPRhMSxmbELAZIWcoAlG6hKSncL
K5t+yPa9urlhUIngY6koDj41XMEveAWifEtB+jS+Ij4xgHR69pYElg1GLi2Z
380Yn52QGwwbF5bZNQ1pvNCj75Vb9MmffvxfnbzMD7Fu1GhRCfmSSU62Op0k
Kyo0IsMsmBcOZhMb7xDXZo+sxwnozXc6XK4CyAvOspf46coR+zcApvBm+gfZ
GB4JK2YKQ6r3tuyFNDopKEKANm8hlmzvi5uDJmT2yS1+qEC6MHk5BbbXXX+5
iMTeOnGdzNmd0TbsOo3Asm4yvMO15givYQA+0eJNVouDR2UrbO5gmuiR3x57
+mBmtZjykHHuA23+ASt7/xvIDlKAUdk48aYlmcn0+aL84Ah+0QxwuJnHSQW7
9Yb3nwalH2C0sWLEfi5I2dEWkFjuYBrZ5McwO8QVQzq7Uf/omG+SwQyzC9b1
H6Ako2881e2/FLSTkwJXPKmcdjkQG+wmQovIRaqrxrwjh48+hoRfsjFBL0Ic
r16SZqThPPiEr/G2LAYIHni2YYKy/5aU4y37e9kyFi6Q40Qmv4EPg3aMrAbw
F+zUFsakWJAcpoBijTMCDmakQC+kY5S/nxJ9NuJVdDX4u6D/bdo1DoW+TQHd
rcJ+dmganOB0nnxwnl9/DZc/Tsm6IYjTTbIXYDvgOZ7/t+X0y3JinMXmwUzJ
de2OxGfhGD3YjhmSxJmrmo28HKxCzAqNsCOigaXUU+79S4uK9lph0daJO3LN
B4Ywp6A4FvIGG4I1g4aWpdBEzPPHX7yf3yPATbJ/Omx0AV4Z33/y5BybYb7C
bzgaE2jaKTzBAvnrLbAMMLb3YN1iVux6JXXzuum9hwk82JGhDIcVCfdla9de
EqVmIBkBfKQ0NNLB+aK2Ho6pRygsyoeW0VPCwQBpuue8ThXBkCONwCgoGvXX
TTyQxOREZHjYhHFieEJ/Bn1to6znxchZW8LQwPxm2aWoZ0SrAJHZWjA8LT7/
mDczhoAqHzhliETD38L5Jg7jiVFHyoIY5BWTGvJtYdsQ8Mouc4jj7Kohq2US
VBNgAG0qDcc7BFcG7Dx+PK/gP1WNnT5OmwULiA4UcyYBhAV4awtfGIPWvzQ7
tYRrss76A2jFNOFjbxL+ZDOydrTpHZnIWzbF2Whbz1ubO0FYOXHQvOWwPCcF
iCUEPmLYU9hN37H5W1XlUg6OrgD0Gpt0kHAkBMVbAgvmqUreBNBknwZoEgnq
9cthJJClU5kEUlg/L6IutNW66XoTUT+k6JrNW3YEjC1VfVJFmVhFLxf7gpre
weQ+nE2wltW5QZjVfcAuiwUkBqQ8RqtEVoMKd+F2PgoHDxjiR4ArtiCsQNsE
8fKGypjWw92Uuyf7JpNbtuJoh5y1YsqkiJbtTuLbQrybRdnlQSKT9BRHFpNE
YiUKnMYEEovZ+wrIPiH7GyAJEeoAgRp6pRqrHCcD6vTRAqDLJhxbeOXj+Ppi
kBCmGP9Owxxq6bjaBG+E7jPRF4uGR6hvpgD+Y/9uz559ndKen+KSzhG9SLa6
SKcihIfxK7aV/Buxh42FZ1bGVlttksyjZAuuY9CAbQH6jR401hbsQxj9iG3Q
fU//JTtM4X+5a3pssJJYZ4fLV42txMeS8Ku4cucOjvjWpR6gsIVil8Aa69QN
TJMxpLY/CLDc5yLx1dEu1N2FMffp3xoQjAhBxf2mLdcCatkA+/3NzdW9B4IC
br6+5sSqG7JdRQTEOSsCFAYBdNQY8gxJUBlr7o5kORbuLryG2W3ULNV3QyQu
1SVTwvGwGejQQfid8jwecrT3HuwjuKQqxgVpsE3ji6dvb67OZrCf/ZIwy/Kv
4gXBRv6puc7aoXKHTgrSTybY/DqAehErEleHbo4LI8yax2DLPHiRYDJvLOR5
BQzwABsxBopE7Pdgk50/0lWzY/lFdGHRzYhCws3z5oNCLiN+CMvTgJmNrQce
S1w3e8tmR6NrOTlsn/ICKqKAACzu2dpAlMnmPBGNNmmQlGx2eu+U4EBB2p9+
ylFhpCb98MMErBK/mqjvlfi/6+/piYFkeyjkYHCsECNG8mMOAPBSHX2zcJzX
MQ0EgpvGejTLgkEvphNxxGJggWSZMTI7FHwaJvseXKNvpXMGHQ9IrRiNzFM+
/YQzLOxWpKz00AO8dw/ONYIg3tNXwb2/Fy745q5MYvbyWYnDWoRI9xyQIrjj
KeONIdVZwhTJNhqeChHoWkKUvRPvVetAQQbSEis+ORKxmJnng5oNtCJio5zj
8Hvv3RPfR9R0cFthRxeNt2/gkeaMqlWz5cVgu6Cn1CNbwQLU85yvEIUtJCJ3
lFpjV3Q8iOzvgHpkUekjkz1D0mOLTuO2exI8u0nypNjl1kKZ191WlByTiTmZ
Rppl4siwOI+FaxaL4KiRmBtJqAqR3zyeSl6wKtnN0K28yeZ3kaYG3VWRku4l
HOCOuOuBJRWfKd0kXNblZM7RwU/cPAy9gv9o5UwMQ5Hi3QDxcpweNjYHttOU
hURDe7VOwJ5OY0ErM3DZsUbF6WH/nVWjmslUlTUZmhun6TgwU+dDWRWSAKDa
WeYU1eRM9UuZwB6/V73Qgh0W3QEnenhNFCQMO3h87d8E2OLfPmy84I8vnrB+
lO3g05MOzuEloQtPQHBZPwrVIEpUwtmhcU9OGbiTA0jka2A2eK6h5ARz2Vx2
Gek8OEJNsOyT5Ye9JuXhE9bMGpAmZGBAMY0GlMAiBkO6moJgxnoN6zxv+dJz
mI1JH/axKcXTe4kR8yo5dEcYVhM/OFi3t+UjI8FzqvidE7czOyuiy5zhpisM
baU3KKI3RDcAL3zeXE/FvSf0N+EEnrrZcjZha6oWFzGHQcjS4FqMM0VNssju
6F6uyw8miFmOrfDqhe002sBgjG2UEPcPwIzJrUA8APDUN83+GQmb0jh2eRCq
EC8R70btIKPG2XsxRmF8jCKI9c67vhM/rPe8HtlAhjZwt8kr2SKgIct6kDS2
QIePcT2tjaT7Z9mXsNvBh5WbsrMZpxysy/9CDoZ8yeAmyQiC+8C7GQcMDCYx
7LO3wlfRw8rBtJgeFQ0B8VQwt303lPl7YLNvOk2vffUU/n+HrSQNVjTbiaDf
6GVml67NHj7I1t2+mTAx9o6Z56zjRVSLS+I++yRiEgxZD0Ua8CkQxfOpXXtu
5USec0wgSnLJAduzM/mcs1e3xgpnEveTc6zfjRedIWeMGMTP9OksC+EiGPEx
EKbhImOXyzbaytBeoocRRlGe3XsFdNdtU4pZNazT7BfSUeum3bHE8cYGOygk
6SoQcpRW97ENrwUCmZAACW0QxWYWxGbcMWRvehjDr9TQqZi5IwH2eZeYwX5u
a/uhXA/r47F2zlYvOQflKLdsPQz2YRn/1uzIWzl13Qdlxe0voJUzG46/AEfG
rjdGNpipxpp6xuUyumFLmKf+HzAPGKpLmrieHINUrFQiTdRy6Ef5al10BijM
TtIrkiAdmd5dN51b4H6d8X6MNcovg0NP4iblPJqZ+GV4JOwxB2K9+kzGEy7U
FCseCZ+esjoooknm5SnMcjpTZ6gtQNa8oOEYEFSrYUQJwvZsy0oSorpwvNOL
Hx/7cPZ9BR7qKwzcDO2midHqYK9pxAtL11RkJgWHQ6Dbjc1bEOPAWFATiQ7V
JLhLrddHSXiWMI7TTO2758DKSrkCf9LPOHOW7bGOjgJcPMZme/rSKwjmI2j4
BWuP9PWdRMQK5DWScd7BhnUHLqoRSoy+nX0/TkxF9a6mhqGkV1hJGlZkWafm
Cvh/FvyoGoSYKKIKMoQXS/qUQ4ww/wmoVKlkMR5Cpccq8TLw6elR9sPuaiXq
RDaNRSDpaeNdhkDawL8++VWDRvzZ1nY973GSlxnivqwOrLx9UP13h7TgjCWW
SXy6ffyxQX6uHq2xz1Hsbo8LkcdjUXLGCHEmGODKU+a2y67F244A/Dcb2A28
hOfNtsY/jLlqODNghPc145D3go8rHxrx25bsYULcnaa1OmPTc9ggAmfXwfhE
KrB+VBCAzAV8fTkgHb0F5Sf8tKazQMCKyZntOXHFg2wlhMDzTWCToszHX6Wv
wwy+vnkRpnSWaU7EXl6PSaTKy+urTvKCjlqud2Z2HXUiiFHhZH1h8dBMEP+c
DwU8lXs11N/5Wp3dEHet8LsGH57uMVvKPh8ZeE91EzwsOITsAhrqqaQHxNQU
m6R45faWtDWXqTgBYdGSTV6FErbs97ZaTAualPvAO9IF5LiB9O3HZ/TI5FPX
mHedBhEgKT4anPO4E1yCrCCPRmhKe9SFBdnUeZIBhBFoK4BMfMhq0/R6ELpm
aHPx07FDes/VPM2eu/mwXCZZYVHyceyUc5BF81x4N08QR6Nk8mAGdKHYIXhX
OCtuu3I4FMxKzZwNsuiz91GjMSsoRweCJkdMUd2WIWGzXrN4dZIhf2wvuiAd
SBdGuaGPGElOgH8ZHleLdAEwKheddPJCyJu32CpOQEowong9JAlp7AVFZGbg
eiYOJXuNnzDkWEh2xtZJIvwJXPKE6k+yU8bBhARhdiAlsBqrLp60aGgwQTKi
aum6lIA3nY0zwwnv9DN7kNqZWmNSoiIMqBNRL+zoEdTqhyxGNgc9o9s+cLvx
sYwRDFWIvY9cyIhR7w/bIz71OQDtu3wYiaAT15cObT5mSo7jJogthKmHyoK4
ea3dlAUCG0SmCptnUlIH3Stubs5do2M3JY1FRs5mxeWQl2oi89om6WtIXNW9
sEuHlAMSu5IIrdphz/bhNVqFGRukueWIdTCzcekl1m+QdR3U9pz2b1sW/WqS
jT4/sEBFWBxYc5zXyYWtcwLevlBAxE7rnMA7NrKUB2AWsCoMNBzRFeDaoJzD
1xbsHQcfO96ggJJlmC2miWMm+SkHdpH9kT5eOavpPMlbe03wmxg+xCwdkiOc
lsnRYcfBqlEAoOnd3s9Rae3XET8H53z6AqPP7nbqGxO/2TtUxRAw0QY54+Ie
UU84fKGHvhU5HiSCSqk99gfZO+TTMcc1YIpJoV4lBYg9VdE3AguNnXwdJ3pw
LRh2hjNlUH5FUpMrOOpUe+jZSnVEVC/pWr3oJ/QF/y9rmLaZu6mGe3xNQUcW
RWXEx+h97FqMEKNR/KQPFGmg8lK8ol+9uPFfSMqfj6ulKPX0hF7mkMHOI3Wo
6+B4JSzWJPLNVIOBXEqYy09y6+aEZwmYaymRjCxIlrgTY+En6o5Mglo84gLV
FJmrArlkwA2cdgoCf/rx70h6+jBb9esKOaATw00ffMSi7YdNarpL2bhAROYY
8YnShCo71EimqoHOSHhnC6cV4qj5s3CzPThKPG+kfCBGVBf4Rw4mkZSzKP8x
eh6fPoaARfieBJZdIdmXCRyjOaSPNj1LnXDcR0N5oslLantbLuVARPKoYwD+
INCFZcvagrZkFfE++hJl9qx2pH1JZEtc0LLtclvSI+ms0IGHl89ppKyCF7QH
eDE78XdkaK3jNnAuG2xvzFXYRdISxxT2AU+xqnCimJCwzPBkUoc+b7EcDHvz
9XU6AqdA0QpQkM7ArYlkg05dzrgsOTkXkoOAJD+ERR+igLDzmcZTcSPOfHHQ
MYkzCvyaU+hdyVXQ9gu0iHzzTs/i2bjaB5OPGovxfqYj9FUXH0LDC7WuD5zU
nBan0Z24QRiZk6UAxVi8pdsXUVtSGjVLchnweKh5lFQ5zA0RJa1EMuIY4RiZ
6rajo4bhYnBcToUAD3VD6fYZcT4VkmolqUK9FP9ll2wmlK2Sjs+yq+wG5i5P
znuBy64bvHqgw278YZcTcn863yEsI0kNIraADvaSRX1g3m/Hqu/TTaRdDIJg
zEDBaRD5J+T4j1gnmbIJB/BAQvlHx9PmWuJu+BSp5e17gQg8flhbWkbvuGQ4
XS1kHZaasO8kZcvJiCj8nvCc5qRUMfWD5FdSvRh0qpRhMhklPtkiZdrXr/PX
bB4ACoTEfCkTqwASNfCchEd9uBG2Qagd3XPBsTbvV03BRa4pVohSkwms0T+d
IXe1yO6fn687SRhVl+g8ps58RH3Ie/UF4SSx6yw4mU1J5g0XeHwMH46McNun
85pkD/yMQEpJB3IoAoTHSVNMmh4uxTXnsaikM+w2Um6LKw6e97qRzRAvGRcD
Pz7/41PAN3HZMpXVbuH0Yt5nNTYv4ZReRpsnact2kPAlXlt6txfEj/isiBpl
/wLPbcJNo6rdxSfy5yRhztOQKOshKaYL4pKofYFXhHgxJmH4gKsQ3S+1EyRJ
wvMbzeKN6R4pi0kxNnNsIiNgXnOBpvEz6oTfFe6hskTW3CF7vPeVck/O4Yhz
bQ5pJRw9dImbl/bgUZpNL9MlAJPQ6t3myfmIXvJBSrPkE9AN/ySBQFDqWViK
d9pqCe7WwRfk2PKvaRF/+9vfzF7+z2+yL87pP9k9c3p6/97Df9ubUvbvGX86
npd+uj+57N8JF4znd+/BGb/VRzJG75Zi2JAIdEddMLdSkdispFFll547JRka
vpV9o4bBexeOupaSO2/pSBhcBI/kVZBFe8T2KbvokEX+Tun1xX7HlK308JA4
jAh4nmo4SGOpeEfSiHdaxWyRoHZNSERURD+KLo4ymaMTJqSauBirRb6yZCco
TtBYIHebSAPBkky7GwfS1aZmxdU5zhs+MKZTtxM7ie5PRfxwOkNLu67ZC3yQ
03SYbYgnqO/yIHxq9sOns+zbSKzRVD2NP+JiQtWnRbOlptZmDYiA5Rw3Vs/l
Qt30voWF3+l02n4/jnFQbEKjVj84+WYkmKKwlZ90x6xwttnUrWLmO42JaAqs
9ETJTq/eXN+wu569k/wRoZezYLZy2U/NfByzxtF7RQNocSZau8FAfRG6rkTP
p/8HEnFjZaM0JLhbWZ4EraHvy0fd8OLrWbTSSc25roiUFRxQgX06j8BjcQm3
yeOJ+B9hCZJzx6G7kRL8FuIArvjyglUwG76hqFSHTJnV1ziTkigZ7gku8HD7
PNpscQ1s+wqPZYmnb77juQT1GV5juH0frAj1/FtV0wkLx1llG5l6VH2CI4BL
g8E0cuMKGuC5+CEmGeukGFAOX3lsDKvyJUFr6TuzlLDoaTlzs4mWKsVnUHYl
TbY4vdeLBXFSJg4hoQykLqzlQdNofSkOAodLlwLKjl0R/T+wWIlFZiOeSLzx
kot7Dsrvvf3/PumDXmEHJ1mQ7BvhY4k+KK4Q4KAMP9qoRYNMXwZhd+yZkSPZ
u82Rs0UagMNQz3yC3N3nFZS5Fh8zgTxfH70nREdw13ZJiYA6SfZRHUa97Mfc
z/17w5RiK56PYu+ZPNSsN4Nin19ygMrDx38RFxx5fi8vE19rVdAvG5mT7yO+
zx7/9+jmhsNGWnv+8mGn2f1RRT2bnIjz7VwfvNJHndfStfaZ6FeRXo/Ucd37
2pxZuuB9Tfszy+NEGAFXvoTooyPsr4Snd+dqDkDDJ60GWbTff895RqgbEFfP
WvIxnVaCN/sJSeVegEozitgvwUIgSczXDO3KLUIPh9B+TjwTAlPZbyZNOAMu
0bwaXaZJ5B2LhqkUBWSjOkpUKozHl1jx0renZK9Jx8fuY/29aMzKJUtsBynh
kMyLUfuCBde01juNuEVydW4cj+G8I85llRRGQlht22gDCClRXsW8M0Tm2ZqV
ehWSMP2RYIcGDARvRbGUGoLSyYGDVtMK5b0xv+DOtIKZeYqQicuHYEFruw+a
uMcq6tpR3JWmCqgXXnMFUMViCOnsFAEDEhNEI8OoztN0oZl07dWub3J6ktS0
UftPXp/AsoNd9J2QwDwcUAsvS7PKuO906MthQphvkF5a4xwTbm35s4N4D7vX
exqpGDNkp5aBaoqwaVyjIWaY95qaQMdIrkN4z89ZLfa1u73MARpwLd6+gtMV
xJsdu5yQxfli/y2HfGbM8yEU62Lfp3AEgM6Bl5QEh7skXJiwh0FLW7T3DNyR
Re44xhhEstfsekkdWlNAHL9toW9K4mnpY/krz1ja0aSlydKLUC271a7jdHH+
2Zlk7XimOJUOShxeC/khaQ0YH4UTpCBVEK60uJOzkL+mfHB8wgK9o6XUDH3F
9YbYVTfyDHEGZkkM6oI9etDpEL6vZ+Lw44K/QE6D+n3mrhY1zUe264C4B01p
+GCIV0qjmnG3mnp0krGoeblccm5i/FF6TKRJn/BmzCQ6cqLHeS0xjyX7OoVN
nFJKBqrkBnIu2pQLToaNHyEmTSsvRDdCcIXzN7NslApuylHS/+fdXn8MXbtE
ILlAe/x69eYhVKu+DcOvgS+80kO/l9DtQ5avXz7DuGvUq8NDNPYVSpoqv2Y6
bCTJStYfGuv6VKdjKUxayiseHVcc7rc4Y1M/wFG6IvOAF4Roynu36aXLw5xL
xdBFC2nY0BzduMstPffu9Zub6xevb959/ebbyxvCInc2g0eX3Ms+bNS9B7qJ
d9ZQ7INq79Xn7jRQqdL4ycQWMUKzaWRG8UnvQYyRiNaYaJf0YOEmWyAfB0uc
NkXHU1J3m3TLnjtJxwuGWhoeJrhhmg0hndh9Sc7VeA9ktbzlzFKyZ2O9F5pj
Nt5cOYx/fEI8gXsYHDKs7APXBLI/o/Oe6ygrx4yqqNCMYoq+aZpn607cIuiP
LkmsqIjIfG+cnvvaecWqbcmBRAxz1pd/mj5D/+RZ9px7nJShOVfy09AhOKVf
2lzBz5fb7x4QM2tCQNfT72Oh/ChszJHkCSDlBXdZmOLdbBl/bIKhz/LRwUTi
IIjillW5LH06zWfZ65B/HvTCTaLomrnPl+FMGK1PE43hA4NHEejMXBEaspoJ
wF0aYnOQGOJKUFEifMOK94sR6TgVvo17KtZm2VO3a0S7dmOUmGZt+gascu48
6oCQPIoy/JRwUQjxcqhVkarwVN9z/c6V1HxPIJ/dFjlnkiIvhUNSBTEla30j
mzI5BhIms9nMK+ZxfLAqY4hPk91F7E2ObYKCXlaAB1iVmzb5Bo1+jeN938Pk
7A1Ga9FRn+lUahxxBfRsBnTcOpRQzJGjF/Wnruh6DcfLn/iwvUp6h9DOxoxX
9kVyA8tufECIH0ncTlLZ/fHY6CjhUJt1J6QKQr3aidmeiEod0B82M5aKOFnX
wtb7qCtW2YyBIFSQjzsG57Lv5noMVqWkVsCSYLVJ7HTml5G7u7YqiAeRImRb
p/ltPuuXHeARXYmt8LZpEMgR1/x+St4bSa7m8Jw2FAgBfx8kF50oRjkS29F/
zIeB2O6rmpy9zuLf49OsBYNBmxzBMqwY77bnAUxWktSOImGRqpJA4auhS5Qg
k82gNjInIB1NujN3ZfoHuyJ02k3735ckI7+WtXlSx9Udroh4QEtLw7x9p/Fo
H0rrcsl79sKj5C6247b+R1iAzflYSsw9eTuxxzreHLbLfAzRxKmmp61Uwu+7
PxNPBH4ezNixhXfEep9JZWovTQB634GMoLPYWRHc6Qx8tof5hGS6pOnB6Fm+
n+aIFjUqIiLYK6IRHD/0q5M8r4gTy8Uveht73iCpJQ1N5Y859vjPLNT78dJy
Aum+b0L3/fF+pq7oCG5+Fg1eduwP8/aTqNmw2XuV0kVTf97DyxdkuOOk9/H7
43pRJsMOggAjxqDMR4lZq2JrgxWi6SplF3sdkrhT8J10/B2XCwpvRQvK7oNA
LzSl+ak/w58G+UbKI6BxH3HYKzkI6mDLnes+izURqmMur17GYom9u1sw3Z5s
Zc7SXSDdICSAhUYHoUb9wry8moBw3DJmoghjRoI8ek/Q5S8MM+GW8DXbJDGd
B1mRP/34dz8s+kLGyOTErB23G5M7anaecN+8/VoFQkgEQhoadvLqm5sYWJEE
7GZhDt2RsEca1XpJv4IEZL765vqG8M+G7ZSDZko38Tn+YVLvK900Rolx3AEu
Q/xZnkxfkTwpAk0MuqaPxrphRkW5jeVstP0hVj7d3ru/pZ6UU/y492cdtjWZ
1eE4wrtahNvBcz5U4xC8dkmW7tbSzq6tvZEGmBQqw8esLqT6fKRYZ+xXOtak
WDudCnj2sQRM7utH10fqio06PARZ2+WgNWYvnt2c3j/z60G7JvSGmBi1RsrW
18v65BH2J4kADPl74opbQAzMaSAjSSfHip4PJxZKCN86tKRps2ffPH357EyM
im3ZqUeADyzatveO8Pv179988/VzbYMkzB0LTUeVbfTfty+evXn16sXr5y+e
49qQeLvHrqb/SUtvAogy6oIOg2oqOKp1piTNqiI8E9rJysbQhj2HdXaw3ulh
gbdf+Z/d0pJW+fLy+maSPX369szo+l6/ufnoGoMAZnOde5aLiuMoys901Nvv
cYcO15888845vghgTXu8VD+4cdq2ety/ewIbSZJi+JyEHJpCWw84LgyCj6wz
DM45TLlX3Mwmr2+1lVS8j5MemRCSHY2igUph8KLxKUwHjf2QyNT5+4lAKajP
Trspy05L5lfakbz0l4lpS0W5SoROFW6OzI0SRfsQSEFobIrZyKV9cs9E6Kro
6tuybWo580nrcniQfAgAZepyaVz5QQxXIOVq511p6EU8pv1/cOsE0Q8scrhr
poeiXIgl1wckFdt+pH313SCjDv0BtYc3esou60Zq15C3tcadhMizRctb0kT+
hq6Dhu7qh/AjJ2dy56uetZmyL9uOzrDQryBeBmGCg5W7SHeAGih6D6+P3Sbk
vpd81ZS5Ci1pG635wkHzsaLRkOT+iXJV6Q9UJ+1705qiVFUkquoR62Nf83PC
9UIn+Cw0jLtIH9dOaPK4NmRBbfkAxpObHx+cy5UF9zlpxO8WrlcMiVEDR/U6
7qvjVRy4tUUjX9ymMtJuKnMURohGkoemKGHiRoyxacG9hgxbso3ZPXtsnNH1
DlKgh5JhJLhM9gw/bLerisRhir6uhZa3pc5T9CCeae3PCXvP/jlEtEy40M2F
ZlGRCOqzX3/19J9LI36N8jjHb1phQy7f1hTEJe7xsrGfEjcu6ZL8LxHoXEr+
y3ZawZgvb5hznz1pL552gPTZeWx0cH2C3EGpXiy+SMj3F16NStTEF9/6SuQD
G97o9SDSNmTcQkU6Jl7W2YlkCv7czqL8pHIKGQOK9KF/285LiXWHnR3tpMYT
oB/5Vg0IPrvDe0dE5bH/aZTVFMj/53R9hPPC1ZBLX7BCtM20EVw/cMO+7A/X
b177CxEfP8GFiFKbEjxf4XJkviMtLFqu7RKBGQToqaTRSwTuTNwYdx4i87FD
9JcOzrFrGQ5z1Cz0702WnWhF1MlFdh8ZfidDW3X0j+85O0ckxDukk3fvPFe/
o5+cXJzwhxf37tXfzdSjgAug79lNee/2/j0RLRMZhYX1PzKKSHkdRZ4XDpCn
M/3Pz4yip4FG+QErBHXf+X5YNMgJ6boelRP3HzycqUHT4vkT84PkzV9WlRe4
KmejEaw9oRLGsK3z5TMFN4je9PLS/4xvDZ2qJatGttW/m8XbRq6gioJ+VC4b
Un6ki4permqwkjA3fzuOPBFryPHc2SSChchGfL0Erq6wa68Pzf7MhQKqq5V/
Ncv2qNs/2v7SgEWakPtQDZ+YEfnU6oBJXPmLatkS5wqntEvAxxwbZX3Y0eVY
N5cDD8iaac7H1ltw+w4yLxMO3R7P1VbYGVxgsuaaPlK+0kWeKbv/hORKap8/
3/ZX7sl55rgte2zUGdSeNJIBcxHIR+7PTq6cNuhAryZB76uOv4v3JYk1GpoL
pzmcAS+zcaq5OoRWIa5CZ+neOxliX3YTcSeHacNlRewTY6yIJ9V778++3tAl
qcok5D/0oWNqcLxPzE8//v1bGp07I3qH/nong+rUQLrfmpeMyflztUmSNu9E
HHro5fXVz/wO2c87ucFBLh3Qjv/M9b811w0c2Fw5VnXutz/9+F/cnJdvwrR1
uPY7NIJNu8Cyu9M757SlFniLXwbbb2t3Jtz1+PO8IrZVvEt1dH4maaaVFPHH
izeMFwqN3ydcjMg3JgTMwmBp4rmDuOy2tGZZoo1MH67twCQ5j1AvTBCS2YRk
QUZilbi8Vdt61vLuIJ5oIHlYZUkIA6alu3zhgSnScB3hDqbGJKRKcBCD+W50
QcUkc33O6YJEjeApijTxFwExzdMe6ntkF6Zl0ubi+q5ZAlufTx8bLqajq7+v
FBiDa7dwgW6HuCLfwM7dz5iNyq6pklY6I4MvnLAQr9G+NrFbGbpaBR4qOb8+
0D879RcY0TyO7NUZzylcadMM/ejxGfO6LTmb3DtExm2FYILYHJ8g4mw4RvYR
aacIxhYIAoWbZ8UbxsPCjxFYBJiGYdUXDx8+JlhFkuEdqfp3fb6BK/fU5wzo
3XBnE0M8mz1/fT19yp4Yf1FckM862q++QDNy7bL7CpktOWwWehAcxl2WeR2I
Np52Z+GpB0j1+VZ6VAjOUhfenSsOC+YbKP2qzf6q/ZVAfuVYBt/khVv6/OTF
tRj+yeVh47MDD4eouGqnNzfHknQ2ubGimbniBvpp5X560SHI8Fcccg9fjUfs
h3PiPk1tEXquqXzGTd9D37BTh4tSvDsi7sQV30kgoPlXX3yB/Wja4GDx7X9w
iQbJOl6sHmObrQaS38YWMJTZsSl3q0uTHdaeAToxFtM5EhQmu5qb6Uzkqiiy
GIaC76kSuk+SyGtQl5APnHime4PsJ3o2wZt83RQbRfmq0btj0pstA/nAmdfP
/XzSHm6HAxYNX+6TMKw2AtQr3qTPrrq3Wa2WnXQXCbXhH1EkBmkBJEHAe76M
U5KA6cg/fc7J3ZevLw++4w+TWnlWdcJjsqoRBMUBNj93aJmr/dHwfs7IYLSi
j6/jMn9fN9vKFUutob4GrrV85yL6uy0b0TUo+bfb91oWlv3BtQ0t4Zrswvw9
qRfan79m0Xff651NuJSGDN6utN06vXGWGCV0TfBiXpNgY1kmyemX0+dJFWu4
wsroufuq+RhyhnOQS0OTC7tFoDeyuuwttOvTFsFTRhb0RlfgEnsQYGO7cE+X
TIUH42Hk8Rdt+T67JHDebW1VhCFQptW30i80WxAsQGwi3IiBYcx0OpWIBe3A
C8Ujuj3PUliixcc+/I7b2nH9tV2GUKzaUmoLjTBNFzCRrfdzHVI6eSNFMkEu
N5B7mb/lQ2ZFxtyxj6VAjrmu901Csiez+7NzH5zr9q08vWwsnYsGMEa9lkAq
NVKaeK2B3NW1AhytBjKevO9TaIALvTZ770OFqICOslP7HT/6uOUrQ2T/KZU5
9FP6Jas0EPOefv47mcJvwpxmxBf+KwSE17+ZTvH6KUqbfyNjpm+bwcFw8MQa
FTA4+b/Z90WYT5i5JPbdMfEcO3jv149//eTJw0ePnzzYX0mgN63kU14mVt9H
X3b///Qd6rn6tK0YDY6t/t8zOQj2tpAAAA==

-->

</rfc>

