<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-00" category="exp">

  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="July" day="06"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem.
We believe that creating a tool whose measurement matches people’s
every day experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience especially when the network is under working conditions.
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory -
that is, its effect is not always present.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
make the standard “network quality measures” of
throughput, idle latency, and responsiveness.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” - the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what is a millisecond?”) and
counterintuitive (“100 msec - that sounds good -
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is “the higher the better”. This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for cars.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport layer traffic - typical
for people’s use of the network -
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is important to note that queueing only happens behind
a slow “bottleneck” link in the network,
and only occurs when sufficient traffic is present.
The RPM Test must ensure that buffers are actually full
for a sustained period, and only then make repeated latency
measurements in this particular state.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
Once the network has reached that state,
the algorithm can measure its responsiveness.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>There are many different ways to define the state of “working conditions” to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
network is used at its nearly full capacity, without generating DoS-like traffic
patterns (e.g., UDP flooding).
When reaching these stable conditions (called “saturation”) the latency on the
network is stable enough to allow to measure the responsiveness during that time.
Thus, the algorithm must detect when the network is reaching this point of saturation
to trigger the latency probes.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient to reach the capacity of a path.
For example, the 4MB constraints on TCP window size constraints
may not fill the pipe.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it hard to reach the path’s capacity.</t>

<t>The goal of the RPM Test is to keep the network in working conditions
in a sustained and persistent way.
It uses multiple TCP connections and gradually adds more TCP flows
until saturation is reached.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path’s capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-saturation" title="Reaching saturation">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” - the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that the network is used at its full capacity, meaning the path is saturated.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput gradually increases until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls
usually due to receive window limitations.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
saturation has been reached and - more importantly -
the working condition is stable.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load-generating connection” for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one (1) second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p. If p is less than 0, the number of total bytes of data transferred within the
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The average of the number of total bytes of data
transferred in the instantaneous average aggregate goodput at intervals p - x, for all 0≤x&lt;4.</t>
  <t>moving average stability during the period between intervals b and e: Whether or not the differences between the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1 (for all b≤x&lt;e) is less than 5%.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create four (4) load-generating connections.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached saturation.
      <list style="symbols">
          <t>If no load-generating connections have been added within the last four (4) intervals, add four (4) more load-generating connections.</t>
        </list></t>
      <t>Else, the network has reached saturation with the existing load-generating connections. The current state is a candidate for stable working conditions.
      <list style="symbols">
          <t>If a) there have been load-generating connections added in the past four (4) intervals and b) there has been moving average stability during the period between intervals i-4 and i,
then the network has reached stable saturation and the algorithm terminates.</t>
          <t>Otherwise, add four (4) more load-generating connections.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when saturation is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Note: It is tempting to envision an initial base round-trip time (RTT)
measurement and adjust the intervals as a function of that RTT.
However,
experiments have shown that this makes the saturation detection extremely
unstable in low RTT environments.
In the situation where the “unloaded” RTT is in the
single-digit millisecond range, yet the network’s RTT increases under load
to more than a hundred milliseconds, the intervals become much too low to
accurately drive the algorithm.</t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Once the network is in a consistent working conditions,
the RPM Test must “probe” the network multiple times
to measure its responsiveness.</t>

<t>Each RPM Test probe measures:</t>

<t><list style="numbers">
  <t>The responsiveness of the different steps to create a new connection,
all during working conditions.  <vspace blankLines='1'/>
To do this, the test measures the time needed to
establish a TCP connection on port 443,
establish a TLS context using TLS1.3 <xref target="RFC8446"/>, and
send an HTTP/2 GET request for a a one-byte object and wait for the response
to be fully received.
It repeats these steps multiple times for accuracy.</t>
  <t>The responsiveness of the network and the client/server networking stacks
for the load-generating connections themselves.  <vspace blankLines='1'/>
To do this, the load-generating connections multiplex an HTTP/2 GET
request for a one-byte object to get the end-to-end latency on the
connections that are using the network at full speed.</t>
</list></t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 4 times for each probe, namely:
TCP handshake, TLS handshake, HTTP/2 request/response on
separate (idle) connections, HTTP/2 request/response on load-generating connections.
This fine-grained data is useful, but not necessary for creating a useful metric.</t>

<t>To create a single “Responsiveness” (e.g., RPM) number,
this first iteration of the algorithm gives
an equal weight to each of these values.
That is, it sums the five time values for each probe,
and divides by the total number of probes to compute
an average probe duration.
The reciprocal of this, normalized to 60 seconds,
gives the Round-trips Per Minute (RPM).</t>

</section>
<section anchor="statistical-confidence" title="Statistical Confidence">

<t>The number of probes necessary for statistical confidence
is an open question.
One could imagine a computation of the variance and confidence interval
that would drive the number of measurements and balance the accuracy
with the speed of the measurement itself.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results" title="Interpreting responsiveness results">

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness" title="Elements influencing responsiveness">

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP “accelerators”), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence" title="Client side influence">

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network’s bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well-designed networking stack would ensure that queue-buildup in the TCP layer
layer is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence" title="Network influence">

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP “accelerators”,…
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network’s use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence" title="Server side influence">

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side. With the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness" title="Root-causing Responsiveness">

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don’t do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement uses standard protocols:
no new protocol is defined.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS 1.3.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual body content is irrelevant.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual body content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below).
Sample JSON:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "small_https_download_url": "https://networkquality.example.com/api/v1/small",
    "large_https_download_url": "https://networkquality.example.com/api/v1/large",
    "https_upload_url": "https://networkquality.example.com/api/v1/upload"
  }
}
]]></artwork></figure>
  </t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>TBD</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>We would like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald and Will Hawkins for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference  anchor="RFC0793" target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor="RFC1035" target='https://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference  anchor="RFC8290" target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author initials='T.' surname='Hoeiland-Joergensen' fullname='T. Hoeiland-Joergensen'><organization /></author>
<author initials='P.' surname='McKenney' fullname='P. McKenney'><organization /></author>
<author initials='D.' surname='Taht' fullname='D. Taht'><organization /></author>
<author initials='J.' surname='Gettys' fullname='J. Gettys'><organization /></author>
<author initials='E.' surname='Dumazet' fullname='E. Dumazet'><organization /></author>
<date year='2018' month='January' />
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference  anchor="RFC8033" target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author initials='R.' surname='Pan' fullname='R. Pan'><organization /></author>
<author initials='P.' surname='Natarajan' fullname='P. Natarajan'><organization /></author>
<author initials='F.' surname='Baker' fullname='F. Baker'><organization /></author>
<author initials='G.' surname='White' fullname='G. White'><organization /></author>
<date year='2017' month='February' />
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC8446" target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2018' month='August' />
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>


<section anchor="example-server-configuration" title="Example Server Configuration">

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server" title="Apache Traffic Server">

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample configuration file then is:</t>

<figure><artwork><![CDATA[
map https://networkquality.example.com/api/v1/large \
    http://localhost/cache/4294967296/ \
    @plugin=generator.so

map https://networkquality.example.com/api/v1/carry/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://networkquality.example.com/api/v1/carry/config \
    http://localhost/ \
    @plugin=statichit.so @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://networkquality.example.com/api/v1/carry/slurp \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAIP9xWIAA9V8bXMbR3bu9/kVfeFKTNYFIFKinBVTW3dpSraV6IUr0tGH
JOVqzDSAXg5mxtMzgrAu72+/5zmnu6cHAGkryYdNKnEoANN9+rw+56VnNptl
ne1Kc6k+GNfUlbOfTGWcU31VmFZ9rNt7W63UdV0VtrP0faYXi9Z8+v2/L+q8
0hvaoGj1sptZ0y1ntmk2s3a0wOzsLCt0Zy6znP67qtvdpTKfmyyzTXupurZ3
3dOzsxdnTzPdGn2p7lpd0fNtl21pz1Vb982len2jbky7rNuNrnKj3hrt+tZs
TNVl92ZHPyzoN1Vn2sp0s5egJ8tcp6viJ13WFdG4My5r7KX6967Op8rR8q1Z
Ovprt8Ef/5lluu/WdXuZKTWj/1PKVu5SXc/VjdYuX/NHctzrdWtdVzfr9Ku6
XV2qq6YpDdGRz/kzR3uY7lK9r4z/6ka39+qj3vHXue2IFdd9Y9rOVvVUXevS
0hErq9WL52fnF/Kruq868OzHynamULcdcdGpeqmuNqa1ueZfmY225aXKG6bo
Txq7zfN6k42P82FOrNuZNjnNB2KSLsvk87+Po7Tt5sFj3M5JCMatbWuSk9x2
vW678Td/H2fJPUkPHuj9XN2udWNbnZznPS00+vjv4zA1neXBg7wlBdPd2rrk
HPRBl37Kx/i+rlelmeIgo3Ocf3N2Rrs2a9utjaYP+Tzb0XHeglxtK/Vv1mzp
SFdKvbg4u3j25WfZEGkbpuxPKyZIjmQr9jQdeTD4g2/75dK0i7LW3SU/PbgK
+p+ZnPxf5up703U7N/r0X+fqnc3XdSkfe488SVdULyEw+cTRU4oOHn3ZRJhD
hBsHqkiW9WbTV3QOdsI4F35/df12qv6tLvuNUc+fT9W7frMg7TlXJ0/Pzp+e
0iqJk+5yOOll/k8vni2se/hIH+fqVVHsRpSzd95Y52h3BIOurUt109bkVumP
k7vrm1N125jcLj2JhycIZ1OvqpWtDH1DceVOu3v1Xd3msNsP312fEXGX8uf5
2bPn/s8/PH1xFv48e/Ysfvr8Rfjz4uKbyyybzWZKL0indE6BgJYlSVc7CgK6
JZ+vVanze7BuHKmm6pNubd27cqdy8ommyEq9mtKvO1PluylprloMkpuqtXZq
YUxF6+T1qrJ/pSfoI11R0CQN6vqKnpzSMx2p5WZDHKNw03T1hsVcF3r3tVPE
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
IUY8g5b8f4KXdCa5ZAAA

-->

</rfc>

