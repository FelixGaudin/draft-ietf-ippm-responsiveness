<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="13"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Including the responsiveness-under-working-conditions test
among other measurements of network quality (e.g., throughput
and idle latency) would raise awareness of the problem and
establish the expectation among users that their network providers deploy
solutions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>In order to minimize the effects of these challenges, 
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms 
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening in the network, i.e., on
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as in-network bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two endpoints
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path and a buffer to smooth bursts
of data is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in simultaneous traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the proposed Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck buffer to capacity, and then
measures the resulting end-to-end latency under these so-called working conditions.
A well-managed bottleneck queue keeps its occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines a Responsiveness Test that serves as a good
proxy for user experience. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (we target 20 seconds).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The Responsiveness Test defines working conditions as the condition where the path between the
measuring endpoints is utilized at its end-to-end capacity and the queue at the bottleneck link
is at (or beyond) its maximum occupancy. Under these conditions, the network connection's responsiveness
will be at its worst.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines 
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user 
quickly measure their network. As a result, the test must load the network, take its measurements, and then finish
as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the Responsiveness Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions.
Because of this, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>In this document, we impose an upper bound on the number of parallel load-generating
connections to 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="achieving-full-buffer-utilization"><name>Achieving Full Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition, once goodput is maximized, buffers will start filling up, creating the
"standing queue" that is characteristic of bufferbloat. At this moment the test starts
measuring the responsiveness until it, too, reaches saturation.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters serve as input to the test methodology. The following lists
their names, default values and explanation. Hereafter the detailed description of the
methodology will explain how these parameters are being used. Experience has shown
that these parameters allow for a low runtime and accurate results among a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving average distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be removed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness while achieving working conditions is a process of continuous measurement.
It requires a sufficiently large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted <spanx style="verb">http_s</spanx>).</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_s</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before probing for responsiveness, we are able to
accurately estimate how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for a
responsiveness probe. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a probe on a foreign connection to be around 5000 bytes.
On load-generating connections we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that at each responsiveness probing interval does
not send more than MPS (Maximum responsiveness Probes per Second - default to 100) probes per second.
The probes should be spread out equally over the duration of the interval with an
equal split between foreign and different load-generating connections. For the probes on
load-generating connections, the connection should be selected randomly for each probe.</t>

<t>This would result in a total amount of data per second of 300 KB or 2400Kb, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, this will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency and in such a way that the probing traffic does not consume
more than PTC (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_f, tls_f, http_f, http_l (from the previous section).
The responsiveness evolves over time as buffers gradually reach saturation. Once
the buffers are saturated responsiveness is stable over time. Thus, the aggregation
of the measurements considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over the timeframe of these intervals a potentially large number of samples has been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest to use a trimmed mean at the TMP (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
TM(tcp_f), TM(tls_f), TM(http_f), TM(http_l).</t>

<t>The responsiveness is then calculated as the weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
(1/6*(TM(tcp_f) + TM(tls_f) + TM(http_f)) +
  1/2*TM(http_s))
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explain what the meaning of
working conditions is and the definition of responsiveness, we can design the
final algorithm. In order to measure the worst-case latency we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in a ID (Interval duration - default to 1 second) interval. This will ensure that we quickly reach capacity and full
buffer occupancy. First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, responsiveness probes are being transmitted
until responsiveness stability is reached.</t>

<t>We consider both, goodput and responsiveness to be stable, when the standard deviation
of the past MAD intervals is within SDT (Standard Deviation Tolerance - default to 5%) of the last of the moving averages.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval i as current_average.</t>
          <t>If the standard deviation of the past 4 average goodput values is less than 5% of the current_average, declare saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput has saturated:
      <list style="symbols">
          <t>Compute the responsiveness at interval i as current_responsiveness.</t>
          <t>If the standard deviation of the past 4 responsiveness values is less than 5% of the current_responsiveness, declare saturation and report current_responsiveness.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute 4 iterations of the specific stage. Meaning, the moving average is
not taking the full window into account.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least 4
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the define standard deviation tolerance.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for Responsiveness Test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the Responsiveness Test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for Responsiveness Test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for 
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to 
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What’s causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?”</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of a Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the 
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/> 
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of Responsiveness Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Will Hawkins and Jeroen Schickendantz for their tireless
enthousiasm around the project and their contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
<front>
<title>Domain names - concepts and facilities</title>
<author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'><organization/></author>
<date month='November' year='1987'/>
<abstract><t>This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1034'/>
<seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAJCND2QAA9V9e5PjxpHn//UpcPRtqNtHcrrnZU1vKOzWzEgaex7t6ZYV
F7cXWpCoJuEmAQoFNIeWtaGvcRHeL+dPcvnLzHoAJEfju42Lvb3HjthAoSor
K/OXz5pMJqYt25W9yN5bt6krV97byjqXdVVhm+y7urkrq0X2vK6Ksi3p7yaf
zRp7/+nPF/W8ytf0gaLJb9tJadvbSbnZrCdNb4DJ2bkp8tZemDn9/4u62V1k
ri2Mcd1sXTpHY93sNjTMq5c3X5l5XdBnLrKOBvvclJvmImubzrUPz86enT00
eWPzi+ymySv6RNOaLU1r0dTdhl6/yq5sc1s367ya2+yNzV3X2LWtWnNnd/Rg
Qc9UrW0q205eYMo0hTaviu/zVV3R93fWmU15kf2Ptp6PM0fDN/bW0b92a/zj
fxqTd+2ybi5Mlk3o/2VZWbmL7Pk0u8pzN1/yT0KR58umdG29WaZ/qhta1+Vm
s7I0j/mUf3P0DdteZO8qq3+6ypu77Lt8x3+ely1R63m3sU1bVvU4e56vSlpi
VebZsydn54/lqbqrWpD126psbZFdt0Rol9W32eXaNuU856fsOi9XF9l8wzP6
XY6vTef12vSX835KpNvZJlnNeyJSvlolv//nWErTrI8u43pKm2DdsmxsspLr
tsubtv+X/xxrmeuUji7o3TS7XuabssmT9byjgXo//+dYTE1rObqQ76bZN/mW
hIlLFvJdSfyV/swLoW/d28bRBPGh52U1L6sqb8v0W0t+abv8XTfHD9NuPrVF
N/jmG2LqvF2W6Sfphzb9lb/4dV0vVnYM4vVod/707IxWulmW7dLm9CPTcNsj
4RuQKC+r7E+l3RIZL7Ps2eOzx4/+cfqtaWprntnvFjwhIWNZsXRriSiQQV92
t7e2ma3qvL3gt6N4ov+ZyMp/P82+tm27c71f/zDN3pbzZb2Sn1VRjNIRsxdg
EvnF0VsZLTzIz5EQhyZuHWZF/FOv111F62DdgHXh+cvnb8bZn+pVt7bZkyfj
7G23nhHHnmcnD8/OH57SKInuaOfQHbfz3zx7NCvd8SURA70sil1v5qwRVJtA
R7VNvcqumppEOf3j5Ob51Wl2vbHz8lanuL8Cv7bsZbUoK0t/IXV3k7u77Ku6
mUNWvP/q+RlN7kL+eX726LH+8+mjR0/8P3/z9GH8p3/286fn/oHPf/P0qf/n
w2dn/p9nj8KzD588uzBmMplk+Yz4L5+ToqIpEFdUO1JSeUM6Kc9W+fwOZO4r
23F2nzdl3bnVLpuTzLaFWeWLMT3d2mq+GxOXZ7O4y2M6Pi6bWVvROPN6UZV/
oTfop7wivU/c1nZ03ug8zLqWWHi9rivWh5u2XjNP1EW++8xlRDZoYjc1L2ke
GW0p7XKeFXaeFxazxF8z2hpWuHlTlH8BdVs7X4JnVqRtVx1zztiULc2FzgFx
Ua7fzDZNPVvZdUYzYr6yVZF1tHn0QXyx2ZECz0Z3Vb11I3ogbzMapXTZqMKB
WY34xTy7Lwtb05gVrd8CJLS1Web31o/vsu2Spu/qtZ3VxS6zK2czGmxJP9Bw
Zpu38yUmnmeP/5Ct6/vSgqDdhmgJ2JJtlsRxLrttiDw0z7LBL5Wdmm/qraV5
jvFrg7Gyqk6WT6jG0TJlefTHtqZN4ZXOc0evv6K/ER+E3c1+6GxnwRH5giFO
JGB2cvvD94Si7GpML9/R3l29enkqy6SH7kn2YFxdMdHvXdeE/VPK095HthrT
VFtZUuS6gzsHJmlyrDB5Mt8SZmMgqTLB7yUxAjEIkW7HC6C/lq2Lw03Nd5aI
sCqJbrKlc6JSK9RvazrV/ONaYJ7bG3qNvaLfN7YmPfSZM6D/jtg1sx82OPbY
/y3UDo8r1K7snGaaN7s47bHBaPSFbtWC5cHVa/yEzUpma26wcYSJO9kPETY6
sdEAU99Y1wpTyvyxqv5Bpj1vweIuOQIszJysjuifV6VbM68oEfhImGR5zku8
FYkDZm1ZJG82mFCw/Vax/Txg+ymtxvpheT30MA1Mc3TEQCQgRu9JoRWTtik3
Drg7e1NWXWtH2cn7qzenTDO3rLtVAUYmxb3qCnpxS+qT5kCAfbHcELecdBvh
g3pbneJfpiwIn6i0wnfmDc0IfFbS3Eh01w0zkl/DDx2BlXY3FXm5Lgt63Zhf
QZg3ddHNsZr/b6Rn9uOPiQb+6aepuQ6nelXe2cyfbHpQ1cdPP2FOdML1J1Ij
9BMfdp5XlLeYGVGauBocAxFHG9pia7ckFWnB5ZrOCfbaFlPzFqeFmGXFVJEz
RIPhuDieogiEhBi0BZcrUta0s5kriRbgu6pliYexSXxBAYBF0xNIz7Cog/4u
aXd3GQxXluD0YUgES5+YtyIy2yxfEehyJMldSUcdS8H4GJUEBnE45k37m/A4
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
sdfbI9odoXTxYgESfArDA8oIFmbomcj3UQRbKh/CwdAbkLOg/Bn+NPDXUyMB
l/v8v0F1fFAMW24T/6uDR1cVz+XVq4MZSYNrSrGIlmxpzVPukHaugYXgiQz9
5i7Mq6sxyDmWVr2CQDhnOXhX0Gg/DDPm69gqtlli5ifKfP7+89/8sLiaIUbL
x2YtmZziYt55cn77/rWKCUbBQJ+oscD+Xn1746kTCwfNvrsS9kqtWjHpPZiA
0DffXt8QPtqwHTPoTCw5A/oeP5g08HLStTWt+pBLRZATIW+mn0jelO0Rg69u
ozFvmH2Rmp1z4cVwiKWv6vY+bImscsotX79RhW1NZrU/jnC0Nr1yiOZ1q35a
iN5RJHdRSSt5vtLKn1QTWr31D4CQ6rNB3SZkw6ELgfSyEQHXPr6Jyb1+fH2g
j5dRh4gg73zRaY+Vl89vTs5P/XrQ9Zimczr2kReUh0tTKp/Oxf4mEYshIVZc
dbcQDjMayEga2KEmY/sTC+1z3lu0eG2y599++er5qRgd29Kpx4CPMRKUW0v4
/vqbd9++fgG2CMx9sLNTr8kL/d/3L5+/e/Pm5dsXL1+Q4I5K0O0q+l9ps4eA
sox6qz/S0h2tInCX56oIr4d7XmS7aBtfwKbbo8LkwCVXSo8/2UVOGuiry+ub
cfbll+9Pja767bubT115kNts7/MlZKIZOfT7C+3uh93lcd3UJy/CWcsX9KFo
xaeqmuROtt5Fx7NQVs7lKj6e51uzWm5QAScbXy6kyTmDvmJsM/vu1UkLukGu
PwghdYEok10per6tfdbhXkt95B46f1cvKAWt6/QSI9l0SdZMLwwr/cXamuCv
Rdr5AnUkc6NE0boW6WIQb6yoM3/9W6h7RZFJbFTQu0cMLigfQwhp77flB7F8
AbBXO++Lw31Bfdr/MwefRYGwTOIrLTyC5YYgcvNe0kPNjzTU+jWSYNGeX+/U
wr0vi6qWHioIpq/zgpeHAGBLqsrfVr1335o6MvzIyUnd+TInvfDId0+L3rTQ
QDDezGiChxYMmXPVGvqdhc/H/pJyHet8WZdzlWpytZOWzgfVyJpI8yiGJ8qu
Sn+gnFyxk5bMp7ok0WWPWWH7KveRI5G7GuG30IP9In2dQZ1/XVuwosVbB8Yr
GI4+PJM7CM85x8zv1qwudiGbr+OwoOMmul4HglsbXLaDy0576k/Fj+IMUVny
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
/+03NH70aVvRGxxb/b8BtoDHqdanAAA=

-->

</rfc>

