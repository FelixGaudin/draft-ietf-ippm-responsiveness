<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-00" category="exp">

  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="July" day="07"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem.
We believe that creating a tool whose measurement matches people’s
every day experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience especially when the network is under working conditions.
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory -
that is, its effect is not always present.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
make the standard “network quality measures” of
throughput, idle latency, and responsiveness.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” - the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what is a millisecond?”) and
counterintuitive (“100 msec - that sounds good -
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is “the higher the better”. This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for cars.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport layer traffic - typical
for people’s use of the network -
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is important to note that queueing only happens behind
a slow “bottleneck” link in the network,
and only occurs when sufficient traffic is present.
The RPM Test must ensure that buffers are actually full
for a sustained period, and only then make repeated latency
measurements in this particular state.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>There are many different ways to define the state of “working conditions” to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
network is used at its nearly full capacity, without generating DoS-like traffic
patterns (e.g., UDP flooding).</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient to reach the capacity of a path.
For example, the 4MB constraints on TCP window size constraints
may not fill the pipe.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it hard to reach the path’s capacity.</t>

<t>The goal of the RPM Test is to keep the network in working conditions
in a sustained and persistent way.
It uses multiple TCP connections and gradually adds more TCP flows
until full link utilization is reached.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path’s capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-link-utilization" title="Reaching full link utilization">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” - the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that the network is used at its full capacity.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput gradually increases until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls
usually due to receive window limitations.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and - more importantly -
the working condition is stable.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load-generating connection” for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one (1) second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p. If p is less than 0, the number of total bytes of data transferred within the
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The average of the number of total bytes of data
transferred in the instantaneous average aggregate goodput at intervals p - x, for all 0≤x&lt;4.</t>
  <t>moving average stability during the period between intervals b and e: Whether or not the differences between the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1 (for all b≤x&lt;e) is less than 5%.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create four (4) load-generating connections.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached full link utilization.
      <list style="symbols">
          <t>If no load-generating connections have been added within the last four (4) intervals, add four (4) more load-generating connections.</t>
        </list></t>
      <t>Else, the network has reached full link utilization with the existing load-generating connections. The current state is a candidate for stable working conditions.
      <list style="symbols">
          <t>If a) there have been load-generating connections added in the past four (4) intervals and b) there has been moving average stability during the period between intervals i-4 and i,
then the network has reached full link utilization and the algorithm terminates.</t>
          <t>Otherwise, add four (4) more load-generating connections.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when full link utilization is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Once the network is in a consistent working conditions,
the RPM Test must “probe” the network multiple times
to measure its responsiveness.</t>

<t>Each RPM Test probe measures:</t>

<t><list style="numbers">
  <t>The responsiveness of the different steps to create a new connection,
all during working conditions.  <vspace blankLines='1'/>
To do this, the test measures the time needed to
establish a TCP connection on port 443,
establish a TLS context using TLS1.3 <xref target="RFC8446"/>, and
send an HTTP/2 GET request for a a one-byte object and wait for the response
to be fully received.
It repeats these steps multiple times for accuracy.</t>
  <t>The responsiveness of the network and the client/server networking stacks
for the load-generating connections themselves.  <vspace blankLines='1'/>
To do this, the load-generating connections multiplex an HTTP/2 GET
request for a one-byte object to get the end-to-end latency on the
connections that are using the network at full speed.</t>
</list></t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 4 times for each probe, namely:
TCP handshake, TLS handshake, HTTP/2 request/response on
separate (idle) connections, HTTP/2 request/response on load-generating connections.
This fine-grained data is useful, but not necessary for creating a useful metric.</t>

<t>To create a single “Responsiveness” (e.g., RPM) number,
this first iteration of the algorithm gives
an equal weight to each of these values.
That is, it sums the five time values for each probe,
and divides by the total number of probes to compute
an average probe duration.
The reciprocal of this, normalized to 60 seconds,
gives the Round-trips Per Minute (RPM).</t>

</section>
<section anchor="statistical-confidence" title="Statistical Confidence">

<t>The number of probes necessary for statistical confidence
is an open question.
One could imagine a computation of the variance and confidence interval
that would drive the number of measurements and balance the accuracy
with the speed of the measurement itself.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results" title="Interpreting responsiveness results">

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness" title="Elements influencing responsiveness">

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP “accelerators”), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence" title="Client side influence">

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network’s bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well-designed networking stack would ensure that queue-buildup in the TCP layer
layer is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence" title="Network influence">

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP “accelerators”,…
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network’s use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence" title="Server side influence">

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side. With the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness" title="Root-causing Responsiveness">

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don’t do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement uses standard protocols:
no new protocol is defined.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS 1.3.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual body content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual body content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below). The server SHOULD specify the
content-type as application/json.
Sample JSON:</t>
</list></t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "small_https_download_url": "https://networkquality.example.com/api/v1/small",
    "large_https_download_url": "https://networkquality.example.com/api/v1/large",
    "https_upload_url": "https://networkquality.example.com/api/v1/upload"
  }
}
]]></artwork></figure>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>TBD</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>We would like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald and Will Hawkins for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference  anchor="RFC0793" target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor="RFC1035" target='https://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference  anchor="RFC8290" target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author initials='T.' surname='Hoeiland-Joergensen' fullname='T. Hoeiland-Joergensen'><organization /></author>
<author initials='P.' surname='McKenney' fullname='P. McKenney'><organization /></author>
<author initials='D.' surname='Taht' fullname='D. Taht'><organization /></author>
<author initials='J.' surname='Gettys' fullname='J. Gettys'><organization /></author>
<author initials='E.' surname='Dumazet' fullname='E. Dumazet'><organization /></author>
<date year='2018' month='January' />
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference  anchor="RFC8033" target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author initials='R.' surname='Pan' fullname='R. Pan'><organization /></author>
<author initials='P.' surname='Natarajan' fullname='P. Natarajan'><organization /></author>
<author initials='F.' surname='Baker' fullname='F. Baker'><organization /></author>
<author initials='G.' surname='White' fullname='G. White'><organization /></author>
<date year='2017' month='February' />
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC8446" target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2018' month='August' />
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>


<section anchor="example-server-configuration" title="Example Server Configuration">

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server" title="Apache Traffic Server">

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample configuration file then is:</t>

<figure><artwork><![CDATA[
map https://networkquality.example.com/api/v1/large \
    http://localhost/cache/4294967296/ \
    @plugin=generator.so

map https://networkquality.example.com/api/v1/carry/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://networkquality.example.com/api/v1/carry/config \
    http://localhost/ \
    @plugin=statichit.so @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://networkquality.example.com/api/v1/carry/slurp \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAGlix2IAA9VcW3Mbx5V+n1/RC1dishaASIlyIqZcG4qSbSW60CIdPexu
uRozTaDDwcx4eoYQ4lJ++37nnO6eHhCkrSQP2VSSogBM9+lz/c6lZzabZZ3t
SnOq3hvX1JWzt6Yyzqm+KkyrPtTtja2W6ryuCttZfJ/pxaI1t7/+90WdV3qN
DYpWX3cza7rrmW2a9awdLTA7OsoK3ZnTLMf/L+t2e6rMxybLbNOeqq7tXff4
6OjZ0eNMt0afqqtWV3i+7bIN9ly2dd+cqlcX6sK013W71lVu1BujXd+atam6
7MZs8cMCv6k601amm70gerLMdboqftRlXYHGrXFZY0/Vf3d1PlUOy7fm2uGv
7Zr++N8s0323qtvTTKkZ/qeUrdypOp+rC61dvuKP5Ljnq9a6rm5W6Vd1uzxV
Z01TGtCRz/kzhz1Md6reVcZ/daHbG/VBb/nr3HZgxXnfmLazVT1V57q0OGJl
tXr29Oj4RH5V91VHPPuhsp0p1GUHLjpVX6uztWltrvlXZq1tearyhin6o6bd
5nm9zsbHeT8H67amTU7zHkzSZZl8/u9xlLZd33uMyzmEYNzKtiY5yWXX67Yb
f/PvcZbck3Tvgd7N1eVKN7bVyXneYaHRx/8eh6lxlnsP8gYKpruVdck58EGX
fsrH+Laul6WZ0kFG5zj+6ugIuzYr262Mxod8ns3oOG+IXG0r9RdrNjjSmVLP
To5Onnz+WdYgbc2U/XHJBMmRbMWepoMHI3/wvL++Nu2irHV3yk8PrgL/mcnJ
/zRX35qu27rRp3+eq7c2X9WlfOw98iRdUb0ggcknDk8pHDz6sokwB4QbR1RB
lvV63Vc4BzthOhf9/uz8zVT9pS77tVFPn07V2369gPYcq4PHR8ePD7FK4qS7
nJz0df67Z08W1t1/pA9z9bIotiPK2TuvrXPYnYJB19alumhruFX8cXB1fnGo
LhuT22tP4t0ThLOpl9XSVgbfIK5caXejvqnbnOz2/TfnRyDuVP48Pnry1P/5
+8fPjsKfR0+exE+fPgt/npx8dZpls9lM6QV0SucIBFgWkq62CAK6hc/XqtT5
DbFuHKmm6la3tu5duVU5fKIpslIvp/h1Z6p8O4XmqsUgualaaacWxlRYJ6+X
lf0bnsBHukLQhAZ1fYUnp3img1qu1+AYwk3T1WsWc13o7ZdOgRMU6Nw8ewky
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
dyPJP8i7sm+bX3mIEc9IS/4P06GYs45iAAA=

-->

</rfc>

