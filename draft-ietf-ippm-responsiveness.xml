<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-00" category="exp" submissionType="IETF">

  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="July" day="11"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and its solutions.
We believe that creating a tool whose measurement matches people’s
everyday experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory –
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
would help establish a new expectation
that the standard measures of network quality should
– in addition to throughput and idle latency –
also include latency under load, or, as we prefer to call it,
responsiveness under working conditions.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” – the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what is a millisecond?”) and
counterintuitive (“100 msec – that sounds good –
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is “the higher the better”. This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for car engines.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic – typical
for people’s use of the network –
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two communicating devices,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved to make it no longer
the lowest-capacity hop, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile –
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in other traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the RPM Test mimics normal network operations and data transfers,
to cause this bottleneck buffer to fill to capacity, and then
measures the resulting end-to-end latency under these operating conditions.
A well managed bottleneck queue keeps its queue occupancy
under control, resulting in consistently low round-trip time
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>There are many different ways to define the state of “working conditions” to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
network is used at its nearly full capacity, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient
to reach the capacity of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
For higher throughput and/or networks with higher round-trip time,
TCP allows larger receive window sizes, up to 1 GB.
For most applications there is little reason to open multiple
parallel TCP connections in an attempt to achieve higher throughput.</t>

<t>However, it may take some time for a single TCP connection to ramp
up to full speed, and one of the goals of the RPM test is to quickly
load the network to capacity, take its measurements, and then finish.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the RPM Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the RPM Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions, and then end the test.
Because of this, using multiple simultaneous parallel connections
allows the RPM test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path’s capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-link-utilization" title="Reaching full link utilization">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” – the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that the network is used at its full capacity.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and – more importantly –
the working condition is stable.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load-generating connection” for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p, divided by the interval duration.
If p is negative (i.e., a time interval logically prior to the start of the test beginning,
used in moving average calculations),
the number of total bytes of data transferred within that
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
  <t>moving average stability during the period between intervals b and e:
Whether or not, for all b≤x&lt;e, the absolute difference is less than 5% between
the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1.
If all absolute differences are below 5% then the moving average has achieved stability.
If any of the absolute differences are 5% or more then the moving average has not achieved stability.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create four load-generating connections.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached full link utilization.
      <list style="symbols">
          <t>If no load-generating connections have been added within the last four intervals, add four more load-generating connections.</t>
        </list></t>
      <t>Else, the network has reached full link utilization with the existing load-generating connections. The current state is a candidate for stable working conditions.
      <list style="symbols">
          <t>If a) there have been load-generating connections added in the past four intervals and b) there has been moving average stability during the period between intervals i-4 and i,
then the network has reached full link utilization and the algorithm terminates.</t>
          <t>Otherwise, add four more load-generating connections.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when full link utilization is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Measuring responsiveness during the previously explained working conditions creation
is a continuous process during the duration of the test. It requires a sufficiently
large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests for a small
object. The probe requests are being sent in two ways:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection.
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections.
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>The former will provide 3 set of data-points. First, the duration of the TCP-handshake
(noted hereafter as tcp_foreign).
Second, the TLS round-trip-time (noted tls_foreign). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP latency between issuing the GET
request for a 1-byte object until the entire response has been received (noted http_foreign).</t>

<t>The latter will provide a single data-point between the time the HTTP GET request
for the 1-byte object is issued on the load-generating connection until the
full HTTP response has been received (noted http_self).</t>

<t>It is important to issue multiple of these probes. To have a large dataset, the
methodology requires a client to issue these probes every 100 milli-seconds.
For the probes on the load-generating connections, the client needs to use one of the
initial load-generating connections.
This means that every 100ms, 2 probes are being evaluated. The total amount of data
used for these probes would be no more than about 50KB worth of data within one second.</t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_foreign, tls_foreign, http_foreign, http_self (fromm the previous section). Each of these sets
will have a large number of sample. To aggregate the methodology proposes the following:</t>

<t>Among each set, we take the 90th percentile, thus resulting in 4 individual numbers.
To aggregate these individual numbers into a single responsiveness number, we suggest the following weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 / ((1/3*tcp_foreign + 1/3*tls_foreign + 1/3*http_foreign + http_self)/2)
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results" title="Interpreting responsiveness results">

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness" title="Elements influencing responsiveness">

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP “accelerators”), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence" title="Client side influence">

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network’s bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence" title="Network influence">

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP “accelerators”,…
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network’s use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence" title="Server side influence">

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness" title="Root-causing Responsiveness">

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don’t do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below). The server SHOULD specify the
content-type as application/json.
Sample JSON:</t>
</list></t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_https_download_url":"https://nq.example.com/api/v1/large",
    "small_https_download_url":"https://nq.example.com/api/v1/small",
    "https_upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>All of the fields in the sample configuration are required except “test_endpoint”.
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
“test_endpoint” field.</t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="rpm-test-server-discovery" title="RPM Test Server Discovery">

<t>It makes sense to host RPM Test Server instances in Internet
Data Centers where they can be accessed easily by users
wishing to test the quality of their Internet connection.
However, when a user performs an RPM test and determines
that they are suffering from poor RPM during download,
the logical next question might be,
“What’s causing my poor performance?
Is it poor buffer management by my ISP?
Is it poor buffer management in my home Wi-Fi Access point?
Something else?”</t>

<t>To help an end user answer this question, it will be useful for home gateway
equipment to host RPM Test Server instances.
In an example configuration, a user may have cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in the home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host an RPM Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<t>To aid in discoverability of these facilities,
local RPM Test Server instances SHOULD advertise the availability
of service type <xref target="RFC6335"/> “_nq._tcp” (Network Quality),
via DNS-Based Service Discovery <xref target="RFC6763"/>,
using Multicast DNS on its local link(s) <xref target="RFC6762"/>.
Where applicable, an RPM Test Server instance SHOULD also advertise
the availability of its service via unicast discovery,
for discovery by client devices not directly attached to the same link.
Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.
Similarly, a “cloud” service, providing Internet hosting service for
“example.com” could choose to include the relevant DNS-SD records
within the “example.com” domain <xref target="RFC6763"/> to communicate
to clients the list of available RPM Test Server instances.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of RPM Test Server instances.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>We would like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald and Will Hawkins for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference  anchor="RFC0793" target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor="RFC6335" target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author initials='M.' surname='Cotton' fullname='M. Cotton'><organization /></author>
<author initials='L.' surname='Eggert' fullname='L. Eggert'><organization /></author>
<author initials='J.' surname='Touch' fullname='J. Touch'><organization /></author>
<author initials='M.' surname='Westerlund' fullname='M. Westerlund'><organization /></author>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'><organization /></author>
<date year='2011' month='August' />
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference  anchor="RFC6762" target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'><organization /></author>
<author initials='M.' surname='Krochmal' fullname='M. Krochmal'><organization /></author>
<date year='2013' month='February' />
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference  anchor="RFC6763" target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'><organization /></author>
<author initials='M.' surname='Krochmal' fullname='M. Krochmal'><organization /></author>
<date year='2013' month='February' />
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference  anchor="RFC8766" target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'><organization /></author>
<date year='2020' month='June' />
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference  anchor="RFC8290" target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author initials='T.' surname='Hoeiland-Joergensen' fullname='T. Hoeiland-Joergensen'><organization /></author>
<author initials='P.' surname='McKenney' fullname='P. McKenney'><organization /></author>
<author initials='D.' surname='Taht' fullname='D. Taht'><organization /></author>
<author initials='J.' surname='Gettys' fullname='J. Gettys'><organization /></author>
<author initials='E.' surname='Dumazet' fullname='E. Dumazet'><organization /></author>
<date year='2018' month='January' />
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference  anchor="RFC8033" target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author initials='R.' surname='Pan' fullname='R. Pan'><organization /></author>
<author initials='P.' surname='Natarajan' fullname='P. Natarajan'><organization /></author>
<author initials='F.' surname='Baker' fullname='F. Baker'><organization /></author>
<author initials='G.' surname='White' fullname='G. White'><organization /></author>
<date year='2017' month='February' />
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC8446" target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2018' month='August' />
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>


<section anchor="example-server-configuration" title="Example Server Configuration">

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server" title="Apache Traffic Server">

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAK2UzGIAA9V96ZIjx5Hm/3yK2JLtsGoGQFdfFLtkMqn6INUjdnepqzj9
Y2aNFsgMAKlKZIJ5FBqiUabXGDPty+lJ1j93jyMBVJOc0a5pZXs0UZlxuHu4
f36E53Q6zfqyr9yFee+6TVN35Z2rXdeZoS5caz407W1ZL82Lpi7KvqS/Z3Y+
b93dT3++aPLarmmCorWLflq6fjEtN5v1tB0NMD0/zwrbu4ssp/932bS7C+M+
brKsG+brsutorJvdhoZ5/ermyyxvCprmwgw02BdZuWkvTN8OXf/o/PzZ+aPM
ts5emJvW1jRF22dbWtaybYYNvX5lrly7aNq1rXNn3jjbDa1bu7rPbt2OHizo
mbp3be366UssmZbQ27r41lZNTfPvXJdtygvz732TT0xHw7du0dG/dmv8439l
mR36VdNeZMZM6f8aU9bdhXkxM1fWdvmKfxKKvFi1Zdc3m1X6p6alfV1uNpWj
deQz/q2jOVx/Yd7VTv90Zdtb88Hu+M952RO1Xgwb1/Zl3UzMC1uVtMW6tObZ
0/OHT+SpZqh7kPWbuuxdYa57InRnmoW5XLu2zC0/5da2rC5MvuEV/dZitlne
rLPxdt7PiHQ71ya7eU9EslWV/P6PsZW2Xd+7jesZMcF1q7J1yU6u+8G2/fgv
/xh7yXVJ927o3cxcr+ymbG2yn3c00Ojnf4zNNLSXezfyhgTM9quyS/ZBP/Tp
r7yNr5pmWbkJNjLax8PPz89p1s2q7FfO0o+8n+1oO2+wXFvW5t9Kt6UtXRrz
7Mn5k8c/fy9rWtqaV/bbJS9ItlTWrGl6UnLQB8+HxcK186qx/QW/HVUF/W8q
O//XmfnK9f2uG/36+5l5W+arppKfVWmfpCOal2CY/NLRW4Y2HnTZiRCHFu46
rIp42azXQ037YD2NfeH5yxdvJubfmmpYO/P06cS8HdZzkp6H5vTR+cNHZzRK
osf7HHp8kf/y2eN52d2/pQ8z86oodqOVs3ZWzQ570bdNZa7ahtQq/eP05sXV
mbneuLxc6BIPd+D3Zl7Vy7J29BcyPTe2uzVfNm2Oc/v+yxfntLgL+efnjx8/
9f/85eeP4j/9A1/88vPP/T8fPTv3/zx/HB549PSZ/+eTJ/RsNp1OjZ2T0Nmc
LAXNS6JQ78hK2JaMgjWVzW9B27G1m5g725bN0FU7k5PSdEVW2eWEnu5dne8m
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

-->

</rfc>

