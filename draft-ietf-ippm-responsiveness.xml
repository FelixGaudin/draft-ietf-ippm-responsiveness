<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="21"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and its solutions.
We believe that creating a tool whose measurement matches people's
everyday experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the "RPM Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
would help establish a new expectation
that the standard measures of network quality should
-- in addition to throughput and idle latency --
also include latency under load, or, as we prefer to call it,
responsiveness under working conditions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we create the term "Responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is "the higher the better". This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "RPM Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport's congestion control that might
reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as "traditional" bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two communicating devices,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved to make it no longer
the lowest-capacity hop, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in other traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the RPM Test mimics normal network operations and data transfers,
to cause this bottleneck buffer to fill to capacity, and then
measures the resulting end-to-end latency under these operating conditions.
A well managed bottleneck queue keeps its queue occupancy
under control, resulting in consistently low round-trip time
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today's Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those "working conditions".
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>There are many different ways to define the state of "working conditions" to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The working conditions we try to achieve is a scenario where the path between the
measuring endpoints is utilized at its full end-to-end capacity. An ideal
sender could send at just this link-speed without building a queue on the
bottleneck. Thus, in order to measure the worst-case responsiveness we need to
ensure that a queue is building up on the bottleneck, meaning that responsiveness
is at its worst.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow"><name>From single-flow to multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the RPM test is to quickly
load the network, take its measurements, and then finish.
Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the RPM Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the RPM Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions, and then end the test.
Because of this, using multiple simultaneous parallel connections
allows the RPM test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-buffer-utilization"><name>Reaching full buffer utilization</name>

<t>The RPM Test gradually increases the number of TCP connections
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
as well as responsiveness continuously.
When both goodput and responsiveness stop changing, it means that the test
managed to fill the buffer of the bottleneck.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness during the previously explained working conditions creation
is a continuous process during the duration of the test. It requires a sufficiently
large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests for a small
object. There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as tcp_foreign).
Second, the TLS round-trip-time (noted tls_foreign). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted http_foreign).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted http_self).</t>

<t>tcp_foreign, tls_foreign, http_foreign and http_self are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data is available for calculation. In order to generate
as much data as possible, the methodology requires a client to issue these probes every 100ms.
For the probes on the load-generating connections, the client needs to use one of the
initial load-generating connections.
This means that every 100ms, 2 probes are being evaluated. The total amount of data
used for these probes would be no more than about 50KB worth of data within one second.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_foreign, tls_foreign, http_foreign, http_self (from the previous section). Each of these sets
will have a large number of samples. Use the following methodology to calculate a single RPM value
from these data:</t>

<t><list style="numbers">
  <t>Among each set, take the 90th percentile, thus resulting in 4 individual numbers (tcp_foreign_p90, tls_foreign_p90, http_foreign_p90, http_self_p90).</t>
  <t>Calculate the RPM as the weighted mean:</t>
</list></t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
((1/3*tcp_foreign_p90 + 1/3*tls_foreign_p90 + 1/3*http_foreign_p90 +
  http_self_p90)/2)
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explain what the meaning of
working conditions is and the definition of responsiveness, we can design the
final algorithm. In order to measure the worst-case latency we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in a 1-second interval. This will ensure that we quickly reach capacity and full
buffer occupancy. We need to continuously measure goodput and responsiveness and
as soon as we detect stability for both metrics we can ensure that the full
working conditions have been reached.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p, divided by the interval duration.
If p is negative (i.e., a time interval logically prior to the start of the test beginning,
used in moving average calculations),
the number of total bytes of data transferred within that
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
  <t>moving average stability during the period between intervals b and e:
Whether or not, for all b≤x&lt;e, the absolute difference is less than 5% between
the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1.
If all absolute differences are below 5% then the moving average has achieved stability.
If any of the absolute differences are 5% or more then the moving average has not achieved stability.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>Start probing for responsiveness every 100ms, as described in the previous section.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>Compute the responsiveness</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached full link utilization.
Continue for 4 more iterations.</t>
      <t>If the responsiveness at interval i is more than a 5% reduction over the responsiveness at interval i - 1, the network
has not yet reached full buffer occupancy.
Continue for 4 more iterations.</t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api"><name>RPM Test Server API</name>

<t>The RPM measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for RPM test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the RPM test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for RPM test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below). The server SHOULD specify the
content-type as application/json.
Sample JSON:</t>
</list></t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_https_download_url":"https://nq.example.com/api/v1/large",
    "small_https_download_url":"https://nq.example.com/api/v1/small",
    "https_upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="rpm-test-server-discovery"><name>RPM Test Server Discovery</name>

<t>It makes sense to host RPM Test Server instances in Internet
Data Centers where they can be accessed easily by users
wishing to test the quality of their Internet connection.
However, when a user performs an RPM test and determines
that they are suffering from poor RPM during download,
the logical next question might be,
“What’s causing my poor performance?
Is it poor buffer management by my ISP?
Is it poor buffer management in my home Wi-Fi Access point?
Something else?”</t>

<t>To help an end user answer this question, it will be useful for home gateway
equipment to host RPM Test Server instances.
In an example configuration, a user may have cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in the home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host an RPM Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<t>To aid in discoverability of these facilities,
local RPM Test Server instances SHOULD advertise the availability
of service type <xref target="RFC6335"/> “_nq._tcp” (Network Quality),
via DNS-Based Service Discovery <xref target="RFC6763"/>,
using Multicast DNS on its local link(s) <xref target="RFC6762"/>.
Where applicable, an RPM Test Server instance SHOULD also advertise
the availability of its service via unicast discovery,
for discovery by client devices not directly attached to the same link.
Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.
Similarly, a “cloud” service, providing Internet hosting service for
“example.com” could choose to include the relevant DNS-SD records
within the “example.com” domain <xref target="RFC6763"/> to communicate
to clients the list of available RPM Test Server instances.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of RPM Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Will Hawkins and Jeroen Schickendantz for their tireless
enthousiasm around the project and their contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
mIQUuGMDHw1z5jYIcXw121Z0z3NSx52KlPSBkeHf0GobIs7wN4qE5Celbejo
K/Hl0A9mdDi5U0vJCpALD1jln1mBf5OlteX738FTxtdxTUpw3fDppic7IE/w
zazJ0hSZBctoofdZllisiG9eEKIi8FaSUdCrL0p9V2rbsYjgu1R3HVHT5QTJ
3XTKTDonviS61WCXYkVQQy8GLW9asEKV+814glfg2HnxJQyEltnx2rm1Si/6
IIDGxpVWESqDJjDb8wue9MOLi0CuLKJOnCfiDW321Sn/7tGjhyOGmR1twSTo
m8YEdQHmPIV2eIFlN93ntp/+hU+nJqbvisYNHv2Tggba46VrcKbZ8Z/qyxNa
EclknArhTJHrvDk2sXGRAhTpfJBkXNqti1uBatiuYeEZtq3VcOeHlcO8Yo6G
Qbpa5UEZ/EsgNpCeKZurt4+fWpGs7Ah/kFHoUsalRwTXMTf2LRsGUfMXA5sZ
Z9NY4T4RQvA0EaaurhlkJWiEdO567ZiRheRGAIfY7y1Zwuyp2LlpQ9eQn5aR
I5kC1+H3OWFj3Gwei05EzRbx6yz7hfPWB/i+I51adJ1uB8zV1vm1g2AgoWOL
zgtcRqJrSCtFlGQowrdGX0FICzjHJevAXwVhiGAZs23JF7zdtfFYMrR25Ric
w3fQRRoe7diQQboL4s+bnuehlQQTW7FE5HLD7i+hNLGtEJ453cGz7rmEbjAx
xtjbe+aYtvXTj3+Pt/2nH//rJFvWazwZTUhcmwm7ECBpIQdYsoGqpHQ3sLLp
h2zfq5sbBpUIPpaK4uBTwxX8gikQ5VsI0qfxFfGJAaTLszcksGwwcmnLPDdj
fHZCrjFs3FhmVzSk8UKPvldu0Sd/+vE/W5nMD7Gq1WhRCfmKSU62Ot0kKyo0
IsMsmBcOZhMb7xDXZoeshwnozXe6XK4EyAvOslf46dIR+9cApvBm+gfZGB4I
K2YKQ6r3puiENLooKEKANm8hFmzvi5uDFmR2yS1+qEC6sHi5BbbTU381j8Te
OHGdTNmd0dTsOo3AsqozzOEac4DXMADfaPEmq8XBo7IVNnUwTfTKbw49vbey
Skx5yDj3iQ5/j5W9/w1kBynAqGyceNOSzGT6fF58cgS/aAW43MzjpILdas3n
T4PSDzDaUDHiPOek7OgISCy3MI1s8mOYHeKKIZ1dq390yDfJYIbZBfv6DSjJ
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
jvp/AxYKkxyIkgAA

-->

</rfc>

