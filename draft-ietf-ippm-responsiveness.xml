<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2023" month="February" day="22"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and its solutions.
We believe that creating a tool whose measurement matches people's
everyday experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the "RPM Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
would help establish a new expectation
that the standard measures of network quality should
-- in addition to throughput and idle latency --
also include latency under load, or, as we prefer to call it,
responsiveness under working conditions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we create the term "Responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is "the higher the better". This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "RPM Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport's congestion control that might
reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as "traditional" bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two communicating devices,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved to make it no longer
the lowest-capacity hop, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in other traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the RPM Test mimics normal network operations and data transfers,
to cause this bottleneck buffer to fill to capacity, and then
measures the resulting end-to-end latency under these operating conditions.
A well managed bottleneck queue keeps its queue occupancy
under control, resulting in consistently low round-trip time
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today's Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those "working conditions".
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>There are many different ways to define the state of "working conditions" to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The working conditions we try to achieve is a scenario where the path between the
measuring endpoints is utilized at its full end-to-end capacity. An ideal
sender could send at just this link-speed without building a queue on the
bottleneck. Thus, in order to measure the worst-case responsiveness we need to
ensure that a queue is building up on the bottleneck, meaning that responsiveness
is at its worst.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow"><name>From single-flow to multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the RPM test is to quickly
load the network, take its measurements, and then finish.
Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the RPM Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the RPM Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions, and then end the test.
Because of this, using multiple simultaneous parallel connections
allows the RPM test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-buffer-utilization"><name>Reaching full buffer utilization</name>

<t>The RPM Test gradually increases the number of TCP connections
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
as well as responsiveness continuously.
When both goodput and responsiveness stop changing, it means that the test
managed to fill the buffer of the bottleneck.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness during the previously explained working conditions creation
is a continuous process during the duration of the test. It requires a sufficiently
large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests for a small
object. There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as tcp_foreign).
Second, the TLS round-trip-time (noted tls_foreign). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted http_foreign).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted http_self).</t>

<t>tcp_foreign, tls_foreign, http_foreign and http_self are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data is available for calculation. In order to generate
as much data as possible, the methodology requires a client to issue these probes every 100ms.
For the probes on the load-generating connections, the client needs to use one of the
initial load-generating connections.
This means that every 100ms, 2 probes are being evaluated. The total amount of data
used for these probes would be no more than about 50KB worth of data within one second.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_foreign, tls_foreign, http_foreign, http_self (from the previous section). Each of these sets
will have a large number of samples. Use the following methodology to calculate a single RPM value
from these data:</t>

<t><list style="numbers">
  <t>Among each set, take the 90th percentile, thus resulting in 4 individual numbers (tcp_foreign_p90, tls_foreign_p90, http_foreign_p90, http_self_p90).</t>
  <t>Calculate the RPM as the weighted mean:</t>
</list></t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
((1/3*tcp_foreign_p90 + 1/3*tls_foreign_p90 + 1/3*http_foreign_p90 +
  http_self_p90)/2)
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explain what the meaning of
working conditions is and the definition of responsiveness, we can design the
final algorithm. In order to measure the worst-case latency we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in a 1-second interval. This will ensure that we quickly reach capacity and full
buffer occupancy. We need to continuously measure goodput and responsiveness and
as soon as we detect stability for both metrics we can ensure that the full
working conditions have been reached.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p, divided by the interval duration.
If p is negative (i.e., a time interval logically prior to the start of the test beginning,
used in moving average calculations),
the number of total bytes of data transferred within that
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>Start probing for responsiveness every 100ms, as described in the previous section.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>Compute the responsiveness</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached full link utilization.
Continue for 4 more iterations.</t>
      <t>If the responsiveness at interval i is more than a 5% reduction over the responsiveness at interval i - 1, the network
has not yet reached full buffer occupancy.
Continue for 4 more iterations.</t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api"><name>RPM Test Server API</name>

<t>The RPM measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for RPM test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the RPM test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for RPM test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for 
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>RPM Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host RPM Test Server instances on their
network so customers can determine what to expect about the the quality of their connection to 
the service offered by that provider.
However, when a user performs an RPM test and determines
that they are suffering from poor RPM during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What’s causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?”</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover RPM Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host an RPM Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of an RPM Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the 
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the RPM Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The RPM Test Service instances should advertise using the service type <xref target="RFC6335"/> 
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting an RPM Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of RPM Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Will Hawkins and Jeroen Schickendantz for their tireless
enthousiasm around the project and their contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
<front>
<title>Domain names - concepts and facilities</title>
<author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'><organization/></author>
<date month='November' year='1987'/>
<abstract><t>This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1034'/>
<seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAL2f9mMAA9V965Ibx7Hm/3qKWmg3NLMHAGdIihbnhMIeXiTT5mXMGVmx
sWdD0QAKQJuNbqgvA8IKOvQaJ8Ln5fQkm19m1qUbGIo6693w+lw8BNB1ycrK
/PLak8nEtHlbuAv71jXbqmzyW1e6prFduXC1/a6q3+Xlyj6tykXe5vS9yWaz
2t1++u8X1bzMNjTBos6W7SR37XKSb7ebSd0bYHJ2bhZZ6y7MnP7/qqr3F7Zp
F8Y03WyTNw2NdbPf0jAvnt98bebVgqa5sB0N9qXJt/WFbeuuae+fnT0+u2+y
2mUX9qbOSpqibs2OlrWqq25Lj1/ZK1cvq3qTlXNnX7ms6Wq3cWVr3rk9/XBB
vylbV5eunTzDkmkJbVYuvs+KqqT5964x2/zC/s+2mo9tQ8PXbtnQX/sN/vhf
xmRdu67qC2PthP7P2rxsLuzTqb3Ksma+5o+EIk/Xdd601XadflXVtK/L7bZw
tI75lD9raA7XXtg3pdOvrrL6nf0u2/PX87wlaj3ttq5u87Ia26dZkdMWyzyz
j784O38ov6q6sgVZvy3z1i3sdUuEbmy1tJcbV+fzjH/lNlleXNj5llf0uwyz
TefVxvS383ZKpNu7OtnNWyJSVhTJ5/8cW6nrzZ3buJ7SIbhmndcu2cl122V1
2//mn2Mvc13SnRt6M7XX62yb11mynzc0UO/jf47NVLSXOzfyihgsa9d5k+yD
PmjTT3kb31TVqnBjbKS3j/NHZ2c063adt2uX0Ye8n11vO6+w3Cwv7Z9zt6Mt
XVr7+OHZwwe/fi8bWtqGV/a7FS9ItpSXLGlaEnKQB0+65dLVs6LK2gt+OooK
+s9Edv6Hqf3Gte2+6X36x6l9nc/XVSEfq9AepSPaZzgw+aShpyxtPMiykRCH
Fu4arIrOstpsupL2wXIa+8LvL5++Gts/V0W3cfaLL8b2dbeZEfec25P7Z+f3
T2mURI63c8jx5fw3jx/M8ubuLX03tc8Xi31v5SydVbJDX7R1VdiruiKxSn+c
3Dy9OrXXWzfPl7rEwx34vdnn5SovHX1Dqucma97Zr6t6jnv79uunZ7S4C/nz
/OzBQ/3z0YMHX/g/f/PofvzT//bLR+f+B1/+5tEj/+f9x2f+z7MH9FszmUxs
NiOmy+akKWheYoVyT1oiq0kpZLbI5u9A2762G9vbrM6rrin2dk5C0y1Mka3G
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
ccV/dLLz/9M5NITzaUfRGxxH/b8B4pUefb+XAAA=

-->

</rfc>

