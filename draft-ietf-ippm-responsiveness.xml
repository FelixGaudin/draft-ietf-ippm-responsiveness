<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="13"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and its solutions.
We believe that creating a tool whose measurement matches people's
everyday experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
would help establish a new expectation
that the standard measures of network quality should
-- in addition to throughput and idle latency --
also include latency under load, or, as we prefer to call it,
responsiveness under working conditions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we create the term "Responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of round-trips per minute are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport's congestion control that might
reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as "traditional" bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two communicating devices,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved to make it no longer
the lowest-capacity hop, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in other traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the Responsiveness Test mimics normal network operations and data transfers,
to cause this bottleneck buffer to fill to capacity, and then
measures the resulting end-to-end latency under these operating conditions.
A well managed bottleneck queue keeps its queue occupancy
under control, resulting in consistently low round-trip time
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines an Responsiveness Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today's Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The Responsiveness Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those "working conditions".
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>There are many different ways to define the state of "working conditions" to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The working conditions we try to achieve is a scenario where the path between the
measuring endpoints is utilized at its full end-to-end capacity and its full
buffer occupancy. An ideal
sender could send at just this link-speed without building a queue on the
bottleneck. Thus, in order to measure the worst-case responsiveness we need to
ensure that a queue is building up on the bottleneck, meaning that responsiveness
is at its worst.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow"><name>From single-flow to multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness test is to quickly
load the network, take its measurements, and then finish.
Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the Responsiveness Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions, and then end the test.
Because of this, using multiple simultaneous parallel connections
allows the Responsiveness test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>In this document, we impose an upper bound on the number of parallel load-generating
connections to 16.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-buffer-utilization"><name>Reaching full buffer utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
Once goodput reaches saturation, buffers will start filling up, creating the well-known
"standing queue" that is known as bufferbloat. This is the moment the test starts
measuring the responsiveness until the responsiveness reaches saturation as well.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness during the previously explained working conditions creation
is a continuous process during the duration of the test. It requires a sufficiently
large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests for a small
object. There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as tcp_f).
Second, the TLS round-trip-time (noted tls_f). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted http_f).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted http_l).</t>

<t>tcp_f, tls_f, http_f and http_l are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data is available for calculation. In order to generate
as much data as possible, the methodology requires a client to issue these probes regularly.
There is however a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. As the test mandates to
first saturate capacity before probing for responsiveness, we are able to
accurately estimate how much of the capacity the responsiveness probes will consume.</t>

<t>This can be done by providing an estimate of the number of bytes exchanged for a
responsiveness probe. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a probe on a foreign connection to be around 5000 bytes.
On load-generating connections we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that at each responsiveness probing round, we
send no more than 6 probes on load-generating connections and 3 probes on foreign connections,
every 100ms for each type of probe.
This would result in a total amount of data per second of 210 KB or 1680Kb, meaning
a total capacity utilization of 1680 Kbps for the probing.</t>

<t>On high-speed networks, this will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. We recommend to increase the probing
interval beyond 100ms and reduce the number of parallel probes appropriately
so that the probing traffic does not consume more than 5% of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_f, tls_f, http_f, http_l (from the previous section).
The responsiveness evolves over time as buffers gradually reach saturation. Once
the buffers are saturated responsiveness is stable over time. Thus, the aggregation
of the measurements considers the last 4 seconds worth of completed responsiveness probes.</t>

<t>Over the timeframe of 4 seconds a potentially large number of samples has been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest to use a trimmed mean at 95th percentile, thus providing the following numbers:
tcp_f_t95, tls_f_t95, http_f_t95, http_l_t95.</t>

<t>The responsiveness is then calculated as the weighted mean:</t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
(1/6*(tcp_f_t95 + tls_f_t95 + http_f_t95) +
  1/2*http_s_t95)
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explain what the meaning of
working conditions is and the definition of responsiveness, we can design the
final algorithm. In order to measure the worst-case latency we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in a 1-second interval. This will ensure that we quickly reach capacity and full
buffer occupancy. First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, responsiveness probes are being transmitted
until responsiveness stability is reached.</t>

<t>We consider both, goodput and responsiveness to be stable, when the standard deviation
of the past 4 moving averages is within 5% of the last of the moving averages.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval i as current_average.</t>
          <t>If the standard deviation of the past 4 average goodput values is less than 5% of the current_average, declare saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput has saturated:
      <list style="symbols">
          <t>Compute the responsiveness at interval i as current_responsiveness.</t>
          <t>If the standard deviation of the past 4 responsiveness values is less than 5% of the current_responsiveness, declare saturation and report current_responsiveness.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute 4 iterations of the specific stage. Meaning, the moving average is
not taking the full window into account.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least 4
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the define standard deviation tolerance.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once a responsiveness result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="responsiveness-test-server-api"><name>Responsiveness Test Server API</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for responsiveness test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the responsiveness test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for responsiveness test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> which contains configuration information for 
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Server instances on their
network so customers can determine what to expect about the quality of their connection to 
the service offered by that provider.
However, when a user performs an Responsiveness test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<t><list style="numbers">
  <t>"What’s causing my poor performance?"</t>
  <t>"Is it poor buffer management by my ISP?"</t>
  <t>"Is it poor buffer management in my home Wi-Fi Access point?"</t>
  <t>"Something to do with the service provider?"</t>
  <t>"Something else entirely?”</t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Server instances running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host an Responsiveness Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>Any organization that wishes to host their own instance of an Responsiveness Test Server can advertise that capability
by hosting at the network quality well-known URI a resource whose content type is application/json and contains a valid JSON object meeting the 
following criteria:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://nq.example.com/api/v1/large",
    "small_download_url":"https://nq.example.com/api/v1/small",
    "upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>The server SHALL specify the content-type of the resource at the well-known URI as application/json.</t>

<t>The content of the "version" field SHALL be "1". Integer values greater than "1" are reserved
for future versions of this protocol.
The content of the "large_download_url", "small_download_url", and "upload_url" SHALL
all be validly formatted "http" or "https" URLs. See above for the semantics of the fields.
All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>For purposes of registration of the well-known URI <xref target="RFC8615"/>, the application name is "nq". The media type
of the resource at the well-known URI is "application/json" and the format of the resource is as specified
above. The URI scheme is "https". No additional path components, query strings or fragments are valid
for this well-known URI.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering instances of the Responsiveness Test Server, organizations
wishing to host their own instances of the Test Server MAY advertise their availability using
DNS-Based Service Discovery <xref target="RFC6763"/> using conventional, unicast DNS <xref target="RFC1034"/> or multicast DNS <xref target="RFC6762"/>
on the organization network's local link(s).</t>

<t>The Responsiveness Test Service instances should advertise using the service type <xref target="RFC6335"/> 
"_nq._tcp".  Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.</t>

<section anchor="example"><name>Example</name>

<t>An obscure service provider hosting an Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to PTR and SRV conventional DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those conventional DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of Responsiveness Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Will Hawkins and Jeroen Schickendantz for their tireless
enthousiasm around the project and their contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
<front>
<title>Domain names - concepts and facilities</title>
<author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'><organization/></author>
<date month='November' year='1987'/>
<abstract><t>This RFC is the revised basic definition of The Domain Name System.  It obsoletes RFC-882.  This memo describes the domain style names and their used for host address look up and electronic mail forwarding.  It discusses the clients and servers in the domain name system and the protocol used between them.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1034'/>
<seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
<front>
<title>Well-Known Uniform Resource Identifiers (URIs)</title>
<author fullname='M. Nottingham' initials='M.' surname='Nottingham'><organization/></author>
<date month='May' year='2019'/>
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.</t><t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space.  It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t></abstract>
</front>
<seriesInfo name='RFC' value='8615'/>
<seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAP5tD2QAA9V96ZIjx5Hm/3iKXHDXWDUDoKv6ErvGaKPqg1RL3c1SV1G0
tZ01WiIzAKQqkQnmUWiIRhlfY800L8cnWf/cPY5MoJqtXdmaVnOoOpEZh4eH
++dHeMxmM9MVXWkvkve23dZVW9zZyrZt0le5bZLv6ua2qFbJi7rKi66g3026
WDT27tPfz+usSjfUQd6ky25W2G45K7bbzawZNDA7Ozd52tkLk9H/X9XN/iJp
u9yYtl9siraltm72W2rm9aubr0xW59TNRdJTY1+YYttcJF3Tt93Ds7NnZw9N
2tj0Irlp0oq6aDqzo2Gtmrrf0udXyZVtlnWzSavMJm9t2vaN3diqM7d2Ty/m
9E7V2aay3ewlhkxD6NIq/z4t64r639vWbIuL5H90dTZNWmq+scuW/tpv8Mf/
NCbtu3XdXJgkmdH/JUlRtRfJi3lylaZttuZHQpEX66Zou3q7jn+qG5rX5XZb
WhpHNudnLfVhu4vkm8rqT1dpc5t8l+7556zoiFov+q1tuqKqp8mLtCxoilWR
Js+enJ0/lrfqvupA1m+rorN5ct0RodukXiaXG9sUWcpv2U1alBdJtuUR/TZF
b/Os3pjhdN7PiXR720SzeU9ESssyev7PMZWm2dw7jes5LYJt10Vjo5lcd33a
dMNf/jnmkumQ7p3QN/Pkep1uiyaN5vMNNTR4/M8xmZrmcu9Evpsnv0t3JEza
aCLfFcRf8WOeCPV1Z5uWBoiOXhRVVlRV2hVxX2v+aLf+bZ/hwbzP5jbvR32+
JaZOu3URd0kPuvgp9/h1Xa9KOwXxBrQ7f3p2RjPdrotubVN6yDTcDUj4FiRK
iyr5U2F3RMbLJHn2+Ozxo7+ffhsa2oZH9tsVD0jIWFQs3ToiCmTQ8365tM2i
rNPugr8O4on+M5OZ/36efG27bt8Onv5hnrwrsnVdymNVFJO4xeQlmESetPRV
QhP38nMixKGB2xajIv6pN5u+onmwbsC88P7li7fT5E912W9s8uTJNHnXbxbE
sefJycOz84en1EqkO7oMumOZ/ebZo0XR3j8lYqBXeb4fjJw1gmoT6Kiuqcvk
qqlJlNMfJzcvrk6T663NiqUO8XAGbm7Jq2pVVJZ+IXV3k7a3yVd1k0FWvP/q
xRkN7kL+PD979Fj/fPro0RP352+ePgx/une/eHruXvjiN0+fuj8fPjtzf549
8u8+fPLswpjZbJakC+K/NCNFRUMgrqj2pKTShnRSmpRpdgsyD5XtNLlLm6Lu
23KfZCSzbW7KdDWltztbZfspcXmyCKs8pe3TJgtrK2onq1dV8Rf6gh6lFel9
4raup/1G+2HRd8TCm01dsT7cdvWGeaLO0/3nbUJkgyZu5+YVjSOhJaVVTpPc
ZmluMUr8mtDSsMJNm7z4C6jb2WwNnilJ25Y9c87UFB2NhfYBcVGqfSbbpl6U
dpPQiJivbJUnPS0edYgemz0p8GRyW9W7dkIvpF1CrRRtMqmwYcoJf5gmd0Vu
a2qzovlbgISuNuv0zrr222S3puG39cYu6nyf2LK1CTW2pgfUnNmlXbbGwNPk
8R+STX1XWBC03xItAVuS7Zo4rk2WDZGHxlk0eFLZufldvbM0zimeNmgrqepo
+oRqWpqmTI9+7GpaFJ5plrb0+Wv6jfjAr27yQ297C45IVwxxAgGTk+UP3xOK
suWUPr6ltbt6/epUpkkv3ZHsQbs6Y6LfN33j108pT2sf2GpKQ+1kSoHrjq4c
mKRJMcPozXRHmI2BpMoEt5bECLRKbWhgbr6zNO2yIErJImZEl07o3dW0j3fr
mhZkE5AdJCU0Z7K1NWmbz1sDKu+JKRP7YYvNjVXeQblwW0LTymY0nrTZh8FN
DYZDk+7LDowN3t3gEZaERpz3GQ2VB8VEHNHwBotGeLiXtRBBY1t+azLC0ze2
7YQhZSKY33AT03p3YO82Yn8WZC0TbUO0T6ui3TCfKDV4O5ho0q2TdiWJAmZr
mTovNBhQcP1OcX3mcf2cZjMkMr1MDdMYW2IeEg6T96TM8lnXFNsWmDt5W1R9
ZyfJyfurt6dMyXZd92UOJialXfY5fbgj1UljILC+Wm+JU076LU8nr3fVKf4y
RU7YRCUV+skaGhF4rKCxkdiuG2YiN4cfegIq3X4usnJT5PS5MZ9BkMuC0Wz+
v5GcyY8/Rtr3p5/m5trv6LK4tYnb1fSiqo6ffsKYaHfrI1Ih9Ig3Oo8ryFqM
jChNvA6OgXijBe2wtDuSiDThYkO7B2tt87l5hz1EzFIyVWRnUWPYRC0PUYRB
RAxagsuSFDWtbNIWRAvwXdWxtEPbJLog/MGi8b6kd1jMQXcXtLr7BEYrS2/q
GLLBUhdZJ+KyS9KSAFdLUrwtaN9hKmgfrZLoIA7HuGl9Ix6njml5aYILCybv
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
hICsgm+3sGaYWC/rXYV/GHNVc7rDYH00iZIZgCUH719xRhfsIEMyARFgfcrm
cr9FWDHdeIMZ2c36KCdYmwkk/KpHhn2DNZ7y15qjA7EvZnIy8kyLWzyVuAiP
NwJzin2ffB13hxG8uXnlh3SaaKLHKFnJRALu9fVVK8lOR63te9PVjjo+xNSx
Mj8/eehLKCVO8gLKy5xy7O7tVkfXh1XL3arBBalrzNa9S7EGClWNCa8Qdj67
rfpqJjkPId8mjTgsS+8IQ/DJGyvQMFjfUVc4oJf8Li2Xs5wGZT/wirQez26h
CLqhYDgy+Niz5zy/Xu5I3pJGHB0aBpcg1clhJBrSiLqwa+sqi9Ka0AItBfCS
i8Nt6043Qlv3TSZuRnatj5zms+SlXfSrVZTqFsQtB4Q5rVqU4IVzTfltOsiP
98ZJ689veI8Qp/rt1habglmpXrCZGKIPLhQ2ZAXlaE/QaIsp1twxUK03G5bp
VpL+j61F66UDqeUgN/QTIxkXcI/DYZwiBwKMyudoWukQ8uY9loqzqiLkKp4a
yay614mLyFPPp7U4VO5wSMSbQ8ncmrSK0vwnCC6Q2TFJThioE1SFXYSUx3Ko
Onn8AhbAD7HoFMCAfFosNG2TUxMbhXPauJlNtCdhS+paZTziad7A4VgKiXyy
KIB1hejTgNAZidiynOHQZmUm7DXBDyxf3SHONuGfgRPiZDGx5DXW7gLpbttw
p23kNDviA+1pTuWxHw6nJOcZypLMOfWDsWXmMsiHEzrizYmEq7gIdQ+ZjxnV
w6gTwjGtM+b9AY3AJU26LXLEgnhWxCUDdeiRhYQDOAmQtvpMFme75gOml+os
4LlN425IRFad8GWL3A0S9ZJVrhppZAXyHFPFU1vkC2YIDzFX82FWzN8ggd2D
kgWt/K7Iu/U0GTw/sMVFQB3YtZwgy0eFF0XlD2OJqGusFUjL5qYKWBhIrH49
DQd0hW1hcCrGHdEY7TsXhN/iSCrLzQEWiV/lCDnSaOLPS5tqXlTUa6eZklPD
goMlUiQ24tOG4NCcZReOPXKuvPP4lHqE7ojHh5Nn3Tmtz+4PfhgTfhltjjzs
py0S8MVRpBEDeIUPvUyyPUjsFXKa28kSF7iI2xwepVPwDZUuuVTsswteIhio
7O5sOWOGj9RhZTjlCKfYSFLzQZgq1li6t2K9FFRaPFenbgjxwRPOWq2pF3am
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
Uv9v1cJn7e+iAAA=

-->

</rfc>

