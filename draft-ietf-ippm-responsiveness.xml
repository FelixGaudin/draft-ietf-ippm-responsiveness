<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="21"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem and its solutions.
We believe that creating a tool whose measurement matches people's
everyday experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the "RPM Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory --
that is, its effect is not always visible to the user.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
would help establish a new expectation
that the standard measures of network quality should
-- in addition to throughput and idle latency --
also include latency under load, or, as we prefer to call it,
responsiveness under working conditions.</t>

<section anchor="terminology"><name>Terminology</name>

<t>A word about the term "bufferbloat" -- the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>"Latency" is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar ("what is a millisecond?") and
counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we create the term "Responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is "the higher the better". This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>This document defines an algorithm for the "RPM Test"
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it's best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport's congestion control that might
reduce the traffic's rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as "traditional" bufferbloat.</t>

<t>Finally, it is crucial to recognize that significant
queueing only happens on entry to the lowest-capacity
(or “bottleneck”) hop on a network path.
For any flow of data between two communicating devices,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow’s path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path is not itself a problem.
In a heterogeneous network like the Internet it is
inevitable that there must necessarily be some hop
along the path with the lowest capacity for that path.
If that hop were to be improved to make it no longer
the lowest-capacity hop, then some other hop would
become the new lowest-capacity hop for that path.
In this context a “bottleneck” should not be seen as a problem to
be fixed, because any attempt to “fix” the bottleneck is futile --
such a “fix” can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.
Arguably, this heterogeneity of the Internet is one of its greatest strengths.
Allowing individual technologies to evolve and improve at their
own pace, without requiring the entire Internet to change in
lock-step, has enabled enormous improvements over the years
in technologies like DSL, cable modems, Ethernet, and Wi-Fi,
each advancing independently as new developments became ready.
As a result of this flexibility we have moved incrementally,
one step at a time, from 56kb/s dial-up modems in the 1990s to
Gb/s home Internet service and Gb/s wireless connectivity today.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The hop that is the current bottleneck may change from moment to moment.
For example, changes in other traffic may result in changes
to a flow’s share of a given hop. A user moving around
may cause the Wi-Fi transmission rate to vary widely,
from a few Mb/s when far from the Access Point,
all the way up to Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet’s great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire flow.
If the bottleneck hop’s queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the RPM Test mimics normal network operations and data transfers,
to cause this bottleneck buffer to fill to capacity, and then
measures the resulting end-to-end latency under these operating conditions.
A well managed bottleneck queue keeps its queue occupancy
under control, resulting in consistently low round-trip time
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today's Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those "working conditions".
During this process, the algorithm measures the responsiveness of the network.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>There are many different ways to define the state of "working conditions" to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>The working conditions we try to achieve is a scenario where the path between the
measuring endpoints is utilized at its full end-to-end capacity. An ideal
sender could send at just this link-speed without building a queue on the
bottleneck. Thus, in order to measure the worst-case responsiveness we need to
ensure that a queue is building up on the bottleneck, meaning that responsiveness
is at its worst.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
bottleneck of the path between client and server has its buffer filled
up entirely, without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user’s network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow"><name>From single-flow to multi-flow</name>

<t>A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
Additionally, deep buffers along the path between the two endpoints may be
significantly larger than 4MB.
TCP allows larger receive window sizes, up to 1GB. However, most transport stacks
aggressively limit the size of the receive window to avoid consuming too much
memory.</t>

<t>Thus, the only way to achieve full capacity and full buffer occupancy on those
networks is by creating multiple connections, allowing to actively fill the
bottleneck's buffer to achieve maximum working conditions.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the RPM test is to quickly
load the network, take its measurements, and then finish.
Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>The purpose of the RPM Test is not to productively move data
across the network in a useful way, the way a normal application does.
The purpose of the RPM Test is, as quickly as possible, to simulate
a representative traffic load as if real applications were doing
sustained data transfers, measure the resulting round-trip time
occurring under those realistic conditions, and then end the test.
Because of this, using multiple simultaneous parallel connections
allows the RPM test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink"><name>Parallel vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-full-buffer-utilization"><name>Reaching full buffer utilization</name>

<t>The RPM Test gradually increases the number of TCP connections
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
as well as responsiveness continuously.
When both goodput and responsiveness stop changing, it means that the test
managed to fill the buffer of the bottleneck.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
full link utilization has been reached and -- more importantly --
the working condition is stable.</t>

</section>
</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness during the previously explained working conditions creation
is a continuous process during the duration of the test. It requires a sufficiently
large sample-size to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests for a small
object. There are two types of probe requests:</t>

<t><list style="numbers">
  <t>A HTTP GET request on a separate connection ("foreign probes").
This test mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., “index.html”),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>A HTTP GET request multiplexed on the load-generating connections ("self probes").
This test mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation client to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide 3 sets of data-points. First, the duration of the TCP-handshake
(noted hereafter as tcp_foreign).
Second, the TLS round-trip-time (noted tls_foreign). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted http_foreign).</t>

<t>Self probes will provide a single data-point for the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and the
full HTTP response has been received (noted http_self).</t>

<t>tcp_foreign, tls_foreign, http_foreign and http_self are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data is available for calculation. In order to generate
as much data as possible, the methodology requires a client to issue these probes every 100ms.
For the probes on the load-generating connections, the client needs to use one of the
initial load-generating connections.
This means that every 100ms, 2 probes are being evaluated. The total amount of data
used for these probes would be no more than about 50KB worth of data within one second.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
tcp_foreign, tls_foreign, http_foreign, http_self (from the previous section). Each of these sets
will have a large number of samples. Use the following methodology to calculate a single RPM value
from these data:</t>

<t><list style="numbers">
  <t>Among each set, take the 90th percentile, thus resulting in 4 individual numbers (tcp_foreign_p90, tls_foreign_p90, http_foreign_p90, http_self_p90).</t>
  <t>Calculate the RPM as the weighted mean:</t>
</list></t>

<figure><artwork><![CDATA[
Responsiveness = 60000 /
((1/3*tcp_foreign_p90 + 1/3*tls_foreign_p90 + 1/3*http_foreign_p90 +
  http_self_p90)/2)
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explain what the meaning of
working conditions is and the definition of responsiveness, we can design the
final algorithm. In order to measure the worst-case latency we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in a 1-second interval. This will ensure that we quickly reach capacity and full
buffer occupancy. We need to continuously measure goodput and responsiveness and
as soon as we detect stability for both metrics we can ensure that the full
working conditions have been reached.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. The variable i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p, divided by the interval duration.
If p is negative (i.e., a time interval logically prior to the start of the test beginning,
used in moving average calculations),
the number of total bytes of data transferred within that
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The number of total bytes of data transferred within
interval p and the three immediately preceding intervals, divided by four times the interval duration.</t>
  <t>moving average stability during the period between intervals b and e:
Whether or not, for all b≤x&lt;e, the absolute difference is less than 5% between
the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1.
If all absolute differences are below 5% then the moving average has achieved stability.
If any of the absolute differences are 5% or more then the moving average has not achieved stability.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create a load-generating connection.</t>
  <t>Start probing for responsiveness every 100ms, as described in the previous section.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create an additional load-generating connection.</t>
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>Compute the responsiveness</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached full link utilization.
Continue for 4 more iterations.</t>
      <t>If the responsiveness at interval i is more than a 5% reduction over the responsiveness at interval i - 1, the network
has not yet reached full buffer occupancy.
Continue for 4 more iterations.</t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when stability is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well designed networking stack would ensure that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators",...
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness"><name>Root-causing Responsiveness</name>

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api"><name>RPM Test Server API</name>

<t>The RPM measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new “protocol” is defined,
merely specifying the URLs that used for GET and PUT in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to provide content upon a GET request.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client's measurement.</t>

<t>As clients and servers become deployed that use L4S congestion control
(e.g., TCP Prague with ECT(1) packet marking),
for their normal traffic when it is available, and fall back
to traditional loss-based congestion controls (e.g., Reno or CUBIC)
otherwise, the same strategy SHOULD be used for RPM test traffic.
This is RECOMMENDED so that the synthetic traffic generated
by the RPM test mimics real-world traffic for that server.</t>

<t>Delay-based congestion-control algorithms (e.g., Vegas, FAST, BBR)
SHOULD NOT be used for RPM test traffic because they take
much longer to discover the depth of the bottleneck buffers.
Delay-based congestion-control algorithms seek to mitigate the
effects of bufferbloat, by detecting and responding to early signs
of increasing round-trip delay, and reducing the amount of data they
have in flight before the bottleneck buffer fills up and overflows.
In a world where bufferbloat is common, this is a pragmatic
mitigation to allow software to work better in that environment.
However, that approach does not fix the underlying problem of bufferbloat;
it merely avoids it in some cases,
and allows the problem in the network to persist.
For a diagnostic tool made to identify symptoms of bufferbloat in the
network so that they can be fixed, using a transport protocol explicitly
designed to mask those symptoms would be a poor choice, and would
require the test to run for much longer to deliver the same results.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual message content is irrelevant.
The server SHOULD specify the content-type as application/octet-stream.
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The server SHOULD specify the content-type as application/octet-stream.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below). The server SHOULD specify the
content-type as application/json.
Sample JSON:</t>
</list></t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_https_download_url":"https://nq.example.com/api/v1/large",
    "small_https_download_url":"https://nq.example.com/api/v1/small",
    "https_upload_url":        "https://nq.example.com/api/v1/upload"
  }
  "test_endpoint": "hostname123.provider.com"
}
]]></artwork></figure>

<t>All of the fields in the sample configuration are required except "test_endpoint".
If the test server provider can pin all of the requests for a test run to a specific
host in the service (for a particular run), they can specify that host name in the
"test_endpoint" field.</t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="rpm-test-server-discovery"><name>RPM Test Server Discovery</name>

<t>It makes sense to host RPM Test Server instances in Internet
Data Centers where they can be accessed easily by users
wishing to test the quality of their Internet connection.
However, when a user performs an RPM test and determines
that they are suffering from poor RPM during download,
the logical next question might be,
“What’s causing my poor performance?
Is it poor buffer management by my ISP?
Is it poor buffer management in my home Wi-Fi Access point?
Something else?”</t>

<t>To help an end user answer this question, it will be useful for home gateway
equipment to host RPM Test Server instances.
In an example configuration, a user may have cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in the home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host an RPM Test Server instance,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<t>To aid in discoverability of these facilities,
local RPM Test Server instances SHOULD advertise the availability
of service type <xref target="RFC6335"/> “_nq._tcp” (Network Quality),
via DNS-Based Service Discovery <xref target="RFC6763"/>,
using Multicast DNS on its local link(s) <xref target="RFC6762"/>.
Where applicable, an RPM Test Server instance SHOULD also advertise
the availability of its service via unicast discovery,
for discovery by client devices not directly attached to the same link.
Population of the appropriate DNS zone with the
relevant unicast discovery records can be performed
automatically using a Discovery Proxy <xref target="RFC8766"/>,
or in some scenarios simply by having a human
administrator manually enter the required records.
Similarly, a “cloud” service, providing Internet hosting service for
“example.com” could choose to include the relevant DNS-SD records
within the “example.com” domain <xref target="RFC6763"/> to communicate
to clients the list of available RPM Test Server instances.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>TBD</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA has been requested to record the service type
“_nq._tcp” (Network Quality)
for advertising and discovery of RPM Test Server instances.</t>

</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Will Hawkins and Jeroen Schickendantz for their tireless
enthousiasm around the project and their contributions to this I-D and the development
of the Go responsiveness measurement tool.
We would also like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>



    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
<front>
<title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
<author fullname='M. Cotton' initials='M.' surname='Cotton'><organization/></author>
<author fullname='L. Eggert' initials='L.' surname='Eggert'><organization/></author>
<author fullname='J. Touch' initials='J.' surname='Touch'><organization/></author>
<author fullname='M. Westerlund' initials='M.' surname='Westerlund'><organization/></author>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='August' year='2011'/>
<abstract><t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry.  It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t><t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP).  It also updates the DNS SRV specification to clarify what a service name is and how it is registered.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='165'/>
<seriesInfo name='RFC' value='6335'/>
<seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>



<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
<front>
<title>Multicast DNS</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important.  In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t><t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server.  In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t><t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t></abstract>
</front>
<seriesInfo name='RFC' value='6762'/>
<seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>



<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
<front>
<title>DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<author fullname='M. Krochmal' initials='M.' surname='Krochmal'><organization/></author>
<date month='February' year='2013'/>
<abstract><t>This document specifies how DNS resource records are named and structured to facilitate service discovery.  Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t></abstract>
</front>
<seriesInfo name='RFC' value='6763'/>
<seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>



<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
<front>
<title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
<author fullname='S. Cheshire' initials='S.' surname='Cheshire'><organization/></author>
<date month='June' year='2020'/>
<abstract><t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t></abstract>
</front>
<seriesInfo name='RFC' value='8766'/>
<seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>


<section anchor="example-server-configuration"><name>Example Server Configuration</name>

<t>This section shows fragments of sample server configurations to host an responsiveness
measurement endpoint.</t>

<section anchor="apache-traffic-server"><name>Apache Traffic Server</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a responsiveness
server. It requires the generator and the statichit plugin.</t>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://nq.example.com/api/v1/config \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://nq.example.com/api/v1/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://nq.example.com/api/v1/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAO/6UmMAA9V96XIjyZHm/3iKWLbtNLkCUKxTXZTJNKyjWyXVQRVZ6h87
a2WJRABIMZGJzoMoqK1l/Rpjpnm5fpL1z93jSABkV2u1a1qZZsQCkJERHh7u
n58xHo9NV3SlO7PvXbuuq7a4cZVrW9tXM9fYb+vmuqgW9nldzYquoO9NNp02
7ubzfz+r8ypb0QtmTTbvxoXr5uNivV6Nm8EA49P7ZpZ17szk9P8XdbM9s203
M6btp6uibWmsq+2ahnn18uprk9czes2Z7Wmwr0yxbs5s1/Rt9+D09OnpA5M1
LjuzV01W0SuazmxoWoum7tf0+IW9cM28blZZlTv7xmVt37iVqzpz7bb0wxn9
pupcU7lu/AJTpil0WTX7mJV1Re/futasizP7P7s6H9mWhm/cvKW/tiv88b+M
yfpuWTdnxtox/Z+1RdWe2ecTe5Flbb7kj4Qiz5dN0Xb1epl+VTe0rvP1unQ0
j3zCn7X0Dted2XeV068usubafptt+eu86Ihaz/u1a7qiqkf2eVYWtMSqyOzT
x6f3H8mv6r7qQNYPVdG5mb3siNCtref2fOWaIs/4V26VFeWZzdc8o3/P8LZJ
Xq/McDnvJ0S6rWuS1bwnImVlmXz+r7GUplnduozLCW2Ca5dF45KVXHZ91nTD
b/411pLrlG5d0LuJvVxm66LJkvW8o4EGH/9rLKamtdy6kDfEYFm3LNpkHfRB
l37Ky/imrhelG2Ehg3Xcf3J6Sm9dL4tu6TL6kNezGSznDaabFZX9c+E2tKRz
a58+On308JevZUVTW/HM/n3BE5IlFRVLmo6EHOTBs34+d820rLPujJ+OooL+
M5aV/2Fiv3Fdt20Hn/5xYt8W+bIu5WMV2kfpiPYFNkw+aekpSwsPsuxIiEMT
dy1mRXtZr1Z9RetgOY114ffnz9+M7J/rsl85+/jxyL7tV1Pinvv2+MHp/Qcn
NEoix7sccnye//rpw2nR3r6kbyf25Wy2HcycpbNKduiLrqlLe9HUJFbpj+Or
5xcn9nLt8mKuU9xfgV+bfVktisrRN6R6rrL22n5dNznO7fuvn5/S5M7kzycP
Hz72f/76yYP4p//BV79+8sT/+eDpqf/z9GH4wYPHT/2fjx7Rb814PLbZlJgu
y0lT0HuJFaotaYmsIaWQ2TLLr0HbobYb2ZusKeq+Lbc2J6HpZqbMFiP6deeq
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
rRgMjq3+30IOJ/EfkgAA

-->

</rfc>

