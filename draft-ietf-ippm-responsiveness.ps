%!PS-Adobe-3.0
%%BoundingBox: 18 36 594 756
%%Title: Enscript Output
%%Creator: GNU Enscript 1.6.5.90
%%CreationDate: Fri Jul 15 17:37:03 2022
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6.5 90
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6.5 90
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
/d_page_w 576 def
/d_page_h 720 def
/d_header_x 0 def
/d_header_y 720 def
/d_header_w 576 def
/d_header_h 0 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 576 def
/d_footer_h 0 def
/d_output_w 576 def
/d_output_h 720 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
18 36 translate
/pagenum 1 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 663 M
(IP Performance Measurement                                     C. Paasch) s
5 652 M
(Internet-Draft                                                  R. Meyer) s
5 641 M
(Intended status: Experimental                                S. Cheshire) s
5 630 M
(Expires: 16 January 2023                                      O. Shapira) s
5 619 M
(                                                              Apple Inc.) s
5 608 M
(                                                               M. Mathis) s
5 597 M
(                                                             Google, Inc) s
5 586 M
(                                                            15 July 2022) s
5 553 M
(                Responsiveness under Working Conditions) s
5 542 M
(                   draft-ietf-ippm-responsiveness-00) s
5 520 M
(Abstract) s
5 498 M
(   For many years, a lack of responsiveness, variously called lag,) s
5 487 M
(   latency, or bufferbloat, has been recognized as an unfortunate, but) s
5 476 M
(   common, symptom in today's networks.  Even after a decade of work on) s
5 465 M
(   standardizing technical solutions, it remains a common problem for) s
5 454 M
(   the end users.) s
5 432 M
(   Everyone "knows" that it is "normal" for a video conference to have) s
5 421 M
(   problems when somebody else at home is watching a 4K movie or) s
5 410 M
(   uploading photos from their phone.  However, there is no technical) s
5 399 M
(   reason for this to be the case.  In fact, various queue management) s
5 388 M
(   solutions \(fq_codel, cake, PIE\) have solved the problem.) s
5 366 M
(   Our networks remain unresponsive, not from a lack of technical) s
5 355 M
(   solutions, but rather a lack of awareness of the problem and its) s
5 344 M
(   solutions.  We believe that creating a tool whose measurement matches) s
5 333 M
(   people's everyday experience will create the necessary awareness, and) s
5 322 M
(   result in a demand for products that solve the problem.) s
5 300 M
(   This document specifies the "RPM Test" for measuring responsiveness.) s
5 289 M
(   It uses common protocols and mechanisms to measure user experience) s
5 278 M
(   specifically when the network is under working conditions.  The) s
5 267 M
(   measurement is expressed as "Round-trips Per Minute" \(RPM\) and should) s
5 256 M
(   be included with throughput \(up and down\) and idle latency as) s
5 245 M
(   critical indicators of network quality.) s
5 223 M
(Status of This Memo) s
5 201 M
(   This Internet-Draft is submitted in full conformance with the) s
5 190 M
(   provisions of BCP 78 and BCP 79.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023                [Page 1]) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
18 36 translate
/pagenum 2 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   Internet-Drafts are working documents of the Internet Engineering) s
5 652 M
(   Task Force \(IETF\).  Note that other groups may also distribute) s
5 641 M
(   working documents as Internet-Drafts.  The list of current Internet-) s
5 630 M
(   Drafts is at https://datatracker.ietf.org/drafts/current/.) s
5 608 M
(   Internet-Drafts are draft documents valid for a maximum of six months) s
5 597 M
(   and may be updated, replaced, or obsoleted by other documents at any) s
5 586 M
(   time.  It is inappropriate to use Internet-Drafts as reference) s
5 575 M
(   material or to cite them other than as "work in progress.") s
5 553 M
(   This Internet-Draft will expire on 16 January 2023.) s
5 531 M
(Copyright Notice) s
5 509 M
(   Copyright \(c\) 2022 IETF Trust and the persons identified as the) s
5 498 M
(   document authors.  All rights reserved.) s
5 476 M
(   This document is subject to BCP 78 and the IETF Trust's Legal) s
5 465 M
(   Provisions Relating to IETF Documents \(https://trustee.ietf.org/) s
5 454 M
(   license-info\) in effect on the date of publication of this document.) s
5 443 M
(   Please review these documents carefully, as they describe your rights) s
5 432 M
(   and restrictions with respect to this document.  Code Components) s
5 421 M
(   extracted from this document must include Revised BSD License text as) s
5 410 M
(   described in Section 4.e of the Trust Legal Provisions and are) s
5 399 M
(   provided without warranty as described in the Revised BSD License.) s
5 377 M
(Table of Contents) s
5 355 M
(   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3) s
5 344 M
(     1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   3) s
5 333 M
(   2.  Design Constraints  . . . . . . . . . . . . . . . . . . . . .   4) s
5 322 M
(   3.  Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . .   6) s
5 311 M
(   4.  Measuring Responsiveness Under Working Conditions . . . . . .   6) s
5 300 M
(     4.1.  Working Conditions  . . . . . . . . . . . . . . . . . . .   6) s
5 289 M
(       4.1.1.  From single-flow to multi-flow  . . . . . . . . . . .   7) s
5 278 M
(       4.1.2.  Parallel vs Sequential Uplink and Downlink  . . . . .   8) s
5 267 M
(       4.1.3.  Reaching full link utilization  . . . . . . . . . . .   8) s
5 256 M
(       4.1.4.  Final "Working Conditions" Algorithm  . . . . . . . .   9) s
5 245 M
(     4.2.  Measuring Responsiveness  . . . . . . . . . . . . . . . .  10) s
5 234 M
(       4.2.1.  Aggregating the Measurements  . . . . . . . . . . . .  11) s
5 223 M
(   5.  Interpreting responsiveness results . . . . . . . . . . . . .  12) s
5 212 M
(     5.1.  Elements influencing responsiveness . . . . . . . . . . .  12) s
5 201 M
(       5.1.1.  Client side influence . . . . . . . . . . . . . . . .  12) s
5 190 M
(       5.1.2.  Network influence . . . . . . . . . . . . . . . . . .  13) s
5 179 M
(       5.1.3.  Server side influence . . . . . . . . . . . . . . . .  13) s
5 168 M
(     5.2.  Root-causing Responsiveness . . . . . . . . . . . . . . .  13) s
5 157 M
(   6.  RPM Test Server API . . . . . . . . . . . . . . . . . . . . .  14) s
5 146 M
(   7.  RPM Test Server Discovery . . . . . . . . . . . . . . . . . .  15) s
5 102 M
(Paasch, et al.           Expires 16 January 2023                [Page 2]) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
18 36 translate
/pagenum 3 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   8.  Security Considerations . . . . . . . . . . . . . . . . . . .  16) s
5 652 M
(   9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  16) s
5 641 M
(   10. Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  16) s
5 630 M
(   11. Informative References  . . . . . . . . . . . . . . . . . . .  16) s
5 619 M
(   Appendix A.  Example Server Configuration . . . . . . . . . . . .  18) s
5 608 M
(     A.1.  Apache Traffic Server . . . . . . . . . . . . . . . . . .  18) s
5 597 M
(   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  18) s
5 575 M
(1.  Introduction) s
5 553 M
(   For many years, a lack of responsiveness, variously called lag,) s
5 542 M
(   latency, or bufferbloat, has been recognized as an unfortunate, but) s
5 531 M
(   common, symptom in today's networks [Bufferbloat].  Solutions like) s
5 520 M
(   fq_codel [RFC8290] or PIE [RFC8033] have been standardized and are to) s
5 509 M
(   some extent widely implemented.  Nevertheless, people still suffer) s
5 498 M
(   from bufferbloat.) s
5 476 M
(   Although significant, the impact on user experience can be transitory) s
5 465 M
(   - that is, its effect is not always present.  Whenever a network is) s
5 454 M
(   actively being used at its full capacity, buffers can fill up and) s
5 443 M
(   create latency for traffic.  The duration of those full buffers may) s
5 432 M
(   be brief: a medium-sized file transfer, like an email attachment or) s
5 421 M
(   uploading photos, can create bursts of latency spikes.  An example of) s
5 410 M
(   this is lag occurring during a videoconference, where a connection is) s
5 399 M
(   briefly shown as unstable.) s
5 377 M
(   These short-lived disruptions make it hard to narrow down the cause.) s
5 366 M
(   We believe that it is necessary to create a standardized way to) s
5 355 M
(   measure and express responsiveness.) s
5 333 M
(   Existing network measurement tools could incorporate a responsiveness) s
5 322 M
(   measurement into their set of metrics.  Doing so would also raise the) s
5 311 M
(   awareness of the problem and would help establish a new expectation) s
5 300 M
(   that the standard measures of network quality should - in addition to) s
5 289 M
(   throughput and idle latency - also include latency under load, or, as) s
5 278 M
(   we prefer to call it, responsiveness under working conditions.) s
5 256 M
(1.1.  Terminology) s
5 234 M
(   A word about the term "bufferbloat" - the undesirable latency that) s
5 223 M
(   comes from a router or other network equipment buffering too much) s
5 212 M
(   data.  This document uses the term as a general description of bad) s
5 201 M
(   latency, using more precise wording where warranted.) s
5 179 M
(   "Latency" is a poor measure of responsiveness, since it can be hard) s
5 168 M
(   for the general public to understand.  The units are unfamiliar) s
5 157 M
(   \("what is a millisecond?"\) and counterintuitive \("100 msec - that) s
5 146 M
(   sounds good - it's only a tenth of a second!"\).) s
5 102 M
(Paasch, et al.           Expires 16 January 2023                [Page 3]) s
_R
S
%%Page: (4) 4
%%BeginPageSetup
_S
18 36 translate
/pagenum 4 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   Instead, we create the term "Responsiveness under working conditions") s
5 652 M
(   to make it clear that we are measuring all, not just idle,) s
5 641 M
(   conditions, and use "round-trips per minute" as the metric.  The) s
5 630 M
(   advantage of round-trips per minute are two-fold: First, it allows) s
5 619 M
(   for a metric that is "the higher the better".  This kind of metric is) s
5 608 M
(   often more intuitive for end-users.  Second, the range of the values) s
5 597 M
(   tends to be around the 4-digit integer range which is also a value) s
5 586 M
(   easy to compare and read, again allowing for a more intuitive use.) s
5 575 M
(   Finally, we abbreviate the measurement to "RPM", a wink to the) s
5 564 M
(   "revolutions per minute" that we use for car engines.) s
5 542 M
(   This document defines an algorithm for the "RPM Test" that explicitly) s
5 531 M
(   measures responsiveness under working conditions.) s
5 509 M
(2.  Design Constraints) s
5 487 M
(   There are many challenges around measurements on the Internet.  They) s
5 476 M
(   include the dynamic nature of the Internet, the diverse nature of the) s
5 465 M
(   traffic, the large number of devices that affect traffic, and the) s
5 454 M
(   difficulty of attaining appropriate measurement conditions.) s
5 432 M
(   Internet paths are changing all the time.  Daily fluctuations in the) s
5 421 M
(   demand make the bottlenecks ebb and flow.  To minimize the) s
5 410 M
(   variability of routing changes, it's best to keep the test duration) s
5 399 M
(   relatively short.) s
5 377 M
(   TCP and UDP traffic, or traffic on ports 80 and 443, may take) s
5 366 M
(   significantly different paths on the Internet and be subject to) s
5 355 M
(   entirely different Quality of Service \(QoS\) treatment.  A good test) s
5 344 M
(   will use standard transport-layer traffic - typical for people's use) s
5 333 M
(   of the network - that is subject to the transport's congestion) s
5 322 M
(   control that might reduce the traffic's rate and thus its buffering) s
5 311 M
(   in the network.) s
5 289 M
(   Traditionally, one thinks of bufferbloat happening on the routers and) s
5 278 M
(   switches of the Internet.  However, the networking stacks of the) s
5 267 M
(   clients and servers can have huge buffers.  Data sitting in TCP) s
5 256 M
(   sockets or waiting for the application to send or read causes) s
5 245 M
(   artificial latency, and affects user experience the same way as) s
5 234 M
(   "traditional" bufferbloat.) s
5 212 M
(   Finally, it is crucial to recognize that significant queueing only) s
5 201 M
(   happens on entry to the lowest-capacity \(or "bottleneck"\) hop on a) s
5 190 M
(   network path.  For any flow of data between two communicating) s
5 179 M
(   devices, there is always one hop along the path where the capacity) s
5 168 M
(   available to that flow at that hop is the lowest among all the hops) s
5 157 M
(   of that flow's path at that moment in time.  It is important to) s
5 146 M
(   understand that the existence of a lowest-capacity hop on a network) s
5 102 M
(Paasch, et al.           Expires 16 January 2023                [Page 4]) s
_R
S
%%Page: (5) 5
%%BeginPageSetup
_S
18 36 translate
/pagenum 5 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   path is not itself a problem.  In a heterogeneous network like the) s
5 652 M
(   Internet it is inevitable that there must necessarily be some hop) s
5 641 M
(   along the path with the lowest capacity for that path.  If that hop) s
5 630 M
(   were to be improved to make it no longer the lowest-capacity hop,) s
5 619 M
(   then some other hop would become the new lowest-capacity hop for that) s
5 608 M
(   path.  In this context a "bottleneck" should not be seen as a problem) s
5 597 M
(   to be fixed, because any attempt to "fix" the bottleneck is futile -) s
5 586 M
(   such a "fix" can never remove the existence of a bottleneck on a) s
5 575 M
(   path; it just moves the bottleneck somewhere else.  Arguably, this) s
5 564 M
(   heterogeneity of the Internet is one of its greatest strengths.) s
5 553 M
(   Allowing individual technologies to evolve and improve at their own) s
5 542 M
(   pace, without requiring the entire Internet to change in lock-step,) s
5 531 M
(   has enabled enormous improvements over the years in technologies like) s
5 520 M
(   DSL, cable modems, Ethernet, and Wi-Fi, each advancing independently) s
5 509 M
(   as new developments became ready.  As a result of this flexibility we) s
5 498 M
(   have moved incrementally, one step at a time, from 56kb/s dial-up) s
5 487 M
(   modems in the 1990s to Gb/s home Internet service and Gb/s wireless) s
5 476 M
(   connectivity today.) s
5 454 M
(   Note that in a shared datagram network, conditions do not remain) s
5 443 M
(   static.  The hop that is the current bottleneck may change from) s
5 432 M
(   moment to moment.  For example, changes in other traffic may result) s
5 421 M
(   in changes to a flow's share of a given hop.  A user moving around) s
5 410 M
(   may cause the Wi-Fi transmission rate to vary widely, from a few Mb/s) s
5 399 M
(   when far from the Access Point, all the way up to Gb/s or more when) s
5 388 M
(   close to the Access Point.) s
5 366 M
(   Consequently, if we wish to enjoy the benefits of the Internet's) s
5 355 M
(   great flexibility, we need software that embraces and celebrates this) s
5 344 M
(   diversity and adapts intelligently to the varying conditions it) s
5 333 M
(   encounters.) s
5 311 M
(   Because significant queueing only happens on entry to the bottleneck) s
5 300 M
(   hop, the queue management at this critical hop of the path almost) s
5 289 M
(   entirely determines the responsiveness of the entire flow.  If the) s
5 278 M
(   bottleneck hop's queue management algorithm allows an excessively) s
5 267 M
(   large queue to form, this results in excessively large delays for) s
5 256 M
(   packets sitting in that queue awaiting transmission, significantly) s
5 245 M
(   degrading overall user experience.) s
5 223 M
(   In order to discover the depth of the buffer at the bottleneck hop,) s
5 212 M
(   the RPM Test mimics normal network operations and data transfers, to) s
5 201 M
(   cause this bottleneck buffer to fill to capacity, and then measures) s
5 190 M
(   the resulting end-to-end latency under these operating conditions.  A) s
5 179 M
(   well managed bottleneck queue will keeps its queue occupancy under) s
5 168 M
(   control, resulting in consistently low round-trip time and) s
5 157 M
(   consistently good responsiveness.  A poorly managed bottleneck queue) s
5 146 M
(   will not.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023                [Page 5]) s
_R
S
%%Page: (6) 6
%%BeginPageSetup
_S
18 36 translate
/pagenum 6 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(3.  Goals) s
5 641 M
(   The algorithm described here defines an RPM Test that serves as a) s
5 630 M
(   good proxy for user experience.  This means:) s
5 608 M
(   1.  Today's Internet traffic primarily uses HTTP/2 over TLS.  Thus,) s
5 597 M
(       the algorithm should use that protocol.) s
5 575 M
(       As a side note: other types of traffic are gaining in popularity) s
5 564 M
(       \(HTTP/3\) and/or are already being used widely \(RTP\).  Traffic) s
5 553 M
(       prioritization and QoS rules on the Internet may subject traffic) s
5 542 M
(       to completely different paths: these could also be measured) s
5 531 M
(       separately.) s
5 509 M
(   2.  The Internet is marked by the deployment of countless middleboxes) s
5 498 M
(       like transparent TCP proxies or traffic prioritization for) s
5 487 M
(       certain types of traffic.  The RPM Test must take into account) s
5 476 M
(       their effect on TCP-handshake [RFC0793], TLS-handshake, and) s
5 465 M
(       request/response.) s
5 443 M
(   3.  The test result should be expressed in an intuitive, nontechnical) s
5 432 M
(       form.) s
5 410 M
(   4.  Finally, to be useful to a wide audience, the measurement should) s
5 399 M
(       finish within a short time frame.  Our target is 20 seconds.) s
5 377 M
(4.  Measuring Responsiveness Under Working Conditions) s
5 355 M
(   To make an accurate measurement, the algorithm must reliably put the) s
5 344 M
(   network in a state that represents those "working conditions".) s
5 333 M
(   During this process, the algorithm measures the responsiveness of the) s
5 322 M
(   network.  The following explains how the former and the latter are) s
5 311 M
(   achieved.) s
5 289 M
(4.1.  Working Conditions) s
5 267 M
(   There are many different ways to define the state of "working) s
5 256 M
(   conditions" to measure responsiveness.  There is no one true answer) s
5 245 M
(   to this question.  It is a tradeoff between using realistic traffic) s
5 234 M
(   patterns and pushing the network to its limits.) s
5 212 M
(   In this document we aim to generate a realistic traffic pattern by) s
5 201 M
(   using standard HTTP transactions but exploring the worst-case) s
5 190 M
(   scenario by creating multiple of these transactions and using very) s
5 179 M
(   large data objects in these HTTP transactions.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023                [Page 6]) s
_R
S
%%Page: (7) 7
%%BeginPageSetup
_S
18 36 translate
/pagenum 7 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   This allows to create a stable state of working conditions during) s
5 652 M
(   which the network is used at its nearly full capacity, without) s
5 641 M
(   generating DoS-like traffic patterns \(e.g., intentional UDP) s
5 630 M
(   flooding\).  This creates a realistic traffic mix representative of) s
5 619 M
(   what a typical user's network experiences in normal operation.) s
5 597 M
(   Finally, as end-user usage of the network evolves to newer protocols) s
5 586 M
(   and congestion control algorithms, it is important that the working) s
5 575 M
(   conditions also can evolve to continuously represent a realistic) s
5 564 M
(   traffic pattern.) s
5 542 M
(4.1.1.  From single-flow to multi-flow) s
5 520 M
(   A single TCP connection may not be sufficient to reach the capacity) s
5 509 M
(   of a path quickly.  Using a 4MB receive window, over a network with a) s
5 498 M
(   32 ms round-trip time, a single TCP connection can achieve up to 1Gb/) s
5 487 M
(   s throughput.  For higher throughput and/or networks with higher) s
5 476 M
(   round-trip time, TCP allows larger receive window sizes, up to 1 GB.) s
5 465 M
(   For most applications there is little reason to open multiple) s
5 454 M
(   parallel TCP connections in an attempt to achieve higher throughput.) s
5 432 M
(   However, it may take some time for a single TCP connection to ramp up) s
5 421 M
(   to full speed, and one of the goals of the RPM test is to quickly) s
5 410 M
(   load the network to capacity, take its measurements, and then finish.) s
5 399 M
(   Additionally, traditional loss-based TCP congestion control) s
5 388 M
(   algorithms react aggressively to packet loss by reducing the) s
5 377 M
(   congestion window.  This reaction \(intended by the protocol design\)) s
5 366 M
(   decreases the queueing within the network, making it harder to) s
5 355 M
(   determine the depth of the bottleneck queue reliably.) s
5 333 M
(   The purpose of the RPM Test is not to productively move data across) s
5 322 M
(   the network in a useful way, the way a normal application does.  The) s
5 311 M
(   purpose of the RPM Test is, as quickly as possible, to simulate a) s
5 300 M
(   representative traffic load as if real applications were doing) s
5 289 M
(   sustained data transfers, measure the resulting round-trip time) s
5 278 M
(   occurring under those realistic conditions, and then end the test.) s
5 267 M
(   Because of this, using multiple simultaneous parallel connections) s
5 256 M
(   allows the RPM test to complete its task more quickly, in a way that) s
5 245 M
(   overall is less disruptive and less wasteful of network capacity than) s
5 234 M
(   a test using a single TCP connection that would take longer to bring) s
5 223 M
(   the bottleneck hop to a stable saturated state.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023                [Page 7]) s
_R
S
%%Page: (8) 8
%%BeginPageSetup
_S
18 36 translate
/pagenum 8 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(4.1.2.  Parallel vs Sequential Uplink and Downlink) s
5 641 M
(   Poor responsiveness can be caused by queues in either \(or both\) the) s
5 630 M
(   upstream and the downstream direction.  Furthermore, both paths may) s
5 619 M
(   differ significantly due to access link conditions \(e.g., 5G) s
5 608 M
(   downstream and LTE upstream\) or the routing changes within the ISPs.) s
5 597 M
(   To measure responsiveness under working conditions, the algorithm) s
5 586 M
(   must explore both directions.) s
5 564 M
(   One approach could be to measure responsiveness in the uplink and) s
5 553 M
(   downlink in parallel.  It would allow for a shorter test run-time.) s
5 531 M
(   However, a number of caveats come with measuring in parallel:) s
5 509 M
(   *  Half-duplex links may not permit simultaneous uplink and downlink) s
5 498 M
(      traffic.  This means the test might not reach the path's capacity) s
5 487 M
(      in both directions at once and thus not expose all the potential) s
5 476 M
(      sources of low responsiveness.) s
5 454 M
(   *  Debuggability of the results becomes harder: During parallel) s
5 443 M
(      measurement it is impossible to differentiate whether the observed) s
5 432 M
(      latency happens in the uplink or the downlink direction.) s
5 410 M
(   Thus, we recommend testing uplink and downlink sequentially.) s
5 399 M
(   Parallel testing is considered a future extension.) s
5 377 M
(4.1.3.  Reaching full link utilization) s
5 355 M
(   The RPM Test gradually increases the number of TCP connections and) s
5 344 M
(   measures "goodput" - the sum of actual data transferred across all) s
5 333 M
(   connections in a unit of time.  When the goodput stops increasing, it) s
5 322 M
(   means that the network is used at its full capacity.  At this point) s
5 311 M
(   we are creating the worst-case scenario within the limits of the) s
5 300 M
(   realistic traffic pattern.) s
5 278 M
(   The algorithm notes that throughput increases rapidly until TCP) s
5 267 M
(   connections complete their TCP slow-start phase.  At that point,) s
5 256 M
(   throughput eventually stalls, often due to receive window) s
5 245 M
(   limitations, particularly in cases of high network bandwidth, high) s
5 234 M
(   network round-trip time, low receive window size, or a combination of) s
5 223 M
(   all three.  The only means to further increase throughput is by) s
5 212 M
(   adding more TCP connections to the pool of load-generating) s
5 201 M
(   connections.  If new connections leave the throughput the same, full) s
5 190 M
(   link utilization has been reached and - more importantly - the) s
5 179 M
(   working condition is stable.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023                [Page 8]) s
_R
S
%%Page: (9) 9
%%BeginPageSetup
_S
18 36 translate
/pagenum 9 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(4.1.4.  Final "Working Conditions" Algorithm) s
5 641 M
(   The following algorithm reaches working conditions of a network by) s
5 630 M
(   using HTTP/2 upload \(POST\) or download \(GET\) requests of infinitely) s
5 619 M
(   large files.  The algorithm is the same for upload and download and) s
5 608 M
(   uses the same term "load-generating connection" for each.  The) s
5 597 M
(   actions of the algorithm take place at regular intervals.  For the) s
5 586 M
(   current draft the interval is defined as one second.) s
5 564 M
(   Where) s
5 542 M
(   *  i: The index of the current interval.  The variable i is) s
5 531 M
(      initialized to 0 when the algorithm begins and increases by one) s
5 520 M
(      for each interval.) s
5 498 M
(   *  instantaneous aggregate goodput at interval p: The number of total) s
5 487 M
(      bytes of data transferred within interval p, divided by the) s
5 476 M
(      interval duration.  If p is negative \(i.e., a time interval) s
5 465 M
(      logically prior to the start of the test beginning, used in moving) s
5 454 M
(      average calculations\), the number of total bytes of data) s
5 443 M
(      transferred within that interval is considered to be 0.) s
5 421 M
(   *  moving average aggregate goodput at interval p: The number of) s
5 410 M
(      total bytes of data transferred within interval p and the three) s
5 399 M
(      immediately preceding intervals, divided by four times the) s
5 388 M
(      interval duration.) s
5 366 M
(   *  moving average stability during the period between intervals b and) s
5 355 M
(      e: Whether or not, for all b<=x<e, the absolute difference is less) s
5 344 M
(      than 5% between the moving average aggregate goodput at interval x) s
5 333 M
(      and the moving average aggregate goodput at interval x+1.  If all) s
5 322 M
(      absolute differences are below 5% then the moving average has) s
5 311 M
(      achieved stability.  If any of the absolute differences are 5% or) s
5 300 M
(      more then the moving average has not achieved stability.) s
5 278 M
(   the steps of the algorithm are:) s
5 256 M
(   *  Create four load-generating connections.) s
5 234 M
(   *  At each interval:) s
5 212 M
(      -  Compute the instantaneous aggregate goodput at interval i.) s
5 190 M
(      -  Compute the moving average aggregate goodput at interval i.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023                [Page 9]) s
_R
S
%%Page: (10) 10
%%BeginPageSetup
_S
18 36 translate
/pagenum 10 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(      -  If the moving average aggregate goodput at interval i is more) s
5 652 M
(         than a 5% increase over the moving average aggregate goodput at) s
5 641 M
(         interval i - 1, the network has not yet reached full link) s
5 630 M
(         utilization.) s
5 608 M
(         o  If no load-generating connections have been added within the) s
5 597 M
(            last four intervals, add four more load-generating) s
5 586 M
(            connections.) s
5 564 M
(      -  Else, the network has reached full link utilization with the) s
5 553 M
(         existing load-generating connections.  The current state is a) s
5 542 M
(         candidate for stable working conditions.) s
5 520 M
(         o  If a\) there have been load-generating connections added in) s
5 509 M
(            the past four intervals and b\) there has been moving average) s
5 498 M
(            stability during the period between intervals i-4 and i,) s
5 487 M
(            then the network has reached full link utilization and the) s
5 476 M
(            algorithm terminates.) s
5 454 M
(         o  Otherwise, add four more load-generating connections.) s
5 432 M
(   In Section 3, it is mentioned that one of the goals is that the test) s
5 421 M
(   finishes within 20 seconds.  It is left to the implementation what to) s
5 410 M
(   do when full link utilization is not reached within that time-frame.) s
5 399 M
(   For example, an implementation might gather a provisional) s
5 388 M
(   responsiveness measurement or let the test run for longer.) s
5 366 M
(4.2.  Measuring Responsiveness) s
5 344 M
(   Measuring responsiveness during the previously explained working) s
5 333 M
(   conditions creation is a continuous process during the duration of) s
5 322 M
(   the test.  It requires a sufficiently large sample-size to have) s
5 311 M
(   confidence in the results.) s
5 289 M
(   The measurement of the responsiveness happens by sending probe-) s
5 278 M
(   requests for a small object.  There are two types of probe requests:) s
5 256 M
(   1.  A HTTP GET request on a separate connection \("foreign probes"\).) s
5 245 M
(       This test mimics the time it takes for a web browser to connect) s
5 234 M
(       to a new web server and request the first element of a web page) s
5 223 M
(       \(e.g., "index.html"\), or the startup time for a video streaming) s
5 212 M
(       client to launch and begin fetching media.) s
5 190 M
(   2.  A HTTP GET request multiplexed on the load-generating connections) s
5 179 M
(       \("self probes"\).  This test mimics the time it takes for a video) s
5 168 M
(       streaming client to skip ahead to a different chapter in the same) s
5 157 M
(       video stream, or for a navigation client to react and fetch new) s
5 146 M
(       map tiles when the user scrolls the map to view a different area.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023               [Page 10]) s
_R
S
%%Page: (11) 11
%%BeginPageSetup
_S
18 36 translate
/pagenum 11 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(       In a well functioning system fetching new data over an existing) s
5 652 M
(       connection should take less time than creating a brand new TLS) s
5 641 M
(       connection from scratch to do the same thing.) s
5 619 M
(   Foreign probes will provide 3 sets of data-points.  First, the) s
5 608 M
(   duration of the TCP-handshake \(noted hereafter as tcp_foreign\).) s
5 597 M
(   Second, the TLS round-trip-time \(noted tls_foreign\).  For this, it is) s
5 586 M
(   important to note that different TLS versions have a different number) s
5 575 M
(   of round-trips.  Thus, the TLS establishment time needs to be) s
5 564 M
(   normalized to the number of round-trips the TLS handshake takes until) s
5 553 M
(   the connection is ready to transmit data.  And third, the HTTP) s
5 542 M
(   elapsed time between issuing the GET request for a 1-byte object and) s
5 531 M
(   receiving the entire response \(noted http_foreign\).) s
5 509 M
(   Self probes will provide a single data-point for the duration between) s
5 498 M
(   of time between when the HTTP GET request for the 1-byte object is) s
5 487 M
(   issued on the load-generating connection and the full HTTP response) s
5 476 M
(   has been received \(noted http_self\).) s
5 454 M
(   tcp_foreign, tls_foreign, http_foreign and http_self are all measured) s
5 443 M
(   in milliseconds.) s
5 421 M
(   The more probes that are sent, the more data is available for) s
5 410 M
(   calculation.  In order to generate as much data as possible, the) s
5 399 M
(   methodology requires a client to issue these probes every 100ms.  For) s
5 388 M
(   the probes on the load-generating connections, the client needs to) s
5 377 M
(   use one of the initial load-generating connections.  This means that) s
5 366 M
(   every 100ms, 2 probes are being evaluated.  The total amount of data) s
5 355 M
(   used for these probes would be no more than about 50KB worth of data) s
5 344 M
(   within one second.) s
5 322 M
(4.2.1.  Aggregating the Measurements) s
5 300 M
(   The algorithm produces sets of 4 times for each probe, namely:) s
5 289 M
(   tcp_foreign, tls_foreign, http_foreign, http_self \(from the previous) s
5 278 M
(   section\).  Each of these sets will have a large number of samples.) s
5 267 M
(   Use the following methodology to calculate a single RPM value from) s
5 256 M
(   these data:) s
5 234 M
(   1.  Among each set, take the 90th percentile, thus resulting in 4) s
5 223 M
(       individual numbers \(tcp_foreign_p90, tls_foreign_p90,) s
5 212 M
(       http_foreign_p90, http_self_p90\).) s
5 190 M
(   2.  Calculate the RPM as the weighted mean:) s
5 168 M
(Responsiveness = 60000 / \(\(1/3*tcp_foreign_p90 + 1/3*tls_foreign_p90 + 1/3*http_foreign_p90 + ) s
5 157 M
(http_self_p90\)/2\)) s
5 135 M
(   This responsiveness value presents round-trips per minute \(RPM\).) s
5 91 M
(Paasch, et al.           Expires 16 January 2023               [Page 11]) s
_R
S
%%Page: (12) 12
%%BeginPageSetup
_S
18 36 translate
/pagenum 12 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(5.  Interpreting responsiveness results) s
5 641 M
(   The described methodology uses a high-level approach to measure) s
5 630 M
(   responsiveness.  By executing the test with regular HTTP requests a) s
5 619 M
(   number of elements come into play that will influence the result.) s
5 608 M
(   Contrary to more traditional measurement methods the responsiveness) s
5 597 M
(   metric is not only influenced by the properties of the network but) s
5 586 M
(   can significantly be influenced by the properties of the client and) s
5 575 M
(   the server implementations.  This section describes how the different) s
5 564 M
(   elements influence responsiveness and how a user may differentiate) s
5 553 M
(   them when debugging a network.) s
5 531 M
(5.1.  Elements influencing responsiveness) s
5 509 M
(   Due to the HTTP-centric approach of the measurement methodology a) s
5 498 M
(   number of factors come into play that influence the results.  Namely,) s
5 487 M
(   the client-side networking stack \(from the top of the HTTP-layer all) s
5 476 M
(   the way down to the physical layer\), the network \(including potential) s
5 465 M
(   transparent HTTP "accelerators"\), and the server-side networking) s
5 454 M
(   stack.  The following outlines how each of these contributes to the) s
5 443 M
(   responsiveness.) s
5 421 M
(5.1.1.  Client side influence) s
5 399 M
(   As the driver of the measurement, the client-side networking stack) s
5 388 M
(   can have a large influence on the result.  The biggest influence of) s
5 377 M
(   the client comes when measuring the responsiveness in the uplink) s
5 366 M
(   direction.  Load-generation will cause queue-buildup in the transport) s
5 355 M
(   layer as well as the HTTP layer.  Additionally, if the network's) s
5 344 M
(   bottleneck is on the first hop, queue-buildup will happen at the) s
5 333 M
(   layers below the transport stack \(e.g., NIC firmware\).) s
5 311 M
(   Each of these queue build-ups may cause latency and thus low) s
5 300 M
(   responsiveness.  A well designed networking stack would ensure that) s
5 289 M
(   queue-buildup in the TCP layer is kept at a bare minimum with) s
5 278 M
(   solutions like TCP_NOTSENT_LOWAT [draft-ietf-tcpm-rfc793bis].  At the) s
5 267 M
(   HTTP/2 layer it is important that the load-generating data is not) s
5 256 M
(   interfering with the latency-measuring probes.  For example, the) s
5 245 M
(   different streams should not be stacked one after the other but) s
5 234 M
(   rather be allowed to be multiplexed for optimal latency.  The queue-) s
5 223 M
(   buildup at these layers would only influence latency on the probes) s
5 212 M
(   that are sent on the load-generating connections.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023               [Page 12]) s
_R
S
%%Page: (13) 13
%%BeginPageSetup
_S
18 36 translate
/pagenum 13 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   Below the transport layer many places have a potential queue build-) s
5 652 M
(   up.  It is important to keep these queues at reasonable sizes or that) s
5 641 M
(   they implement techniques like FQ-Codel.  Depending on the techniques) s
5 630 M
(   used at these layers, the queue build-up can influence latency on) s
5 619 M
(   probes sent on load-generating connections as well as separate) s
5 608 M
(   connections.  If flow-queuing is used at these layers, the impact on) s
5 597 M
(   separate connections will be negligible.) s
5 575 M
(5.1.2.  Network influence) s
5 553 M
(   The network obviously is a large driver for the responsiveness) s
5 542 M
(   result.  Propagation delay from the client to the server as well as) s
5 531 M
(   queuing in the bottleneck node will cause latency.  Beyond these) s
5 520 M
(   traditional sources of latency, other factors may influence the) s
5 509 M
(   results as well.  Many networks deploy transparent TCP Proxies,) s
5 498 M
(   firewalls doing deep packet-inspection, HTTP "accelerators",... As) s
5 487 M
(   the methodology relies on the use of HTTP/2, the responsiveness) s
5 476 M
(   metric will be influenced by such devices as well.) s
5 454 M
(   The network will influence both kinds of latency probes that the) s
5 443 M
(   responsiveness tests sends out.  Depending on the network's use of) s
5 432 M
(   Smart Queue Management and whether this includes flow-queuing or not,) s
5 421 M
(   the latency probes on the load-generating connections may be) s
5 410 M
(   influenced differently than the probes on the separate connections.) s
5 388 M
(5.1.3.  Server side influence) s
5 366 M
(   Finally, the server-side introduces the same kind of influence on the) s
5 355 M
(   responsiveness as the client-side, with the difference that the) s
5 344 M
(   responsiveness will be impacted during the downlink load generation.) s
5 322 M
(5.2.  Root-causing Responsiveness) s
5 300 M
(   Once an RPM result has been generated one might be tempted to try to) s
5 289 M
(   localize the source of a potential low responsiveness.  The) s
5 278 M
(   responsiveness measurement is however aimed at providing a quick,) s
5 267 M
(   top-level view of the responsiveness under working conditions the way) s
5 256 M
(   end-users experience it.  Localizing the source of low responsiveness) s
5 245 M
(   involves however a set of different tools and methodologies.) s
5 223 M
(   Nevertheless, the responsiveness test allows to gain some insight) s
5 212 M
(   into what the source of the latency is.  The previous section) s
5 201 M
(   described the elements that influence the responsiveness.  From there) s
5 190 M
(   it became apparent that the latency measured on the load-generating) s
5 179 M
(   connections and the latency measured on separate connections may be) s
5 168 M
(   different due to the different elements.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023               [Page 13]) s
_R
S
%%Page: (14) 14
%%BeginPageSetup
_S
18 36 translate
/pagenum 14 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   For example, if the latency measured on separate connections is much) s
5 652 M
(   less than the latency measured on the load-generating connections, it) s
5 641 M
(   is possible to narrow down the source of the additional latency on) s
5 630 M
(   the load-generating connections.  As long as the other elements of) s
5 619 M
(   the network don't do flow-queueing, the additional latency must come) s
5 608 M
(   from the queue build-up at the HTTP and TCP layer.  This is because) s
5 597 M
(   all other bottlenecks in the network that may cause a queue build-up) s
5 586 M
(   will be affecting the load-generating connections as well as the) s
5 575 M
(   separate latency probing connections in the same way.) s
5 553 M
(6.  RPM Test Server API) s
5 531 M
(   The RPM measurement is built upon a foundation of standard protocols:) s
5 520 M
(   IP, TCP, TLS, HTTP/2.  On top of this foundation, a minimal amount of) s
5 509 M
(   new "protocol" is defined, merely specifying the URLs that used for) s
5 498 M
(   GET and PUT in the process of executing the test.) s
5 476 M
(   Both the client and the server MUST support HTTP/2 over TLS.  The) s
5 465 M
(   client MUST be able to send a GET request and a POST.  The server) s
5 454 M
(   MUST be able to respond to both of these HTTP commands.  The server) s
5 443 M
(   MUST have the ability to provide content upon a GET request.  Both) s
5 432 M
(   client and server SHOULD use loss-based congestion controls like) s
5 421 M
(   Cubic.  The server MUST use a packet scheduling algorithm that) s
5 410 M
(   minimizes internal queueing to avoid affecting the client's) s
5 399 M
(   measurement.) s
5 377 M
(   The server MUST respond to 4 URLs:) s
5 355 M
(   1.  A "small" URL/response: The server must respond with a status) s
5 344 M
(       code of 200 and 1 byte in the body.  The actual message content) s
5 333 M
(       is irrelevant.  The server SHOULD specify the content-type as) s
5 322 M
(       application/octet-stream.  The server SHOULD minimize the size,) s
5 311 M
(       in bytes, of the response fields that are encoded and sent on the) s
5 300 M
(       wire.) s
5 278 M
(   2.  A "large" URL/response: The server must respond with a status) s
5 267 M
(       code of 200 and a body size of at least 8GB.  The server SHOULD) s
5 256 M
(       specify the content-type as application/octet-stream.  The body) s
5 245 M
(       can be bigger, and may need to grow as network speeds increases) s
5 234 M
(       over time.  The actual message content is irrelevant.  The client) s
5 223 M
(       will probably never completely download the object, but will) s
5 212 M
(       instead close the connection after reaching working condition and) s
5 201 M
(       making its measurements.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023               [Page 14]) s
_R
S
%%Page: (15) 15
%%BeginPageSetup
_S
18 36 translate
/pagenum 15 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   3.  An "upload" URL/response: The server must handle a POST request) s
5 652 M
(       with an arbitrary body size.  The server should discard the) s
5 641 M
(       payload.  The actual POST message content is irrelevant.  The) s
5 630 M
(       client will probably never completely upload the object, but will) s
5 619 M
(       instead close the connection after reaching working condition and) s
5 608 M
(       making its measurements.) s
5 586 M
(   4.  A configuration URL that returns a JSON [RFC8259] object with the) s
5 575 M
(       information the client uses to run the test \(sample below\).  The) s
5 564 M
(       server SHOULD specify the content-type as application/json.) s
5 553 M
(       Sample JSON:) s
5 531 M
(   {) s
5 520 M
(     "version": 1,) s
5 509 M
(     "urls": {) s
5 498 M
(       "large_https_download_url":"https://nq.example.com/api/v1/large",) s
5 487 M
(       "small_https_download_url":"https://nq.example.com/api/v1/small",) s
5 476 M
(       "https_upload_url":        "https://nq.example.com/api/v1/upload") s
5 465 M
(     }) s
5 454 M
(     "test_endpoint": "hostname123.provider.com") s
5 443 M
(   }) s
5 421 M
(   All of the fields in the sample configuration are required except) s
5 410 M
(   "test_endpoint".  If the test server provider can pin all of the) s
5 399 M
(   requests for a test run to a specific host in the service \(for a) s
5 388 M
(   particular run\), they can specify that host name in the) s
5 377 M
(   "test_endpoint" field.) s
5 355 M
(   The client begins the responsiveness measurement by querying for the) s
5 344 M
(   JSON configuration.  This supplies the URLs for creating the load-) s
5 333 M
(   generating connections in the upstream and downstream direction as) s
5 322 M
(   well as the small object for the latency measurements.) s
5 300 M
(7.  RPM Test Server Discovery) s
5 278 M
(   It makes sense to host RPM Test Server instances in Internet Data) s
5 267 M
(   Centers where they can be accessed easily by users wishing to test) s
5 256 M
(   the quality of their Internet connection.  However, when a user) s
5 245 M
(   performs an RPM test and determines that they are suffering from poor) s
5 234 M
(   RPM during download, the logical next question might be, "What's) s
5 223 M
(   causing my poor performance?  Is it poor buffer management by my ISP?) s
5 212 M
(   Is it poor buffer management in my home Wi-Fi Access point?) s
5 201 M
(   Something else?") s
5 179 M
(   To help an end user answer this question, it will be useful for home) s
5 168 M
(   gateway equipment to host RPM Test Server instances.  In an example) s
5 157 M
(   configuration, a user may have cable modem service offering 100 Mb/s) s
5 146 M
(   download speed, connected via gigabit Ethernet to one or more Wi-Fi) s
5 102 M
(Paasch, et al.           Expires 16 January 2023               [Page 15]) s
_R
S
%%Page: (16) 16
%%BeginPageSetup
_S
18 36 translate
/pagenum 16 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   access points in the home, which then offer service to Wi-Fi client) s
5 652 M
(   devices at different rates depending on distance, interference from) s
5 641 M
(   other traffic, etc.  By having the cable modem itself host an RPM) s
5 630 M
(   Test Server instance, the user can then run a test between the cable) s
5 619 M
(   modem and their computer or smartphone, to help isolate whether) s
5 608 M
(   bufferbloat they are experiencing is occurring in equipment inside) s
5 597 M
(   the home \(like their Wi-Fi access points\) or somewhere outside the) s
5 586 M
(   home.) s
5 564 M
(   To aid in discoverability of these facilities, local RPM Test Server) s
5 553 M
(   instances SHOULD advertise the availability of service type [RFC6335]) s
5 542 M
(   "_nq._tcp" \(Network Quality\), via DNS-Based Service Discovery) s
5 531 M
(   [RFC6763], using Multicast DNS on its local link\(s\) [RFC6762].  Where) s
5 520 M
(   applicable, an RPM Test Server instance SHOULD also advertise the) s
5 509 M
(   availability of its service via unicast discovery, for discovery by) s
5 498 M
(   client devices not directly attached to the same link.  Population of) s
5 487 M
(   the appropriate DNS zone with the relevant unicast discovery records) s
5 476 M
(   can be performed automatically using a Discovery Proxy [RFC8766], or) s
5 465 M
(   in some scenarios simply by having a human administrator manually) s
5 454 M
(   enter the required records.  Similarly, a "cloud" service, providing) s
5 443 M
(   Internet hosting service for "example.com" could choose to include) s
5 432 M
(   the relevant DNS-SD records within the "example.com" domain [RFC6763]) s
5 421 M
(   to communicate to clients the list of available RPM Test Server) s
5 410 M
(   instances.) s
5 388 M
(8.  Security Considerations) s
5 366 M
(   TBD) s
5 344 M
(9.  IANA Considerations) s
5 322 M
(   IANA has been requested to record the service type "_nq._tcp") s
5 311 M
(   \(Network Quality\) for advertising and discovery of RPM Test Server) s
5 300 M
(   instances.) s
5 278 M
(10.  Acknowledgments) s
5 256 M
(   We would like to thank Rich Brown for his editorial pass over this) s
5 245 M
(   I-D.  We also thank Erik Auerswald and Will Hawkins for their) s
5 234 M
(   constructive feedback on the I-D.) s
5 212 M
(11.  Informative References) s
5 190 M
(   [Bufferbloat]) s
5 179 M
(              Gettys, J. and K. Nichols, "Bufferbloat: Dark Buffers in) s
5 168 M
(              the Internet", Communications of the ACM, Volume 55,) s
5 157 M
(              Number 1 \(2012\) , n.d..) s
5 102 M
(Paasch, et al.           Expires 16 January 2023               [Page 16]) s
_R
S
%%Page: (17) 17
%%BeginPageSetup
_S
18 36 translate
/pagenum 17 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   [draft-ietf-tcpm-rfc793bis]) s
5 652 M
(              Eddy, W., "Transmission Control Protocol \(TCP\)) s
5 641 M
(              Specification", Internet Engineering Task Force , n.d..) s
5 619 M
(   [RFC0793]  Postel, J., "Transmission Control Protocol", STD 7,) s
5 608 M
(              RFC 793, DOI 10.17487/RFC0793, September 1981,) s
5 597 M
(              <https://www.rfc-editor.org/info/rfc793>.) s
5 575 M
(   [RFC6335]  Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S.) s
5 564 M
(              Cheshire, "Internet Assigned Numbers Authority \(IANA\)) s
5 553 M
(              Procedures for the Management of the Service Name and) s
5 542 M
(              Transport Protocol Port Number Registry", BCP 165,) s
5 531 M
(              RFC 6335, DOI 10.17487/RFC6335, August 2011,) s
5 520 M
(              <https://www.rfc-editor.org/info/rfc6335>.) s
5 498 M
(   [RFC6762]  Cheshire, S. and M. Krochmal, "Multicast DNS", RFC 6762,) s
5 487 M
(              DOI 10.17487/RFC6762, February 2013,) s
5 476 M
(              <https://www.rfc-editor.org/info/rfc6762>.) s
5 454 M
(   [RFC6763]  Cheshire, S. and M. Krochmal, "DNS-Based Service) s
5 443 M
(              Discovery", RFC 6763, DOI 10.17487/RFC6763, February 2013,) s
5 432 M
(              <https://www.rfc-editor.org/info/rfc6763>.) s
5 410 M
(   [RFC8033]  Pan, R., Natarajan, P., Baker, F., and G. White,) s
5 399 M
(              "Proportional Integral Controller Enhanced \(PIE\): A) s
5 388 M
(              Lightweight Control Scheme to Address the Bufferbloat) s
5 377 M
(              Problem", RFC 8033, DOI 10.17487/RFC8033, February 2017,) s
5 366 M
(              <https://www.rfc-editor.org/info/rfc8033>.) s
5 344 M
(   [RFC8259]  Bray, T., Ed., "The JavaScript Object Notation \(JSON\) Data) s
5 333 M
(              Interchange Format", STD 90, RFC 8259,) s
5 322 M
(              DOI 10.17487/RFC8259, December 2017,) s
5 311 M
(              <https://www.rfc-editor.org/info/rfc8259>.) s
5 289 M
(   [RFC8290]  Hoeiland-Joergensen, T., McKenney, P., Taht, D., Gettys,) s
5 278 M
(              J., and E. Dumazet, "The Flow Queue CoDel Packet Scheduler) s
5 267 M
(              and Active Queue Management Algorithm", RFC 8290,) s
5 256 M
(              DOI 10.17487/RFC8290, January 2018,) s
5 245 M
(              <https://www.rfc-editor.org/info/rfc8290>.) s
5 223 M
(   [RFC8446]  Rescorla, E., "The Transport Layer Security \(TLS\) Protocol) s
5 212 M
(              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,) s
5 201 M
(              <https://www.rfc-editor.org/info/rfc8446>.) s
5 179 M
(   [RFC8766]  Cheshire, S., "Discovery Proxy for Multicast DNS-Based) s
5 168 M
(              Service Discovery", RFC 8766, DOI 10.17487/RFC8766, June) s
5 157 M
(              2020, <https://www.rfc-editor.org/info/rfc8766>.) s
5 102 M
(Paasch, et al.           Expires 16 January 2023               [Page 17]) s
_R
S
%%Page: (18) 18
%%BeginPageSetup
_S
18 36 translate
/pagenum 18 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(Appendix A.  Example Server Configuration) s
5 641 M
(   This section shows fragments of sample server configurations to host) s
5 630 M
(   an responsiveness measurement endpoint.) s
5 608 M
(A.1.  Apache Traffic Server) s
5 586 M
(   Apache Traffic Server starting at version 9.1.0 supports) s
5 575 M
(   configuration as a responsiveness server.  It requires the generator) s
5 564 M
(   and the statichit plugin.) s
5 542 M
(   The sample remap configuration file then is:) s
5 520 M
(   map https://nq.example.com/api/v1/config \\) s
5 509 M
(       http://localhost/ \\) s
5 498 M
(       @plugin=statichit.so \\) s
5 487 M
(       @pparam=--file-path=config.example.com.json \\) s
5 476 M
(       @pparam=--mime-type=application/json) s
5 454 M
(   map https://nq.example.com/api/v1/large \\) s
5 443 M
(       http://localhost/cache/8589934592/ \\) s
5 432 M
(       @plugin=generator.so) s
5 410 M
(   map https://nq.example.com/api/v1/small \\) s
5 399 M
(       http://localhost/cache/1/ \\) s
5 388 M
(       @plugin=generator.so) s
5 366 M
(   map https://nq.example.com/api/v1/upload \\) s
5 355 M
(       http://localhost/ \\) s
5 344 M
(       @plugin=generator.so) s
5 322 M
(Authors' Addresses) s
5 300 M
(   Christoph Paasch) s
5 289 M
(   Apple Inc.) s
5 278 M
(   One Apple Park Way) s
5 267 M
(   Cupertino, California 95014,) s
5 256 M
(   United States of America) s
5 234 M
(   Email: cpaasch@apple.com) s
5 201 M
(   Randall Meyer) s
5 190 M
(   Apple Inc.) s
5 179 M
(   One Apple Park Way) s
5 168 M
(   Cupertino, California 95014,) s
5 157 M
(   United States of America) s
5 102 M
(Paasch, et al.           Expires 16 January 2023               [Page 18]) s
_R
S
%%Page: (19) 19
%%BeginPageSetup
_S
18 36 translate
/pagenum 19 def
/fname (draft-ietf-ippm-responsiveness.txt) def
/fdir (.) def
/ftail (draft-ietf-ippm-responsiveness.txt) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
5 696 M
(Internet-Draft   Responsiveness under Working Conditions       July 2022) s
5 663 M
(   Email: rrm@apple.com) s
5 630 M
(   Stuart Cheshire) s
5 619 M
(   Apple Inc.) s
5 608 M
(   One Apple Park Way) s
5 597 M
(   Cupertino, California 95014,) s
5 586 M
(   United States of America) s
5 564 M
(   Email: cheshire@apple.com) s
5 531 M
(   Omer Shapira) s
5 520 M
(   Apple Inc.) s
5 509 M
(   One Apple Park Way) s
5 498 M
(   Cupertino, California 95014,) s
5 487 M
(   United States of America) s
5 465 M
(   Email: oesh@apple.com) s
5 432 M
(   Matt Mathis) s
5 421 M
(   Google, Inc) s
5 410 M
(   1600 Amphitheatre Parkway) s
5 399 M
(   Mountain View, CA  94043,) s
5 388 M
(   United States of America) s
5 366 M
(   Email: mattmathis@google.com) s
5 102 M
(Paasch, et al.           Expires 16 January 2023               [Page 19]) s
_R
S
%%Trailer
%%Pages: 19
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
