<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.22 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-cpaasch-ippm-responsiveness-01" category="exp">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>

    <date year="2022" month="February" day="25"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem.
We believe that creating a tool whose measurement matches people’s
every day experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience especially when the network is fully loaded
(“responsiveness under working conditions”.)
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory -
that is, its effect is not always present.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
make the standard “network quality measures” of
throughput, idle latency, and responsiveness.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” - the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what is a millisecond?”) and
counterintuitive (“100 msec - that sounds good -
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is “the higher the better”. This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for cars.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport layer traffic - typical
for people’s use of the network -
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is important to note that queueing only happens behind
a slow “bottleneck” link in the network,
and only occurs when sufficient traffic is present.
The RPM Test must ensure that buffers are actually full
for a sustained period, and only then make repeated latency
measurements in this particular state.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
DNS-request <xref target="RFC1035"/>, TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
Once the network has reached that state,
the algorithm can measure its responsiveness.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>For the purpose of this methodology, typical “working conditions” represent a
state of the network in which the bottleneck node is experiencing ingress and
egress flows similar to those created by humans in the typical
day-to-day pattern.</t>

<t>While a single HTTP transaction might briefly put a network into
working conditions, making reliable measurements
requires maintaining the state over sufficient time.</t>

<t>The algorithm must also detect when the network is in a
persistent working condition, also called “saturation”.</t>

<t>Desired properties of “working condition”:</t>

<t><list style="symbols">
  <t>Should not waste traffic, because the person may be paying for it.</t>
  <t>Should finish within a short time to
avoid impacting other people on the same network,
to avoid varying network conditions, and not try the person’s patience.</t>
</list></t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient to saturate a path.
For example, the 4MB constraints on TCP window size constraints
may not fill the pipe.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it hard to reach saturation.</t>

<t>The goal of the RPM Test is to keep the network as busy as possible
in a sustained and persistent way.
It uses multiple TCP connections and gradually adds more TCP flows
until saturation is reached.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must saturate both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not saturate both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-saturation" title="Reaching saturation">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” - the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that saturation has been
reached.</t>

<t>Saturation has two criteria:
a) the load-generating connections are utilizing all the
capacity of the bottleneck,
b) the buffers in the bottleneck are completely filled.</t>

<t>The algorithm notes that throughput gradually increases until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls
usually due to receive window limitations.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
saturation has been reached and - more importantly -
the working condition is stable.</t>

<t>Filling buffers at the bottleneck depends on the congestion control
deployed on the sender side.
Congestion control algorithms like BBR may reach high throughput
without causing queueing because the bandwidth detection
portion of BBR effectively seeks the bottleneck capacity.</t>

<t>RPM Test clients and servers should use loss-based congestion controls
like Cubic to fill queues reliably.</t>

<t>The RPM Test detects saturation when the observed goodput is not increasing
even as connections are being added,
or it detects packet loss or ECN marks signaling
congestion or a full buffer of the bottleneck link.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions (saturation) of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load-generating connection” for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one (1) second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p. If p is less than 0, the number of total bytes of data transferred within the
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The average of the number of total bytes of data
transferred in the instantaneous average aggregate goodput at intervals p - x, for all 0≤x&lt;4.</t>
  <t>moving average stability during the period between intervals b and e: Whether or not the differences between the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1 (for all b≤x&lt;e) is less than 5%.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create four (4) load-generating connections.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached saturation.
      <list style="symbols">
          <t>If no load-generating connections have been added within the last four (4) intervals, add four (4) more load-generating connections.</t>
        </list></t>
      <t>Else, the network has reached saturation with the existing load-generating connections. The current state is a candidate for stable saturation.
      <list style="symbols">
          <t>If a) there have been load-generating connections added in the past four (4) intervals and b) there has been moving average stability during the period between intervals i-4 and i,
then the network has reached stable saturation and the algorithm terminates.</t>
          <t>Otherwise, add four (4) more load-generating connections.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when saturation is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Note: It is tempting to envision an initial base round-trip time (RTT)
measurement and adjust the intervals as a function of that RTT.
However,
experiments have shown that this makes the saturation detection extremely
unstable in low RTT environments.
In the situation where the “unloaded” RTT is in the
single-digit millisecond range, yet the network’s RTT increases under load
to more than a hundred milliseconds, the intervals become much too low to
accurately drive the algorithm.</t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Once the network is in a consistent working conditions,
the RPM Test must “probe” the network multiple times
to measure its responsiveness.</t>

<t>Each RPM Test probe measures:</t>

<t><list style="numbers">
  <t>The responsiveness of the different steps to create a new connection,
all during working conditions.  <vspace blankLines='1'/>
To do this, the test measures the time needed to make a DNS request,
establish a TCP connection on port 443,
establish a TLS context using TLS1.3 <xref target="RFC8446"/>, and
send and receive a one-byte object with a HTTP/2 GET request.
It repeats these steps multiple times for accuracy.</t>
  <t>The responsiveness of the network and the client/server networking stacks
for the load-generating connections themselves.  <vspace blankLines='1'/>
To do this, the load-generating connections multiplex an HTTP/2 GET
request for a one-byte object to get the end-to-end latency on the
connections that are using the network at full speed.</t>
</list></t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 5 times for each probe, namely:
DNS handshake, TCP handshake, TLS handshake, HTTP/2 request/response on
separate (idle) connections, HTTP/2 request/response on load-generating connections.
This fine-grained data is useful, but not necessary for creating a useful metric.</t>

<t>To create a single “Responsiveness” (e.g., RPM) number,
this first iteration of the algorithm gives
an equal weight to each of these values.
That is, it sums the five time values for each probe,
and divides by the total number of probes to compute
an average probe duration.
The reciprocal of this, normalized to 60 seconds,
gives the Round-trips Per Minute (RPM).</t>

</section>
<section anchor="statistical-confidence" title="Statistical Confidence">

<t>The number of probes necessary for statistical confidence
is an open question.
One could imagine a computation of the variance and confidence interval
that would drive the number of measurements and balance the accuracy
with the speed of the measurement itself.</t>

</section>
</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement uses standard protocols:
no new protocol is defined.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS 1.3.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
Further, the server endpoint MUST be accessible through a hostname
that can be resolved through DNS.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual body content is irrelevant.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual body content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below).
Sample JSON:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "small_https_download_url": "https://networkquality.example.com/api/v1/small",
    "large_https_download_url": "https://networkquality.example.com/api/v1/large",
    "https_upload_url": "https://networkquality.example.com/api/v1/upload"
  }
}
]]></artwork></figure>
  </t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>TBD</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>We would like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald and Will Hawkins for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>




<reference anchor='RFC0793' target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author fullname='J. Postel' initials='J.' surname='Postel'><organization/></author>
<date month='September' year='1981'/>
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference anchor='RFC1035' target='https://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author fullname='P.V. Mockapetris' initials='P.V.' surname='Mockapetris'><organization/></author>
<date month='November' year='1987'/>
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'><organization/></author>
<author fullname='P. McKenney' initials='P.' surname='McKenney'><organization/></author>
<author fullname='D. Taht' initials='D.' surname='Taht'><organization/></author>
<author fullname='J. Gettys' initials='J.' surname='Gettys'><organization/></author>
<author fullname='E. Dumazet' initials='E.' surname='Dumazet'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author fullname='T. Bray' initials='T.' role='editor' surname='Bray'><organization/></author>
<date month='December' year='2017'/>
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference anchor='RFC8446' target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author fullname='E. Rescorla' initials='E.' surname='Rescorla'><organization/></author>
<date month='August' year='2018'/>
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
H4sIADBOGWIAA9VcW3PcyHV+x6/ozJYtsjJDURLleMcPCXXbla0LLUrRQyq1
1QM0Z2BiACwa4Gi8Jf/2fN853bgMKXkV58Fx2TKJS/fpc/3OBVwsFkmbt4Vb
mnfO11Xp8xtXOu9NV2auMR+r5jov1+ZpVWZ5m+N+Ylerxt38+uezKi3tFhtk
jb1qF2ltrU83i7yut4tmssbi9EGS2dYtkxT/rqtmvzTuU50ked0sTdt0vn14
evr96cPENs4uzfvGlni/aZMdtl03VVcvzcsLc+Gaq6rZ2jJ15rWzvmvc1pVt
cu32eDDDM2XrmtK1i2ckKUl8a8vsJ1tUJcjcO5/U+dL8V1ulc+OxfOOuPH7a
b/nDfyeJ7dpN1SwTYxb4nzF56Zfm6Ym5kJPJJT3x002T+7aqN+NbVbNemvO6
LhzoSE/kmscerl2at6ULty5sc20+2r3cTvMWrHja1a5p87Kam6e2yHHEMrfm
+8enD870qaorW/LsQ5m3LjOXLbjoTXVlzreuyVMrT7mtzYulCWL4D8vdTtJq
m0yP8+4ErNu7ZnSad2CSLYrR9X+OozTN9ovHuDyBEJzf5I0bneSy7WzTTu/8
c5wlDSR98UBvT8zlxtZ5Y0fneYuFJpf/OQ5T4Szjg+SlmGULc6fxPOmurlyz
KirbLuW1wa7wn4We948n5gfXtns/ufqnE/MmTzdVoZeDB5uNVzTPeDq94vGW
aTeuN/yZcgQUO0+qcPBqu+1KHECcFg/E58+fvp6b/6yKbuvM48dz86bbrsDq
B+bo4emDh8dY5d2Lp6f/9v2jpf744PTR4/Dj7x9+fxp/PH30qL/6+Pv449nZ
75ZJslgsjF1BODaFJ3pRNQaOaw8vZBs4HWsKm16TnKmrnJsb2+RV54u9SWGU
LksKu57j6daV6X4ODTCrgRtzs7HerJwrsU5arcv8r3gDl2wJxw2ptF2JN+d4
p4WMt9uqpL+r22orrKsyu7/nDThHT+tPkucgw8B3ghnWZC61mSORvGv4Lh2q
bbL8rwwGrUs3ZG0Bb1p0wuB5krcgBXoCZtu4Zd1Uq8JtDQgS9rsyMx2khA25
Y7OHgzaz67La+RkesK3BKrk3s5J6VczkRWtu8sxVWLPE8R2DQFslG3vj4vre
7DYg31dbt6qyvXGFdwaLbXAByyU726YbEm7N2Z/MtrrJHfnZ1WBlxuv1pmor
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
AAA=

-->

</rfc>

