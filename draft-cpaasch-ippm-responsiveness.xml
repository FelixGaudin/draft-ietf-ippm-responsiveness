<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.6 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-cpaasch-ippm-responsiveness-00" category="exp">

  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>

    <date year="2021" month="September" day="07"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
<spanx style="emph">lag</spanx>, <spanx style="emph">latency</spanx>, or <spanx style="emph">bufferbloat,</spanx> has been recognized
as an unfortunate, but common symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem for tens of thousands of people.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem.
We believe that creating a tool whose measurement matches people’s
every day experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience especially when the network is fully loaded
(“responsiveness under working conditions”.)
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
<spanx style="emph">lag</spanx>, <spanx style="emph">latency</spanx>, or <spanx style="emph">bufferbloat,</spanx> has been recognized
as an unfortunate, but common symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8289"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory -
that is, its effect is not always present.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
make the standard “network quality measures” of
throughput, idle latency, and responsiveness.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” - the undesirable latency
that comes from a router or other network equipment
buffering too much data. (1)
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what <spanx style="emph">is</spanx> a millisecond?”) and
counterintuitive (“100 msec - that sounds good -
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The values range from 50 (poor) to 3,000 (excellent),
with the added advantage that “bigger is better.”
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for cars.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport layer traffic - typical
for people’s use of the network -
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is important to note that queueing only happens behind
a slow “bottleneck” link in the network,
and only occurs when sufficient traffic is present.
The RPM Test must ensure that buffers are actually full
for a sustained period, and only then make repeated latency
measurements in this particular state.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:<vspace />
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
DNS-request, TCP-handshake, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.
People commonly look for a single “score” of their performance.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
Once the network has reached that state,
the algorithm can measure its responsiveness.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>For the purpose of this methodology, typical “working conditions” represent a
state of the network in which the bottleneck node is experiencing ingress and
egress flows similar to those created by humans in the typical
day-to-day pattern.</t>

<t>While a single HTTP transaction might briefly put a network into
working conditions, making reliable measurements
requires maintaining the state over sufficient time.</t>

<t>The algorithm must also detect when the network is in a
persistent working condition, also called “saturation”.</t>

<t>Desired properties of “working condition”:</t>

<t><list style="symbols">
  <t>Should not waste traffic, since the person may be paying for it</t>
  <t>Should finish within a short time to
avoid impacting other people on the same network,
to avoid varying network conditions,
and not try the person’s patience.</t>
</list></t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient to saturate a path.
For example, the 4MB constraints on TCP window size constraints
may not fill the pipe.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it hard to reach saturation.</t>

<t>The goal of the RPM Test is to keep the network as busy as possible
in a sustained and persistent way.
It uses multiple TCP connections and gradually adds more TCP flows
until saturation is reached.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must saturate both directions.</t>

<t>Measuring in parallel achieves more data samples for a given duration.
Given the desired test duration of 20 seconds,
sequential uplink and downlink tests would only yield half the data.
The RPM Test specifies parallel, concurrent measurements.</t>

<t>However, a number caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not saturate both directions at once.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
  <t>Consequently, the test should have an option for sequential testing.</t>
</list></t>

</section>
<section anchor="reaching-saturation" title="Reaching saturation">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” - the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that saturation has been
reached.</t>

<t>Saturation has two criteria:
a) the load bearing connections are utilizing all the
capacity of the bottleneck,
b) the buffers in the bottleneck are completely filled.</t>

<t>The algorithm notes that throughput gradually increases until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls
usually due to receive window limitations.
The only means to further increase throughput is by
adding more TCP connections to the pool of load bearing connections.
If new connections leave the throughput the same,
saturation has been reached and - more importantly -
the working condition is stable.</t>

<t>Filling buffers at the bottleneck depends on the congestion control
deployed on the sender side.
Congestion control algorithms like BBR may reach high throughput
without causing queueing because the bandwidth detection
portion of BBR effectively seeks the bottleneck capacity.</t>

<t>RPM Test clients and servers should use loss-based congestion controls
like Cubic to fill queues reliably.</t>

<t>The RPM Test detects saturation when the observed goodput is not increasing
even as connections are being added,
or it detects packet loss or ECN marks signaling
congestion or a full buffer of the bottleneck link.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions (saturation) of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load bearing connection” for each.</t>

<t>The steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create 4 load bearing connections</t>
  <t>At each 1 second interval:
  <list style="symbols">
      <t>Compute “instantaneous aggregate” goodput which is the number of bytes
transferred within the last second.</t>
      <t>Compute a moving average of the last 4 “instantaneous aggregate goodput” measurements</t>
      <t>If moving average &gt; “previous” moving average + 5%:
      <list style="symbols">
          <t>Network did not yet reach saturation.
If no flows added within the last 4 seconds, add 4 more flows</t>
        </list></t>
      <t>Else, network reached saturation for the current flow count.
      <list style="symbols">
          <t>If new flows added and for 4 seconds the moving average throughput
did not change: network reached stable saturation</t>
          <t>Else, add four more flows</t>
        </list></t>
    </list></t>
</list></t>

<t>Note: It is tempting to envision an initial base RTT
measurement and adjust the intervals as a function of that RTT.
However,
experiments have shown that this makes the saturation detection extremely
unstable in low RTT environments.
In the situation where the “unloaded” RTT is in the
single-digit millisecond range, yet the network’s RTT increases under load
to more than a hundred milliseconds, the intervals become much too low to
accurately drive the algorithm.</t>

<t><spanx style="emph">(I’m not sure what this last caveat re: low RTT means in practice)</spanx></t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Once the network is in a consistent working conditions,
the RPM Test must “probe” the network multiple times
to measure its responsiveness.</t>

<t>Each RPM Test probe measures:</t>

<t><list style="numbers">
  <t>The responsiveness of the different steps to create a new connection,
all during working conditions.  <vspace blankLines='1'/>
To do this, the test measures the time needed to make a DNS request,
establish a TCP connection on port 443,
establish a TLS context using TLS1.3, and
send and receive a one-byte object with a HTTP2 GET request.
It repeats these steps multiple times for accuracy.</t>
  <t>The responsiveness of the network and the client/server networking stacks
for the load bearing connections themselves.  <vspace blankLines='1'/>
To do this, the load bearing connections multiplex an HTTP/2 GET
request for a one-byte object to get the end-to-end latency on the
connections that are using the network at full speed.</t>
</list></t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 5 times for each probe, namely:
DNS handshake, TCP handshake, TLS handshake, HTTP/2 request/response on
separate (idle) connections, HTTP/2 request/response on load bearing connections.
This fine-grained data is useful, but not necessary for creating a useful metric.</t>

<t>To create a single “Responsiveness” (e.g., RPM) number,
this first iteration of the algorithm gives
an equal weight to each of these values.
That is, it sums the five time values for each probe,
and divides by the total number of probes to compute
an average probe duration.
The reciprocal of this, normalized to 60 seconds,
gives the Round-trips Per Minute (RPM).</t>

</section>
<section anchor="statistical-confidence" title="Statistical Confidence">

<t>The number of probes necessary for statistical confidence
is an open question.
One could imagine a computation of the variance and confidence interval
that would drive the number of measurements and balance the accuracy
with the speed of the measurement itself.</t>

<t>It is also an open topic to compare the RPM Test to
other standard measurement tools such as
DSLReports Speed Test (2)
the Waveform Bufferbloat test (3);
the command-line betterspeedtest.sh (4)</t>

</section>
</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement uses standard protocols:
no new protocol is defined.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS 1.3.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
Further, the server endpoint MUST be accessible through a hostname
that can be resolved through DNS.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual body content is irrelevant.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual body content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.</t>
  <t>A configuration URL that returns a JSON object with the information
the client uses to run the test (sample below).
All the fields are required except “test_endpoint”.
Sample JSON:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "small_https_download_url": "https://example.apple.com/api/v1/small",
    "large_https_download_url": "https://example.apple.com/api/v1/large",
    "https_upload_url": "https://example.apple.com/api/v1/upload"
  },
  "test_endpoint": "hostname123.cdnprovider.com"
}
]]></artwork></figure>
  </t>
</list></t>

<t>If the “test_endpoint” field is present, it is an indication that the
Service provider/content distribution network (CDN) is able to “pin” all of
the requests for a particular test run to a specific server.
The client should look up the test_endpoint name and use the resulting
address as the host for all the other URLs.
A CDN should supply a test_endpoint so that measurements use the same
server/follow the same paths to avoid switching servers during a test run.</t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load bearing connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="reference-implementations" title="Reference Implementations">

<t>The RPM Test has been implemented in the following settings:</t>

<t><list style="symbols">
  <t>macOS 15</t>
  <t>iOS</t>
  <t>Python?</t>
  <t>Javascript?</t>
</list></t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>TBD</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t><list style="symbols">
  <t>Dave Taht - Godfather of Bufferbloat research, Creator of CeroWrt,
the testbed for testing fq_codel and solving Bufferbloat</t>
  <t>Rich Brown - Editorial pass over this I-D</t>
</list></t>

</section>
<section anchor="references" title="References">

<t><list style="symbols">
  <t>(1) <eref target="https://www.bufferbloat.net/projects/">Bufferbloat definition:</eref></t>
  <t>(2) <eref target="http://DSLReports.com/speedtest">DSLReports Speed Test:</eref></t>
  <t>(3) <eref target="https://www.waveform.com/tools/bufferbloat">Waveform Bufferbloat Test;</eref></t>
  <t>(4) <eref target="https://github.com/richb-hanover/OpenWrtScripts/blob/master/betterspeedtest.sh">betterspeedtest.sh</eref></t>
</list></t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>




<reference anchor='RFC8289' target='https://www.rfc-editor.org/info/rfc8289'>
<front>
<title>Controlled Delay Active Queue Management</title>
<author fullname='K. Nichols' initials='K.' surname='Nichols'><organization/></author>
<author fullname='V. Jacobson' initials='V.' surname='Jacobson'><organization/></author>
<author fullname='A. McGregor' initials='A.' role='editor' surname='McGregor'><organization/></author>
<author fullname='J. Iyengar' initials='J.' role='editor' surname='Iyengar'><organization/></author>
<date month='January' year='2018'/>
<abstract><t>This document describes CoDel (Controlled Delay) -- a general framework that controls bufferbloat-generated excess delay in modern networking environments.  CoDel consists of an estimator, a setpoint, and a control loop.  It requires no configuration in normal Internet deployments.</t></abstract>
</front>
<seriesInfo name='RFC' value='8289'/>
<seriesInfo name='DOI' value='10.17487/RFC8289'/>
</reference>



<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author fullname='R. Pan' initials='R.' surname='Pan'><organization/></author>
<author fullname='P. Natarajan' initials='P.' surname='Natarajan'><organization/></author>
<author fullname='F. Baker' initials='F.' surname='Baker'><organization/></author>
<author fullname='G. White' initials='G.' surname='White'><organization/></author>
<date month='February' year='2017'/>
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
H4sIAGwOOGEAA9VcbXPjxpH+jl8xR9fVSnskpX27cpSqy2lXu/Ym3l1lJZ8/
5FKuITAiEYEAjAHEZVLOb7/n6Z7BCyX5fFf3IZdKHJEEBj093U8//QIvFouk
zdvCnZnPztdV6fM7VzrvTVdmrjE/VM1tXq7Nm6rM8jbH74ldrRp39+uvz6q0
tFs8IGvsTbtIa2t9ulnkdb1dNJM1FqenSWZbd5ak+Oe6avZnxn2pkySvmzPT
Np1vn5+e/ub0eWIbZ8/MdWNL3N+0yQ6PXTdVV5+Z95fm0jU3VbO1ZerMB2d9
17itK9vk1u1xYYZrytY1pWsXFxQpSXxry+xHW1QlxNw7n9T5mflTW6Vz47F8
4248/tpv+cefk8R27aZqzhJjFvifMXnpz8ybpbmUnclXuuM3myb3bVVvxj9V
zfrMnNd14SBHupTvPJ7h2jPzqXThp0vb3Jof7F5+TvMWqnjT1a5p87Kamze2
yLHFMrfmN69On73Uq6qubKmz78u8dZm5aqFFb6obc751TZ5aucptbV6cmXAM
/275tGVabZPpdj4vobq9a0a7+Qwl2aIYff+PsZWm2T66jaslDsH5Td640U6u
2s427fSXf4y9pEGkRzf0aWmuNrbOGzvazycsNPn6H2MzFfYy3kheilu2cHc6
z+vu5sY1q6Ky7ZncNvgV/rPQ/f5+ab5xbbv3k2//sDQf83RTFfp1QLDZeEVz
wd3pNx53mXbjesefqUYgsfOUChuvttuuxAYEtLghXn/+5sPc/EdVdFtnXr2a
m4/ddgVVPzNHz0+fPT/GKp/fvfn6+de/OQt/nr54cZYki8XC2BUUblOgy7uq
MQCjPZDFNgASawqb3vIRU/ibmzvb5FXni71J4WguS54Wdv10bvB/rSvTPf7E
Wk9XwzbnT83GerNyrsRqabUu87/iPnxlS0Ay9N12JW6em1XX4vS226okktVt
tRWlVJndP/EGOiGG+mXyFsIYoCK2aU3mUps5ispfDe8lVNomy/9KmG9duqHS
CuBk0Ynq5kneQhRYANRo4yPrploVbmsgkCjWlZnpoH88kE9s9oBeM7stq52f
4QLbGqySezMraTHFTG605i7PXIU1S+zfEd7bKtnYOxfX92a3gfi+2rpVle2N
K7wzWGyDL7BcsrNtuqHg1rz8g9lWd7mjRrsausz4fb2p2sqbmwbqgZx5w29K
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
VidbTi82J/fXO07+C3pXT32wSgAA

-->

</rfc>

