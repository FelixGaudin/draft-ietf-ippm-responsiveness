<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-cpaasch-ippm-responsiveness-01" category="exp">

  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="March" day="04"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem.
We believe that creating a tool whose measurement matches people’s
every day experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience especially when the network is under working conditions.
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory -
that is, its effect is not always present.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
make the standard “network quality measures” of
throughput, idle latency, and responsiveness.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” - the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what is a millisecond?”) and
counterintuitive (“100 msec - that sounds good -
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is “the higher the better”. This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for cars.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport layer traffic - typical
for people’s use of the network -
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is important to note that queueing only happens behind
a slow “bottleneck” link in the network,
and only occurs when sufficient traffic is present.
The RPM Test must ensure that buffers are actually full
for a sustained period, and only then make repeated latency
measurements in this particular state.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
DNS-request <xref target="RFC1035"/>, TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
Once the network has reached that state,
the algorithm can measure its responsiveness.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>There are many different ways to define the state of “working conditions” to
measure responsiveness. There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>In this document we aim to generate a realistic traffic pattern by
using standard HTTP transactions but exploring the worst-case scenario by creating
multiple of these transactions and using very large data objects in these HTTP
transactions.</t>

<t>This allows to create a stable state of working conditions during which the
network is used at its nearly full capacity, without generating DoS-like traffic
patterns (e.g., UDP flooding).
When reaching these stable conditions (called “saturation”) the latency on the
network is stable enough to allow to measure the responsiveness during that time.
Thus, the algorithm must detect when the network is reaching this point of saturation
to trigger the latency probes.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient to reach the capacity of a path.
For example, the 4MB constraints on TCP window size constraints
may not fill the pipe.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it hard to reach the path’s capacity.</t>

<t>The goal of the RPM Test is to keep the network in working conditions
in a sustained and persistent way.
It uses multiple TCP connections and gradually adds more TCP flows
until saturation is reached.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not reach the path’s capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-saturation" title="Reaching saturation">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” - the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that the network is used at its full capacity, meaning the path is saturated.
At this point we are creating the worst-case scenario within the limits of the
realistic traffic pattern.</t>

<t>The algorithm notes that throughput gradually increases until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls
usually due to receive window limitations.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
saturation has been reached and - more importantly -
the working condition is stable.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load-generating connection” for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one (1) second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p. If p is less than 0, the number of total bytes of data transferred within the
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The average of the number of total bytes of data
transferred in the instantaneous average aggregate goodput at intervals p - x, for all 0≤x&lt;4.</t>
  <t>moving average stability during the period between intervals b and e: Whether or not the differences between the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1 (for all b≤x&lt;e) is less than 5%.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create four (4) load-generating connections.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached saturation.
      <list style="symbols">
          <t>If no load-generating connections have been added within the last four (4) intervals, add four (4) more load-generating connections.</t>
        </list></t>
      <t>Else, the network has reached saturation with the existing load-generating connections. The current state is a candidate for stable working conditions.
      <list style="symbols">
          <t>If a) there have been load-generating connections added in the past four (4) intervals and b) there has been moving average stability during the period between intervals i-4 and i,
then the network has reached stable saturation and the algorithm terminates.</t>
          <t>Otherwise, add four (4) more load-generating connections.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when saturation is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Note: It is tempting to envision an initial base round-trip time (RTT)
measurement and adjust the intervals as a function of that RTT.
However,
experiments have shown that this makes the saturation detection extremely
unstable in low RTT environments.
In the situation where the “unloaded” RTT is in the
single-digit millisecond range, yet the network’s RTT increases under load
to more than a hundred milliseconds, the intervals become much too low to
accurately drive the algorithm.</t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Once the network is in a consistent working conditions,
the RPM Test must “probe” the network multiple times
to measure its responsiveness.</t>

<t>Each RPM Test probe measures:</t>

<t><list style="numbers">
  <t>The responsiveness of the different steps to create a new connection,
all during working conditions.  <vspace blankLines='1'/>
To do this, the test measures the time needed to make a DNS request,
establish a TCP connection on port 443,
establish a TLS context using TLS1.3 <xref target="RFC8446"/>, and
send and receive a one-byte object with a HTTP/2 GET request.
It repeats these steps multiple times for accuracy.</t>
  <t>The responsiveness of the network and the client/server networking stacks
for the load-generating connections themselves.  <vspace blankLines='1'/>
To do this, the load-generating connections multiplex an HTTP/2 GET
request for a one-byte object to get the end-to-end latency on the
connections that are using the network at full speed.</t>
</list></t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 5 times for each probe, namely:
DNS handshake, TCP handshake, TLS handshake, HTTP/2 request/response on
separate (idle) connections, HTTP/2 request/response on load-generating connections.
This fine-grained data is useful, but not necessary for creating a useful metric.</t>

<t>To create a single “Responsiveness” (e.g., RPM) number,
this first iteration of the algorithm gives
an equal weight to each of these values.
That is, it sums the five time values for each probe,
and divides by the total number of probes to compute
an average probe duration.
The reciprocal of this, normalized to 60 seconds,
gives the Round-trips Per Minute (RPM).</t>

</section>
<section anchor="statistical-confidence" title="Statistical Confidence">

<t>The number of probes necessary for statistical confidence
is an open question.
One could imagine a computation of the variance and confidence interval
that would drive the number of measurements and balance the accuracy
with the speed of the measurement itself.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results" title="Interpreting responsiveness results">

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness" title="Elements influencing responsiveness">

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP “accelerators”), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence" title="Client side influence">

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network’s bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well-designed networking stack would ensure that queue-buildup in the TCP layer
layer is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence" title="Network influence">

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP “accelerators”,…
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network’s use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence" title="Server side influence">

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side. With the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness" title="Root-causing Responsiveness">

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don’t do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement uses standard protocols:
no new protocol is defined.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS 1.3.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
Further, the server endpoint MUST be accessible through a hostname
that can be resolved through DNS.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual body content is irrelevant.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual body content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below).
Sample JSON:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "small_https_download_url": "https://networkquality.example.com/api/v1/small",
    "large_https_download_url": "https://networkquality.example.com/api/v1/large",
    "https_upload_url": "https://networkquality.example.com/api/v1/upload"
  }
}
]]></artwork></figure>
  </t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>TBD</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>We would like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald and Will Hawkins for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference  anchor="RFC0793" target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor="RFC1035" target='https://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference  anchor="RFC8290" target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author initials='T.' surname='Hoeiland-Joergensen' fullname='T. Hoeiland-Joergensen'><organization /></author>
<author initials='P.' surname='McKenney' fullname='P. McKenney'><organization /></author>
<author initials='D.' surname='Taht' fullname='D. Taht'><organization /></author>
<author initials='J.' surname='Gettys' fullname='J. Gettys'><organization /></author>
<author initials='E.' surname='Dumazet' fullname='E. Dumazet'><organization /></author>
<date year='2018' month='January' />
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference  anchor="RFC8033" target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author initials='R.' surname='Pan' fullname='R. Pan'><organization /></author>
<author initials='P.' surname='Natarajan' fullname='P. Natarajan'><organization /></author>
<author initials='F.' surname='Baker' fullname='F. Baker'><organization /></author>
<author initials='G.' surname='White' fullname='G. White'><organization /></author>
<date year='2017' month='February' />
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC8446" target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2018' month='August' />
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
H4sIAPKlImIAA9VcW3PbRpZ+x6/oZWomUi1Jy7acnWgedmTLSTzji2Ip44et
rVQTaJI9AgEEDZjmpDK/fc93TnejQVJKvLMPs1u7WRkEGqfP9TuXxmw2yzrb
leZCvTeuqStnP5rKOKf6qjCt+lC3d7ZaqRd1VdjO0u+ZXixa8/G331/UeaU3
9IKi1ctuljdau3w9s02zmbWjNWZnj7NCd+Yiy+m/q7rdXSjzqcky27QXqmt7
1z05O/v67EmmW6Mv1G2rK3q+7bItvXbV1n1zoV5dq2vTLut2o6vcqDdGu741
G1N12Z3Z0Y0F3VN1pq1MN7sCSVnmOl0VP+qyrojMnXFZYy/Uf3V1PlWOlm/N
0tFfuw3++O8s0323rtuLTKkZ/Z9StnIX6sVcXfPO+JLs+MW6ta6rm3X6U92u
LtRl05SG6MjnfM3RO0x3od5Vxv90rds79UHv+OfcdsSKF31j2s5W9VS90KWl
LVZWq6+fnT0+l7vqvurAsx8q25lC3XTERafqpbrcmNbmmu8yG23LC+XF8CeN
t83zepONt/N+TqzbmTbZzXtiki7L5Pq/xlbadnPvNm7mJATj1rY1yU5uul63
3fiXf4295J6kezf0bq5u1rqxrU72844WGl3+19hMTXu5dyNvSMF0t7Yu2Qdd
6NKrvI1v63pVmik2MtrH46/Ozuitzdp2a6PpIu9nO9rOG5CrbaX+as2WtnSp
1NfnZ+dPP38vGyJtw5T9acUEyZZsxZ6mIw8Gf/C8Xy5Nuyhr3V3w04OroP+Z
yc7/PFffmq7budHVv8zVW5uv61Iue6c8SVdUVxCYXHH0lKKNR182EeYQ4caB
KpJlvdn0Fe2D/TD2hfsvX7yZqr/WZb8x6tmzqXrbbxakPY/VyZOzx09OaRXx
09Z0y1mXw0kv8//4+unCuvu39GGuXhbFbkQ5e+eNdY7ejnjQtXWprtua3Cr9
cXL74vpU3TQmt0tP4uEOwt7Uy2plK0O/UGi51e5OfVO3Oez2/Tcvzoi4C/nz
8dnTZ/7PPzz5+iz8efb0abz67Ovw5/n5VxdZNpvNlF6QTumcAgEtS5KudhQE
dEs+X6tS53dg3ThSTdVH3dq6d+VO5eQTTZGVejWluztT5bspaa5aDJKbqrV2
amFMRevk9aqyf6cn6JKuKG6SBnV9RU9O6ZmO1HKzIY5RuGm6esNirgu9+9Ip
4gQCnZtnL4kMRVIiwWlVmFwXBkTiV4VnEc90W9i/g2GdyddQg5KCWdmzMkwz
2xEppNqkGDq8smnrRWk2ighiVTFVoXqSB70Qb2x3FB/V5K6qt25CN+hO0SrW
qUkFGygn/KBWH21halqzou0bxOCuztb6ownrO7VdE/mu3phFXeyUKZ1RtNia
LtBy2VZ3+RqEa3X+F7WpP1oDfvYNsbLA9WZNSuTUsiX2EJ22xZXKzLPv6q0h
Oqe42mItVdXJ9gk0ONqmbI9+7GqSCe80144ef0W/kRpE4aqfetMbKIReMYIY
GKhOlj/9mNeFKaf08B2J7vrVy1PZJt30kdwJ1vU7Jv6969soP895Ev2gVVMi
tZMtDUp3VHLQkVZjh8mdekuQiHGYN/P45g+GNlla4ouILCcudMLdriZD3K5r
Yv9mgElwdQhDqjE1ue4vXQae7hTpINAYzBNC3VqCAryYsLAyOb1e042RlmlG
agjL6csOegxV3eASJEAEFn3eOaGKebbHslvIiNBjL6wXV2Ec3zV5f/1G3RrX
idIJ+djV2E5Jph1U2CUqzv4HplfQY/laV9ZtWBc8D1jls2Snhl9NVr4TxZXd
siihYgJ8tx745hH4zmkDY8bSzbQsUehIPcj6J+8pAhWzrrWNA2hVb2zVd2ai
Tmh3p8w8t677soCa2iov+4Ie3FK8IxoI7a7WDenCSd/wZop6W53ir8wWFNy9
K8J78pYoghZZoo18bd2ymoQ9/NRTpO92c3GGG1vQ41n2BbyvyIh28//FNaqf
f04i5i+/zLObaLKlvTMqmC3d6KPEL7+AJDJff4miBV1iS2ayBmcKwojRpN1Q
F/gvkmcHyW7J5dF+7YYMBqI2xTx7C7MhXSmZKWJMtBjMxjGJYu0JL0gClyUF
VxKscpZYgchYdezOsDb5Jnh36GdqiXQP+zHEW0vC3RHMEu9M77VkYYbekHfi
DjulS8JIZN0kNqKUHATpNEgliSZaTe8igdKeFgZq3bPKdrzcsoflayKHtAb+
SPAIyFhid14fvW8Ieshel5AF7Ukso+hbDvviseCEeOGw3Ebj3WpBm1xeZJoM
qbD9ZuYgBrzHb3gJd8+SpdczViMyO52vOeM7EjamGQj1xC361nVsDIFM19Ba
ZLuXtNonDXkKfcQS+l/SZFXned+yrynE5fiINwS8abbl+IPAWpFf5F3S07wX
YikZ9baCYfYVKRd5O3Z2JA780naz0iJ+FNa1fSOqu6EQg2C7Jj2E7lW6best
m7yPXz0C2L6vl/A8eGZ60m9cj9RakUYgSgcPCPF5T3XgULOXnyinxb6DtqQu
DiEFzhZOizxW3VJ6zu/LxuuM/WJFhEkgdwT2iN8bQ04xp7dd1XiTq8m/Ykld
0p+ttk5ixX1Rj70g8wwXw04Jp4w9XiCC0Ey9zAaXSlaTeNCp8lFszIYvvqD4
024oVSrr1Y4sFyGAKFzU5KjwWgJnGzVJzHtCaBk/IGA4ytQWwzvEXsm9GRcw
ABEDeEcaXHOsD7Sbn3rbsHLL0ozwaopefb6mGN3p+V7g5PAXCYJnVSvaREvx
gOig2NAEK1zoIm466x1W3tQtuErxj1iODeKiaDfxngyQXV02eS2PTdh1qKaO
MdkciRAZLZ2zPnvXxWodUGcgrukXpc2hsxxhWYriOSipIaOFG6YIoTe2tLpV
J5Ot+Dx6P10qiWDE4v+cSEzkZA/c6noLz0b3P6b8cUN3sVgYg9CLnKL0riAP
ajsKK3VF5kpAifi4ZpilZNV/m5zSrl+R+RpdTNXWpEhIBH+0PHaIEiYZkIc3
77yk2CrE0JLY4ABsKJQKRvxb7zpW0GmyjEAtErWatAmooBhBzBBQoUULxLSE
kbr4SBIkcMtCOvqcRLttPVvWZXGhvrEkCEQV0EN5gIf8smiIOmqCF63tCnqL
PxeU7pp2MlesmcSBYjBy3F9TJlOJrg0CwsqUgcx8BnLDjJdYSHq3MsHmP+qy
h4YbCE8gvea98K/ns8KuLPsYsyJy5NHtmlLtDLoCh6JlDUW8Fh9ZU6z1brBl
AesV8DpvGbLwmx7Tyx74G1sBKLJKSKHUBrUYu0lGsBPAKFrxTokDzCb0QMQr
qfCCTkDCeHuuOSsbW3phlpQlM3TS5aom1LcekrkBMYuYyL+TeVGuPrjBPTt9
ANkSOrwygChI7JE8ExscB7HW6y2QIoFrwn/EbxckkvAAxjUqYLBK7gLO5Z+K
XUXmnVO467wnSR+YZnwPUdsSV8b3eKQht5S6JZlXUuigGwqSSm585qEFHMUH
tFecwuLflLns2PA7lJHYDhsKMk3LYk1FOmJPLFw0lKiJq0KmsfKGLCTaDSnM
FSEWAkclwezeF2p8YcfnSjGMLequI26anFCuWSxYO5ekkMS3GnpiNxTKvUUQ
eQvLIU4Mm+M1U2A49/8SkNuxHt4Z03i3RRciKGtNqT0CZFACZXtxzS/94eo6
sksNqA7yRDHeqT+c8X3n50+nDOM62kKWAFpaE9wFWAoc2tMFdtlkyK5f/I2l
U5Mr6GxrRo9+78M47fHGtJCpOvm+vjklisgZbxjdXoo/581xygoLioigCx0E
0pGdGbZCEWHXIGXKOFX1iTA/6xUshOMItVNavQbK0l8CD4HxzNfcF8L4qQ25
yI6QESVZJlVbekRQE+ti7xh2D+HejnJQSKbVonvie1CmIcRa3TEuShAIBdqm
MazGwvBMUIZkw44yS0789+xsXFcJr2VcRkD7Lt6fE/KEXfNaJA+fFEhRZN2v
TMD20PqOQqntOr8dqJar8zsDt0AuR9su+FnGeQ18FSsmwqVDYYp+gm8W6AsT
66BdlKaPcZuYt9tPmtgvOL0xDH2Ri3cDDyd7SVl06oKnKRMjsWpx4xSRPdjm
YpGwlrRUOA0zI0FQ3qgcmSrBwWjEE8payPGPZSnuhxfgNCOUynpoheXI4TXU
JhkcQnnw7oQD6T/0ZjhDpiskVBzR4GVQyECqlUkYc/QA+TbKAsCcuhC+MQ0d
Xs4OqDUN8E3Eh9nIk/MmQBGkQD6TQIxDMZ0Dxbc1BdlM8EaMSoI8F7Qgh4wk
csWNCCaDHjmPWsmQM3K+nySZ3JOoBxdEV+Uusuwx/dvXBqJTCbwj770hF0kb
ZNX57vb2+tETVSMHvn19w92SW7I6UfeBZl+L6Z1nbKglzdHZUJcg0VEiyCpx
4VE7uRFvUP7dkMLKhxILh9mAXfBiJ0zHU677PIJkIK8SOj5Kwn2p4eT97TVh
0NthS6DS/l28NyRInlC1fWkOnSv55Cx6K7+Ahz2l6cyhe76AudC28yEJW8To
B2MnwWs8SKx4AkEkL4NMdHtHty12Pq5RRr7jmEl8YVxeckbIhadF/clIqSYT
D6qZDDgIiB71vyTk7G2bkZFpueOzz/ljZtIx7kb2qXMmxGehvmBC3ubq7c2s
pZQLj3B5CC2GX36ZgqAZxdPCrbEG/4RGBP/0+mb4KWSPvMQjD7BgGE+FTxyY
fIl0KPYNZULAzmpAmUgBqqEsjOYTrXU+V9FHCQImVSETxz80a4zSfcFmMt3H
opl/KxmgdWuuLnKplqM+gxTKSDWgCkrYHaAUC/XJmc+FBA6+iYnKXuLzw31z
AQxbtBRuNJzdHqIS7DaYH0uMEABBG9LQxmfZsWRVSU2jMxKQyWGJe3S+uDQ5
knvRnqrcjNZBNZJsjuJg4T0Q1tynBXlryG8Rm/erA5AsJUw+XQDU5k7Lut7y
QhAbCm4eapJP5U4OO+g1yjeFFBiOcm2MsQdL5aoeCVx8aah8dIxYjm0+Lfjs
0a9uk/4Jo4m2h5zcFi6tFmfPGk0rzdUrSbthsIWpl0vke1uUTqWGQOwsUTLK
B7PlDVcCFZrecbcnlQKRBraWhGk7wdPyzpjqIL2yG9Ai5QIuad37InI9vp4R
kR+crWA0nQvsRoEZkqrbQA2R4roZekPK5aZCWRtOLHRQsg0ZrY0VQjjI0YKS
kWMx7p9IFoIKjarZ9wakT8+Bmix9OOR2PsveK9wtykS2h6INhUnOchnmpe2K
pJJbGd16MDAUdNkFoIjlOYuVruqbGRdZPWOzKMETM1/Np5wTUDJSoz50KjVl
MSPPSwHdoDsh80T6A2rikLtJD/g0WARXYz1KTcj3q5iKq+Twb+BQ2r7hAsHY
B3l+sD1L2nUsvrODKSgAkus/1uhJ9gOsU1uJYAPxwKZda1crX/YIu0BVEjXl
AUiSkwmlDRKIXh2kFSgDAPgAYRpY3bhxNSQUWUgo4j7cEZzKGxeN3tcVjubw
Z/LKjIEA5VpVLz2c6EgfMjDaG/mrL9Q3qF1C5UszWwa5wEr4XyiSyo8cz5Pi
OLJE1LY45Ruwbi089yVu0U8pwwGWzLkn5av0IszzN8+xbKhIQH/wJvLCBRGD
3kH6cxZey20Lrh/bhpTjskizqSQxUGXt3GyhYUJ+B/t53SCGDLQT11YrhHJJ
pWlHtAtKc3glOBNO/oLDSdYTkn0tl1fC1ROUsapiAFNBLQCoKcE+xTAA2txS
8s1iTuLDeppqIPgyCh3aCgO3wV8krp7p0qAgBE488JoakZQ00mMZIQnIh9qW
SZiOGQf7f0pOSKl8CBs6ttG7jnVFDGBFQpFMRheFk1Ic7oOauYyQnC0Tw4zW
6wPrFxgVgu8p1UenbgDO6Ana2w8NJ2V4w1W9rfCPLLuuOdcceRRfuObkk4XB
nGaPbiwj/xP0OSkJOOWI3zcYW9KbGPPRuvGXCtvK1kihe3QMW2xnyk/78ggU
VSK92quj9NyLJPwEqpje1MGKc372bfo6UPD69mUk6VT5LHuvTpQlOvPq5tpJ
nekoYLi3UngUw0mQNbK/uHn4R4ymcX0NapgHMNzd+1pPXT9IrQhSQ27lZcwA
JfSP4JR83guAC0/NCLyvZhIZhmKHTkqGuf5I4ZfHCIx04IfKfPIqDBSp73S5
nBVElPnEEnHRvTVoGBGktNBtXRnMmBwhPk1ZQko7lOi4aMTL3WuuIGmPuwj5
NcBurClhBRIFYeMslCSbuvOG4Oq+zSV/Asf28e1MXZlFv1olVUYfdmljKHpI
Kwt+xbQX2ZUwKnBp3PyLsYqcJEI7IGwAtVxlpVgMo2BVqhdcEYh1iFhnGauC
1+jI0MTEfOjfGp432GxQSwJfOcE+IgsXvQOlt4Pf8I+gh4CIQikWMmFNWIrL
0DwX4OSF8DfvA3ZI0MI4IR08mq0SF57o4J4fzPRQUHdqguoIJUWhyej6DUdK
LvgI6gz98hZzDHmLAATBp66V3TPaayxRtocPAQn5FygMNLtAJG2J4UbQUd3t
o6b7Jwf4oRD6oMGM74Q/cNSXXYq0fEMsji/dB9ATryXpg1fO7CHwMi5OoYAT
NxPnbI4JSAINCSZLuRgKKb6awMVNsqIZRT1KqZs1D5tdeljGu5umLyLvU/ky
HT1RlhTPnPzTe3tSXIOOk4c1vE2dzBxx7c5LpCamc0yJVKevwlDCLqMQGnu9
+8HWV7MbjIqxM9DFLEkMklspcmOmaDt6vDTaz3Ulbw2112mWhOhkDEiyb6j3
zDfZApItZbblCJAdcgNvcYy11eQwhZ6oyyDpbC9RH1RAiHDHADPjT6/g2WLn
UzxfRJRpE3Vy/e7mlgMr+xG+9O1LuuILQbyKrVBz4Xob54YZplq8CAdKrIv8
krKnvCH6qPAPYKahqi096PulJWNz2KR/Xz4aEh5ezyWyptQ5j2i2ZsXVXcDQ
9iOlDnNM4gp27VsuQ/D0MBMSbsIWpCjBU2+oJ5w8PvXVI5LWBxQbEDjtBZfE
SKspcoamgl82LDZXluMFMY5cMg+vkIqeDQnbQPrCrKzAxUwlNrvYMQlh/8PK
GQ8zQ818aGbovkIICr5PD4SoRqgd/HNXk7XS8n6IfN/nes/EtIQlCJosVcOT
RcAz5BAqdTbd8/u/bV32cWrE9CQwSVXwDHvEQC10nTAOEs/ftMlwc8hSH6KN
iEip8754j7O/5eXk+ckBfJoKXqPIcfb70vzx0+/L7o/nRzYC6xc0EtN941sa
sSA1LC39U3OhPgi6gK0CEYXWr0xyufgkV00/h3OfvOJ9/oP//lidhC0v4pbN
6VhNnv2OTEeKfKY5YrgULBmNvpC60ZIAnTo5P33Yg88UhaWRVfApJxwlaHo/
x/A5NmLnB49/Fi/886+W/4tHufNQSxcMsObZ74YQiF6PHFb4/GVn6vGoEcqR
C6qzM10MXkNgk8M3vIeqfoj7ycgpBeSRXVN8IIQYRRi1eIo7h+u82wflC0Je
ls4cbuCQ8DBoDDDrJ/4eWpv9RPDWUpzkWSxKVAtbiAq2oXx3bKYksklzDbA1
CUMeYpswyzOqOc4oNvbFsK6HGv+UB7Gzc17WTuUojHRL7+Wrr9oO7A2VgCTW
8jwhDiEFbrwDwVsLgX2mpFEy//lnFGwcelKSZSHhop9DawNh0PsNvlGwhg7j
i+AkN4WAgyR2JU0fX/UvzTKOPMTxZ68/vBRlc7XvYo/qMTGBpWwkarqvz86k
46RG9T20wcYvkEx4Fc5CNC2J03Gh7qFpU1qzNMkeKfVn1SxRfGuJc2+5fyvb
68ymkXQDEyiyvDTkGH8o1AKTyTnpl528v709TTvkMolQ8OReiox8Y3vZV/kw
CU08oOeHoQt/FEE67XLAZC1zv9onSOiiBZQYWSyFbPxFuSjIKHdZmDeGtSCt
p/fwrtq64uXn0mgxGM3ogxCNr6lPegabppjwczbk3Jmv98qcXTJ6KbN2U/aL
iVl86eT5JIlC8Qhr8yxk4rLX9BMwRLKor9ongZxrDTL+ijlYqTpnoaOIrKm1
PgeJpibttft6ltlhW9D63JghlS9W3lPtGreYJ1z8n4wWi5VNaIvLkvrWsV5i
9hLxOK7K68W83086HLY8vF0P7UGBCWkjaZyrTbkKFDpHx2b+MBbB1gylmyYF
qVCD4CswgMqYQkCnNHjV1dubkPqwtzSsh+g36/1WgJ8i4+mxg1tf33ChnTTa
p1105fH8qT+5cX7+FXyd4C6ZEpLmu6TLGg5vBqzqG3AS4XTI3ShBC0Sy/33V
+bEXFztYYOFYegJOWdnyZPzhuDSCAgTXLxNTj2RY6nCwKgvzTw+FP/p94wya
RcdF9NCzYSvAqgkXsjDxIIXSfa5x01VMGk2srp6B03stuzGJmLPkk1X7jV76
gYtCrjGxNn/pAVi4NznCfzBHJKfISAzOSFL9LBELA1m2lykfMC53FxjoUMlw
BpQv/efr0a+eJfvTGxgMCTMv6gSj2KcpWx967uGgzeVeJMqzVSsNEk72pIpG
fJJTUIicw5kOnnkZzvT5wY8w5Y2a/dA5lt7b3mj6JLQJcOjMp3bwZExKiwZP
Z9KTOin7V7QGCpE4lUDRcGs4IiNWgvWxLS4j2thfPJWEAqV4jCV7Z7gNP8m9
JzqucxYWZ2xcaHtJ2jmkodJhDUNMlGqApgDrxGMWEY+LfeaWruehnwWi5BRr
KCl8FaHONONtStfr6Ik9ObDn1RfHyLnOSGu/qKsl0Y2Bw2xcLPAUj+Xokkfz
4VHLg3F1QxgqDl1wr8Sfs9lonI6Wc7y0+ZGseBY41P2HNWMAlWkZ6Y4MgXKg
czTnxyhalzpEx+D3spgqsB2Hd4/L/OSklnN/rtC0TWu6w/OaoYMg3BqGBEmd
13XBJ22kOaj5eMGsJIRUDi2jeztF8+w5Dq+avI9exU8EE92hqMUjIbFAl3Z/
TOkZwFADA2NZU2KwmXmH5rGtlqS7gS+yi7mcevcHrwTXJL3k0ZFb3p/U7w6g
azglAbvn0m58WdoG5u82xOHdODLBxyZJe8ZtQz5P+quL+PgUR+J9nBqjcOcH
L52P30FoPO00xiBZ5OPArr3d4lV4Tst459D3DM0ghLuM04mCO1Di9YZRaDLA
l/tvOdSzLLuSUjrog9xnOT0BPkddOqLDqRYm6pHh0DjO1EbtUIN2HFMMYtlb
DkfThMszlOqyfQygTsIpd6K2CUQxxTKxHlp3GGOW44C+YL/eOfYjfNupQNOg
FCdyyIJ7crHll45bsilM0FUu4ftpc5PTqRrrwXGCBf4MJfW670oe7YVUx1GB
RyYsKaiJbYYjp+y+UC+YPzJbG9mZZZfikdlptUfEdcDcA4DFhsEZlc5kOmuQ
lp+ZDZaMTS0w2eNSkY7MRI7viW4OzeEjFj1uVQ6tSfU6xQZcgCnLjEcMZLxg
tuhtWfRNWGH/9AIlk1tD+uBPerEQ+Ze5Go20ZHYER3EYJI6l83GsygdmRP91
3Uz3Xs8eTxqvSqoFGb8GyVjpjX6gzeuxYIy3r15g3Q0Obp6G3CZqhHxvgV8z
6xvpm8v+42n20L0+1pW+5O3PZBSG/NqBvCXMpcPxR/kKUMgbkm2BJXem4Tqg
pviH0Usct+k3Ej/c+IQ5Pf3j23e3Ny/f3v74+t2Hy1vKTu79pApOqF92UVwE
Gv0r75vg2sePASAiOHBMlzMiQ0T2nJsNKunH0dTB9FSaLGIyxIWJZFqcT+OA
iQjvABv88RE8JYPuyVcpcAAP5h/bDjHNMHzKM6sbgnvDQQ2xrrEkZLcseFYs
kdw4+sWzCF5fAwgM2QYPrfnfHq6VPT+itiIHnrHl9pevvejEY47V1VfEstHx
kDAWFZTbSRcN3yGReiDBTZlo9wJOPiLgP/8BPJKxZn3z/ewFvl0wV1eUl1bF
cI4nuTU23FP+iXzH9PI5+ANmKv8dGE6phH8PFl+jyxkyolFV+NWSZ7JmeDcP
yzxEYPzGwdHFxO8s4LdWpV3Zodf7Ns6cxehwm4S7evHRf5CCK9J+EFfiRkix
j+LQeXZNmEivQkUNUT3GY+/1feTy2ChxwXHHkhAnLrYiIfrvp6TOba6em10t
MdaNsWI6jhMOaIvdBewBV3kUawSS8Lkt0uX4oQw5hpFGfT7gdy2HLKbw0maL
6QOCFexooMkyvDizFT6JwlWjY1BhOp/PQ3hOMROG94fjKP4wnbi96TEheOjL
YfAAsTo+7+5PcoY9juW+h8x5IgqHj0cffEi9xiENWcfJgOPDxYRljpjeEEX9
jm42GPP4no3tzfDtIISuYZSJC4p80tWNDUT6kNPUdwcaj/uyUanFfzUjYVV0
6nyeS49cpV8wGFs29oqczIpa72Ov4bTJGA4iBIWKjNSjCRGH897HwFXKag9b
EsQ2Vx9CGBt6sveJKroH8SKmyJIuThzn4nmJAWNJxvC+rjFGJOWpo7VgfzDN
H9SJDaRw+EBiovQjMLGIroGEv06yvxKlBvL10rFla/aDzDGaHEE0x0qJ6dEd
y7BaPt5iN+JVuQtSSFr0U2/zOxwJanym/NGabTKsl+7zvhHOmF3Es/jpt2cs
+cjXsrfA6mF3hzsiHfCD7ZHu8MmPIUuUb4jIdFtwHpbLm+NP6hxRAU7qhzMT
fGrfSVbmWDicnW29AmUDqam1Wc/4Bqf30ePeT20lC4rJ7DjPO5LDz2UuvpND
NdCQHHZBAFqyrQHceQrCybrs19FLeoho9Cx/B+5IFM28ixjAXjGkwsPFsLt5
Np6yt8vPeht3HeGph8EFSRcOH/+VjYYeZjonKp/ByeJncMby1MUwtz8qTj+M
Bi8dtwJDFiVhNgp7r5Jf1NWXHQru0YcbHokcv3/YL1pCXCaIMGIMyjwukqgK
0cZcxFeHLXe8GDYg9ffgO/k0wHjKX3RryKP0PggMTlPOSQcb/m2QbxQ8IhpH
bNl/xhMVDlxzGTB2tHyMubx+NYzEpmUXLvjFg1vxIMxFVvHhmOEMxDBnBkxf
+8jhcdpeEevNDze3hCEaxvp7J4DV4/lTKRP7Z/lmMMnrnbSW0oaRdHgVxv7k
yfQ1yZPiGCQxqrsh9c1Y4JhH1nyi0h8ESAMsHLCMwsZFeepfjEGmK1EXrV2H
Zof/pJCcU6DXho8Syn1Xb28O6VyHWc0wBoFKFocTKdawMBo0wMe9MmZ1wma/
5s137354fcWoKDk3c3hmxmc3L/pFOKWbEiVa60/NOIwL9OV4VtN/SkE+gOEk
C65CegaAhAMSH2tb7Cm5UPzlKKR6BJkSkIjsXP3w/rXvuV6qiaMktpzgWmzx
XKSP+xOr8rjvNaLE36NUKF/sfHIm38p4zDN0wU7wWcw4l4nGCn8nM4gAXqAl
LG3w8R5pORIxnNX83xCj5X18XIq/fYIxXnr6D98+F6qEHFEtroq1Uhzkcw5G
gM8KHyjT8ct80hmIc+MAn6AqnMb7TTtNLJLdFjwNHwaW79el59fDZCx7cG5b
yoczfUrA322itWr/IbGk/yyFjXjW7wAQZf6jLHJ0aqQ8To51X1ZqIlO6vyYO
tBpL4/1GdCUiHKKkXVhpH0RxjMzDF2cK63I+vwXIond4rxwJv5R+zypMhBAt
yp+N7no+fav+fPPubfgS4rOv8SXEpDHOGXn4vjFONw7sl2+K1Tw704VmyomT
7+VxEfB0nt3IP/GOC25N/+Mf/8D/+1nmpSb4QAhGkS/UYz9CNenb0tG//R3K
m9iP665r3I9BqD/SXXTThK9ePHrkNSx8xtJDFXyf+ZFu7KOPjx+JoU7jqmwr
//SqYnHDqrKeSP7zV/MaI6v9koX/gGep4vuh5qPZ8hAy5UBau0s/osKyHmmE
hxSIgmX4sCoc3Lin/Gt4wFaHJ9yOnW47AA4bBjCscMOkwxgYBqtCIpr3/JmM
F36oWYfz8M+vuKl4+fbyvt8uc3yzuDTFys8QfDC+oChnmmsGpnfqPY5LP2+B
JkEPeGMKfFET6VmjXfBZ+OHV7Iq/t8jHZ+Xxl629U5fEdrfVpYyefIC7+U5v
7yAzv0fb+jOofS7fOSO/uOBPqfqzdlg5+x+bFZEJmWEAAA==

-->

</rfc>

