<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-cpaasch-ippm-responsiveness-01" category="exp">

  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>

    <date year="2021" month="December" day="17"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem.
We believe that creating a tool whose measurement matches people’s
every day experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience especially when the network is fully loaded
(“responsiveness under working conditions”.)
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory -
that is, its effect is not always present.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
make the standard “network quality measures” of
throughput, idle latency, and responsiveness.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” - the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what is a millisecond?”) and
counterintuitive (“100 msec - that sounds good -
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is “the higher the better”. This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for cars.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport layer traffic - typical
for people’s use of the network -
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is important to note that queueing only happens behind
a slow “bottleneck” link in the network,
and only occurs when sufficient traffic is present.
The RPM Test must ensure that buffers are actually full
for a sustained period, and only then make repeated latency
measurements in this particular state.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:<vspace />
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
DNS-request <xref target="RFC1035"/>, TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
Once the network has reached that state,
the algorithm can measure its responsiveness.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>For the purpose of this methodology, typical “working conditions” represent a
state of the network in which the bottleneck node is experiencing ingress and
egress flows similar to those created by humans in the typical
day-to-day pattern.</t>

<t>While a single HTTP transaction might briefly put a network into
working conditions, making reliable measurements
requires maintaining the state over sufficient time.</t>

<t>The algorithm must also detect when the network is in a
persistent working condition, also called “saturation”.</t>

<t>Desired properties of “working condition”:</t>

<t><list style="symbols">
  <t>Should not waste traffic, because the person may be paying for it.</t>
  <t>Should finish within a short time to
avoid impacting other people on the same network,
to avoid varying network conditions, and not try the person’s patience.</t>
</list></t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient to saturate a path.
For example, the 4MB constraints on TCP window size constraints
may not fill the pipe.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it hard to reach saturation.</t>

<t>The goal of the RPM Test is to keep the network as busy as possible
in a sustained and persistent way.
It uses multiple TCP connections and gradually adds more TCP flows
until saturation is reached.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must saturate both directions.</t>

<t>Measuring in parallel achieves more data samples for a given duration.
Given the desired test duration of 20 seconds,
sequential uplink and downlink tests would only yield half the data.
The RPM Test specifies parallel, concurrent measurements.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not saturate both directions at once.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
  <t>Consequently, the test should have an option for sequential testing.</t>
</list></t>

</section>
<section anchor="reaching-saturation" title="Reaching saturation">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” - the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that saturation has been
reached.</t>

<t>Saturation has two criteria:
a) the load bearing connections are utilizing all the
capacity of the bottleneck,
b) the buffers in the bottleneck are completely filled.</t>

<t>The algorithm notes that throughput gradually increases until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls
usually due to receive window limitations.
The only means to further increase throughput is by
adding more TCP connections to the pool of load bearing connections.
If new connections leave the throughput the same,
saturation has been reached and - more importantly -
the working condition is stable.</t>

<t>Filling buffers at the bottleneck depends on the congestion control
deployed on the sender side.
Congestion control algorithms like BBR may reach high throughput
without causing queueing because the bandwidth detection
portion of BBR effectively seeks the bottleneck capacity.</t>

<t>RPM Test clients and servers should use loss-based congestion controls
like Cubic to fill queues reliably.</t>

<t>The RPM Test detects saturation when the observed goodput is not increasing
even as connections are being added,
or it detects packet loss or ECN marks signaling
congestion or a full buffer of the bottleneck link.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions (saturation) of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load bearing connection” for each.</t>

<t>The steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create 4 load bearing connections</t>
  <t>At each 1 second interval:
  <list style="symbols">
      <t>Compute “instantaneous aggregate” goodput which is the number of bytes
transferred within the last second.</t>
      <t>Compute a moving average of the last 4 “instantaneous aggregate goodput” measurements</t>
      <t>If moving average &gt; “previous” moving average + 5%:
      <list style="symbols">
          <t>Network did not yet reach saturation.
If no flows added within the last 4 seconds, add 4 more flows</t>
        </list></t>
      <t>Else, network reached saturation for the current flow count.
      <list style="symbols">
          <t>If new flows added and for 4 seconds the moving average throughput
did not change: network reached stable saturation</t>
          <t>Else, add four more flows</t>
        </list></t>
    </list></t>
</list></t>

<t>Note: It is tempting to envision an initial base round-trip time (RTT)
measurement and adjust the intervals as a function of that RTT.
However,
experiments have shown that this makes the saturation detection extremely
unstable in low RTT environments.
In the situation where the “unloaded” RTT is in the
single-digit millisecond range, yet the network’s RTT increases under load
to more than a hundred milliseconds, the intervals become much too low to
accurately drive the algorithm.</t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Once the network is in a consistent working conditions,
the RPM Test must “probe” the network multiple times
to measure its responsiveness.</t>

<t>Each RPM Test probe measures:</t>

<t><list style="numbers">
  <t>The responsiveness of the different steps to create a new connection,
all during working conditions.  <vspace blankLines='1'/>
To do this, the test measures the time needed to make a DNS request,
establish a TCP connection on port 443,
establish a TLS context using TLS1.3 <xref target="RFC8446"/>, and
send and receive a one-byte object with a HTTP/2 GET request.
It repeats these steps multiple times for accuracy.</t>
  <t>The responsiveness of the network and the client/server networking stacks
for the load bearing connections themselves.  <vspace blankLines='1'/>
To do this, the load bearing connections multiplex an HTTP/2 GET
request for a one-byte object to get the end-to-end latency on the
connections that are using the network at full speed.</t>
</list></t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 5 times for each probe, namely:
DNS handshake, TCP handshake, TLS handshake, HTTP/2 request/response on
separate (idle) connections, HTTP/2 request/response on load bearing connections.
This fine-grained data is useful, but not necessary for creating a useful metric.</t>

<t>To create a single “Responsiveness” (e.g., RPM) number,
this first iteration of the algorithm gives
an equal weight to each of these values.
That is, it sums the five time values for each probe,
and divides by the total number of probes to compute
an average probe duration.
The reciprocal of this, normalized to 60 seconds,
gives the Round-trips Per Minute (RPM).</t>

</section>
<section anchor="statistical-confidence" title="Statistical Confidence">

<t>The number of probes necessary for statistical confidence
is an open question.
One could imagine a computation of the variance and confidence interval
that would drive the number of measurements and balance the accuracy
with the speed of the measurement itself.</t>

</section>
</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement uses standard protocols:
no new protocol is defined.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS 1.3.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
Further, the server endpoint MUST be accessible through a hostname
that can be resolved through DNS.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual body content is irrelevant.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual body content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below).
Sample JSON:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "small_https_download_url": "https://networkquality.example.com/api/v1/small",
    "large_https_download_url": "https://networkquality.example.com/api/v1/large",
    "https_upload_url": "https://networkquality.example.com/api/v1/upload"
  }
}
]]></artwork></figure>
  </t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load bearing connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>TBD</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>We would like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald for his constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>




<reference  anchor="RFC0793" target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor="RFC1035" target='https://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference  anchor="RFC8290" target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author initials='T.' surname='Hoeiland-Joergensen' fullname='T. Hoeiland-Joergensen'><organization /></author>
<author initials='P.' surname='McKenney' fullname='P. McKenney'><organization /></author>
<author initials='D.' surname='Taht' fullname='D. Taht'><organization /></author>
<author initials='J.' surname='Gettys' fullname='J. Gettys'><organization /></author>
<author initials='E.' surname='Dumazet' fullname='E. Dumazet'><organization /></author>
<date year='2018' month='January' />
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference  anchor="RFC8033" target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author initials='R.' surname='Pan' fullname='R. Pan'><organization /></author>
<author initials='P.' surname='Natarajan' fullname='P. Natarajan'><organization /></author>
<author initials='F.' surname='Baker' fullname='F. Baker'><organization /></author>
<author initials='G.' surname='White' fullname='G. White'><organization /></author>
<date year='2017' month='February' />
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC8446" target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2018' month='August' />
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
H4sIALoSvWEAA9VbbXPcyHH+jl8x2auUyMouRUmU4+OHJJQo3cnWCy1SuQ+p
1NUsMNyFiQVwGIDU2iX/9jxP9wwwuyQvl0o+OC5bXuJlpme6++mnuweLxSLr
y75yp+az821T+/LW1c57M9SF68xPTXdT1ivzuqmLsi9xP7PLZeduf/vzRZPX
doMJis5e94u8tdbn60XZtptFtzPG4vhZVtjenWY5/l013fbUuK9tlpVtd2r6
bvD98+Pj74+fZ7Zz9tRcdbbG+12f3WHaVdcM7al5d2EuXHfddBtb5858cNYP
ndu4us9u3BYPFnim7l1Xu35xTpGyzPe2Ln62VVNDzK3zWVuemv/om3xuPIbv
3LXHr+2GP/4zy+zQr5vuNDNmgf8ZU9b+1Lw+MheyMrmkK3697krfN+06vdV0
q1Nz1raVgxz5kVzzmMP1p+ZT7cKtC9vdmJ/sVm7nZY+teD20ruvLupmb17Yq
scS6tOb7l8fPTvSpZqh77tmXuuxdYS577KI3zbU527iuzK085Ta2rE5NUMO/
Wc52lDebbHc5n4+wdVvXJav5jE2yVZVc//tYStdtHl3G5RGU4Py67Fyykst+
sF2/e+fvYy15EOnRBX06Mpdr25adTdbzCQPtXP77WEyDtaQLKWtxyx7uTud5
NVxfu25ZNbY/ldcmv8J/FrrePxyZH1zfb/3O1T8emY9lvm4qvRwQbJaOaM65
Or3i8Zbp1250/JnuCCR2nlJh4c1mM9RYgIAWF8Tnz15/mJt/b6ph48zLl3Pz
cdgssdXPzMHz42fPDzHK57evj//5+xen+vPZ8YuX4efvn39/HH8ev3gxXn35
ffx5cvK70yxbLBbGLqEcmwOJ3jadAXBtgUK2A+hYU9n8huLsQuXc3NqubAZf
bU0Op3RFVtnVHE/3rs63c1iAWU67MTdr683SuRrj5M2qLv+CN3DJ1gBuaKUf
arw5xzs9dLzZNDXxru2bjWxdU9jtE2+wc0Raf5S9gRgG2InNsKZwuS0cheRd
w3cJqLYryr8wGPQuX3NrK6BpNcgGz7OyhyiwE2y2jVO2XbOs3MZAINl+Vxdm
gJYwIWfstgBoM7upmzs/wwO2Nxil9GZW066qmbxozW1ZuAZj1li+YxDom2xt
b10c35u7NcT3zcYtm2JrXOWdwWBrXMBw2Z3t8zUFt+bkj2bT3JaO+zm02MqC
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
3NBI5zDZfwHGt23lhEYAAA==

-->

</rfc>

