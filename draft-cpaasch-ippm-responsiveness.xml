<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-cpaasch-ippm-responsiveness-01" category="exp">

  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>

    <date year="2021" month="December" day="20"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem.
We believe that creating a tool whose measurement matches people’s
every day experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience especially when the network is fully loaded
(“responsiveness under working conditions”.)
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory -
that is, its effect is not always present.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
make the standard “network quality measures” of
throughput, idle latency, and responsiveness.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” - the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what is a millisecond?”) and
counterintuitive (“100 msec - that sounds good -
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is “the higher the better”. This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for cars.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport layer traffic - typical
for people’s use of the network -
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is important to note that queueing only happens behind
a slow “bottleneck” link in the network,
and only occurs when sufficient traffic is present.
The RPM Test must ensure that buffers are actually full
for a sustained period, and only then make repeated latency
measurements in this particular state.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
DNS-request <xref target="RFC1035"/>, TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
Once the network has reached that state,
the algorithm can measure its responsiveness.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>For the purpose of this methodology, typical “working conditions” represent a
state of the network in which the bottleneck node is experiencing ingress and
egress flows similar to those created by humans in the typical
day-to-day pattern.</t>

<t>While a single HTTP transaction might briefly put a network into
working conditions, making reliable measurements
requires maintaining the state over sufficient time.</t>

<t>The algorithm must also detect when the network is in a
persistent working condition, also called “saturation”.</t>

<t>Desired properties of “working condition”:</t>

<t><list style="symbols">
  <t>Should not waste traffic, because the person may be paying for it.</t>
  <t>Should finish within a short time to
avoid impacting other people on the same network,
to avoid varying network conditions, and not try the person’s patience.</t>
</list></t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient to saturate a path.
For example, the 4MB constraints on TCP window size constraints
may not fill the pipe.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it hard to reach saturation.</t>

<t>The goal of the RPM Test is to keep the network as busy as possible
in a sustained and persistent way.
It uses multiple TCP connections and gradually adds more TCP flows
until saturation is reached.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must saturate both directions.</t>

<t>Measuring in parallel achieves more data samples for a given duration.
Given the desired test duration of 20 seconds,
sequential uplink and downlink tests would only yield half the data.
The RPM Test specifies parallel, concurrent measurements.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not saturate both directions at once.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
  <t>Consequently, the test should have an option for sequential testing.</t>
</list></t>

</section>
<section anchor="reaching-saturation" title="Reaching saturation">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” - the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that saturation has been
reached.</t>

<t>Saturation has two criteria:
a) the load bearing connections are utilizing all the
capacity of the bottleneck,
b) the buffers in the bottleneck are completely filled.</t>

<t>The algorithm notes that throughput gradually increases until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls
usually due to receive window limitations.
The only means to further increase throughput is by
adding more TCP connections to the pool of load bearing connections.
If new connections leave the throughput the same,
saturation has been reached and - more importantly -
the working condition is stable.</t>

<t>Filling buffers at the bottleneck depends on the congestion control
deployed on the sender side.
Congestion control algorithms like BBR may reach high throughput
without causing queueing because the bandwidth detection
portion of BBR effectively seeks the bottleneck capacity.</t>

<t>RPM Test clients and servers should use loss-based congestion controls
like Cubic to fill queues reliably.</t>

<t>The RPM Test detects saturation when the observed goodput is not increasing
even as connections are being added,
or it detects packet loss or ECN marks signaling
congestion or a full buffer of the bottleneck link.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions (saturation) of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load bearing connection” for each.</t>

<t>The steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create 4 load bearing connections</t>
  <t>At each 1 second interval:
  <list style="symbols">
      <t>Compute “instantaneous aggregate” goodput which is the number of bytes
transferred within the last second.</t>
      <t>Compute a moving average of the last 4 “instantaneous aggregate goodput” measurements</t>
      <t>If moving average &gt; “previous” moving average + 5%:
      <list style="symbols">
          <t>Network did not yet reach saturation.
If no flows added within the last 4 seconds, add 4 more flows</t>
        </list></t>
      <t>Else, network reached saturation for the current flow count.
      <list style="symbols">
          <t>If new flows added and for 4 seconds the moving average throughput
did not change: network reached stable saturation</t>
          <t>Else, add four more flows</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when saturation is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Note: It is tempting to envision an initial base round-trip time (RTT)
measurement and adjust the intervals as a function of that RTT.
However,
experiments have shown that this makes the saturation detection extremely
unstable in low RTT environments.
In the situation where the “unloaded” RTT is in the
single-digit millisecond range, yet the network’s RTT increases under load
to more than a hundred milliseconds, the intervals become much too low to
accurately drive the algorithm.</t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Once the network is in a consistent working conditions,
the RPM Test must “probe” the network multiple times
to measure its responsiveness.</t>

<t>Each RPM Test probe measures:</t>

<t><list style="numbers">
  <t>The responsiveness of the different steps to create a new connection,
all during working conditions.  <vspace blankLines='1'/>
To do this, the test measures the time needed to make a DNS request,
establish a TCP connection on port 443,
establish a TLS context using TLS1.3 <xref target="RFC8446"/>, and
send and receive a one-byte object with a HTTP/2 GET request.
It repeats these steps multiple times for accuracy.</t>
  <t>The responsiveness of the network and the client/server networking stacks
for the load bearing connections themselves.  <vspace blankLines='1'/>
To do this, the load bearing connections multiplex an HTTP/2 GET
request for a one-byte object to get the end-to-end latency on the
connections that are using the network at full speed.</t>
</list></t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 5 times for each probe, namely:
DNS handshake, TCP handshake, TLS handshake, HTTP/2 request/response on
separate (idle) connections, HTTP/2 request/response on load bearing connections.
This fine-grained data is useful, but not necessary for creating a useful metric.</t>

<t>To create a single “Responsiveness” (e.g., RPM) number,
this first iteration of the algorithm gives
an equal weight to each of these values.
That is, it sums the five time values for each probe,
and divides by the total number of probes to compute
an average probe duration.
The reciprocal of this, normalized to 60 seconds,
gives the Round-trips Per Minute (RPM).</t>

</section>
<section anchor="statistical-confidence" title="Statistical Confidence">

<t>The number of probes necessary for statistical confidence
is an open question.
One could imagine a computation of the variance and confidence interval
that would drive the number of measurements and balance the accuracy
with the speed of the measurement itself.</t>

</section>
</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement uses standard protocols:
no new protocol is defined.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS 1.3.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
Further, the server endpoint MUST be accessible through a hostname
that can be resolved through DNS.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual body content is irrelevant.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual body content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below).
Sample JSON:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "small_https_download_url": "https://networkquality.example.com/api/v1/small",
    "large_https_download_url": "https://networkquality.example.com/api/v1/large",
    "https_upload_url": "https://networkquality.example.com/api/v1/upload"
  }
}
]]></artwork></figure>
  </t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load bearing connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>TBD</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>We would like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald and Will Hawkins for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>




<reference  anchor="RFC0793" target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor="RFC1035" target='https://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference  anchor="RFC8290" target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author initials='T.' surname='Hoeiland-Joergensen' fullname='T. Hoeiland-Joergensen'><organization /></author>
<author initials='P.' surname='McKenney' fullname='P. McKenney'><organization /></author>
<author initials='D.' surname='Taht' fullname='D. Taht'><organization /></author>
<author initials='J.' surname='Gettys' fullname='J. Gettys'><organization /></author>
<author initials='E.' surname='Dumazet' fullname='E. Dumazet'><organization /></author>
<date year='2018' month='January' />
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference  anchor="RFC8033" target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author initials='R.' surname='Pan' fullname='R. Pan'><organization /></author>
<author initials='P.' surname='Natarajan' fullname='P. Natarajan'><organization /></author>
<author initials='F.' surname='Baker' fullname='F. Baker'><organization /></author>
<author initials='G.' surname='White' fullname='G. White'><organization /></author>
<date year='2017' month='February' />
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC8446" target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2018' month='August' />
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
H4sIACsLwWEAA9VcXXPcyHV9x6/ozFZqycoMRUmU4+VDEkqUdmXrgxal6CGV
2uoBmjMwMQAWDZAab8m/3efc2w30DEllXcmD47LXQ3x0374f5557u7GLxSLr
y75yp+aD821T+/LG1c57M9SF68znprsu65V50dRF2Ze4n9nlsnM3v/35oslr
u8EERWev+kXeWuvz9aJs282i2xljcfw4K2zvTrMc/1w13fbUuC9tlpVtd2r6
bvD9k+PjH46fZLZz9tR87GyN97s+u8W0q64Z2lPz+sJcuO6q6Ta2zp1566wf
OrdxdZ9duy0eLPBM3buudv3inCJlme9tXfxsq6aGmFvns7Y8Nf/VN/nceAzf
uSuPX9sNf/x3ltmhXzfdaWbMAv8zpqz9qXlxZC5kZXJJV/xi3ZW+b9p1eqvp
VqfmrG0rBznyI7nmMYfrT8372oVbF7a7Np/tVm7nZQ9VvBha1/Vl3czNC1uV
WGJdWvPDs+PHJ/pUM9Q9dfapLntXmMseWvSmuTJnG9eVuZWn3MaW1akJZvgP
y9mO8maT7S7nwxFUt3VdspoPUJKtquT6P8ZSum7z4DIuj2AE59dl55KVXPaD
7frdO/8Ya8mDSA8u6P2RuVzbtuxssp73GGjn8j/GYhqsJV1IWUtY9gh3Bs/z
4erKdcuqsf2pvDbFFf6z0PX+4cj86Pp+63eu/vHIvCvzdVPp5YBgs3REc87V
6RWPt0y/dmPgz1QjkNh5SoWFN5vNUGMBAlpcEJ8/e/F2bv6zqYaNM8+ezc27
YbOEqh+bgyfHj58cYpQPr14c/+sPT0/15+Pjp8/Cz98/+eE4/jx++nS8+uyH
+PPk5HenWbZYLIxdwjg2BxK9ajoD4NoChWwH0LGmsvk1xdmFyrm5sV3ZDL7a
mhxB6Yqssqs5nu5dnW/n8ACznLQxN2vrzdK5GuPkzaou/4I3cMnWAG5YpR9q
vDnHOz1svNk0NfGu7ZuNqK4p7PZ7b6A5Iq0/yl5CDAPshDKsKVxuC0chedfw
XQKq7YryL0wGvcvXVG0FNK0GUfA8K3uIAj+Bsm2csu2aZeU2BgKJ+l1dmAFW
woScsdsCoM3sum5u/QwP2N5glNKbWU2/qmbyojU3ZeEajFlj+Y5JoG+ytb1x
cXxvbtcQ3zcbt2yKrXGVdwaDrXEBw2W3ts/XFNyakz+aTXNTOupzaKHKgtfb
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
Djr20tr41qkwjFm5ZI3doIauCKcdIv2d7LPo8nq3aXs9CmVcrcNr47wUyswk
k5xw0WbVwYePHw/TnSzdMSzkhI0oKsR82IC6Gup8OrEIHeD9aXM0HCnWHTE9
KL7W83liqVJP8UX0G1U8JlyeJaUY1TaL5wJJKunKmEdW1TV1KOReB6pQhlMD
4UwWr82GWg8rz+S9MlLTLDTF9DxMckRKz8TMJXyTpsr3Xt9P+CdpCceWM0uN
bjCS1q9xiwCWDBp2zyYNajmmx9R4Xk1bc1ns/JNwdmVgcCNkaxv8ob2F7G77
PnRVpd/2UFc1tAp2t4JmPDooB22mwca2EL3FZ8kR8vt6/tlLIt84qow3FlFh
R3J9p50R4nracNPclZ7U3GW684zFSTh6eu/ZHG5fSjTT6ZLacizo+nD6BCM7
ImE8gWbN+bvLmNLnHMeJH7LZa/f7peG0h5zyuPPom0thcfDoQCdw5fHR03DC
+uTkd8Q67hjIZ0J1ETbJtNKwBLwFEyQ4m2xSSk/CRk4C4hGFFHh/3YftaVmZ
j+l/13ravhFny5NtyvutMbYVQwdNaewjZbB3D0BkMf88WF3i5sa76sY9YJ8H
X4yL+EIwm9afxT1JbUrt6wsGXYVg5gm6vllQx7FbEY5+7MrHk1DybUTsCo86
6JWw+taNLc2zQCvis29TTrHH9/Q7EBjAO6WJzxKDCFmQSJnLt3bV9pRbribZ
PqXbpX++2bkbVLK/v8qt27grbQ54WPIwVeu33vtG1SkNKx5UWKw6bSpL86P0
YbtVP1JgwpyOXMuW9PRJTtiXjYcw2eecTmTrvsTeydFZbK3ym5BAIAlgIkrH
ljgQNjlIn+qezUo2c3hoGEnw1kkiZoqk3vVxH09Qcn3jRwNs8ihQXAkoEy3C
Qcs9u0mvqCh5BN7H/YG+6THdRHblSR/PGIDGUqZIsRQop46qhmVe4noedwAo
lH6EJsfVMdDvkqaqLFP3Ce79oEa/pwm+y08qeYCdY6OiuoLcPA8k096ReNeO
Pnk1n14tvbbqQJ3Em2QV/Aw0HIPf2BWcRT/Dw+J3bCVH9ZjE5IuJccwxb+pm
tjaEp/w4yblzDIdjLG1lY1KMcJeFT4acBnGce7cBCni6kp38MYNdKtydXbye
quz0Hdk6GY/SjV9enWag+8xZ4y4Rz6jKAR/ix/MmyKKgOmJsANe3ny4/wvla
yS17J3MMUoj6R3hXHuZ539Cy1VSSJghldIblq76ZTpO8qQAgniX95hgbmew3
87sjKycdwq7JPBUZk0pfbRpUtki0j6z1AzlS43tCXDjqr5s6mDZ+TKjPAfzu
yrmOna3Y6eaGHkl04TTN0hgtCe9ubhRVJ2oOY17+9P7Tm/O/rwFzVyi+bmP7
w7M8GKrdBkQ44qgHU726NBsasQM17fvqIb1xP1Ik/n6nGoiFfSJAYrIT8+nD
m8CxzszMAyeqGa+NwH6avh5OkujrgVswtgd2fvRL2yfHeob1sRTqU3O32IZ+
hja/5fvWaAJyT9SfleOheqUYEEZaIf83wlidTzaU5Uwym554+/c/PlepVBx1
rWW5WslGj5wh3grXE2LAD4fs+MWcQoJPaL5Emzbof+NKk4iUI7YETzmko9+V
pefKYodHG3IkK/rBq7xX6vcUGKsJfcmEb+rX0F3c7LjDfLNwWFo3l/3+xtdT
GKNGbSTdpv/JHCQYcuiEuDFCiRoHknTLsu+YFEZz7IRHaHAWpc9lh3stJyk4
rx7VOlOgX8UKELKYcGYJVaF8sP2Hy/fv4heKz37gF4oJEda6KnzrzxOxk/r1
W59GauWR9x/oDiY/DWtukQYv9U/OcSps9K9//Sv/71f9dwDM2KWVcyPm8Txc
GrrK4+/whAkh9vO671v/czTqz3gKD83k6umjR8HD4ueloUHAf1fBI9uWj24e
P9JAnY+jSqz8r0fViJtG1fHU8n//aMFjdLSvWfwHdZY6/tKtyrCR+Y2ehu7e
d+OxGj4utt7xiMA0mQWr+EE0AW6XTH6zbijru2cB7jsHQCS4dYi98HWQWCR4
21TWhMJhL6TApRwIBhMSdzORjVR8lgDPz+UL4rN3Zw/dO8v5LxqoXLEKZcNn
F3iOZB1pVdn62nxg+/R5x04K5aFiXMHPXNnWaa2PgMUbrxfn8hGknJrS1192
5bU5g879ra20zvxMrPnJ3l7TYGGNZReO6Ay5fnwEUFzK983hVAJHzv4GIvbw
j89HAAA=

-->

</rfc>

