<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-cpaasch-ippm-responsiveness-01" category="exp">

  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="O." surname="Shapira" fullname="Omer Shapira">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>oesh@apple.com</email>
      </address>
    </author>
    <author initials="M." surname="Mathis" fullname="Matt Mathis">
      <organization>Google, Inc</organization>
      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>
          <city>Mountain View, CA  94043</city>
          <country>United States of America</country>
        </postal>
        <email>mattmathis@google.com</email>
      </address>
    </author>

    <date year="2022" month="March" day="04"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone “knows” that it is “normal” for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions (fq_codel, cake, PIE)
have solved the problem.</t>

<t>Our networks remain unresponsive, not from a lack of technical solutions,
but rather a lack of awareness of the problem.
We believe that creating a tool whose measurement matches people’s
every day experience will create the necessary awareness,
and result in a demand for products that solve the problem.</t>

<t>This document specifies the “RPM Test” for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience especially when the network is fully loaded
(“responsiveness under working conditions”.)
The measurement is expressed as “Round-trips Per Minute” (RPM)
and should be included with throughput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common symptom in today’s networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/> or PIE <xref target="RFC8033"/> have been standardized
and are to some extent widely implemented.
Nevertheless, people still suffer from bufferbloat.</t>

<t>Although significant, the impact on user experience can be transitory -
that is, its effect is not always present.
Whenever a network is actively being used at its full capacity,
buffers can fill up and create latency for traffic.
The duration of those full buffers may be brief:
a medium-sized file transfer, like an email attachment
or uploading photos,
can create bursts of latency spikes.
An example of this is lag occurring during a videoconference,
where a connection is briefly shown as unstable.</t>

<t>These short-lived disruptions make it hard to narrow down the cause.
We believe that it is necessary to create a standardized way to
measure and express responsiveness.</t>

<t>Existing network measurement tools could incorporate a
responsiveness measurement into their set of metrics.
Doing so would also raise the awareness of the problem and
make the standard “network quality measures” of
throughput, idle latency, and responsiveness.</t>

<section anchor="terminology" title="Terminology">

<t>A word about the term “bufferbloat” - the undesirable latency
that comes from a router or other network equipment
buffering too much data.
This document uses the term as a general description of bad latency,
using more precise wording where warranted.</t>

<t>“Latency” is a poor measure of responsiveness,
since it can be hard for the general public to understand.
The units are unfamiliar (“what is a millisecond?”) and
counterintuitive (“100 msec - that sounds good -
it’s only a tenth of a second!”).</t>

<t>Instead, we create the term “Responsiveness under working conditions”
to make it clear that we are measuring all, not just idle, conditions,
and use “round-trips per minute” as the metric.
The advantage of round-trips per minute are two-fold: First, it allows for a metric
that is “the higher the better”. This kind of metric is often more intuitive for end-users.
Second, the range of the values tends to be around the 4-digit integer range which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the measurement to “RPM”, a wink to the
“revolutions per minute” that we use for cars.</t>

<t>This document defines an algorithm for the “RPM Test”
that explicitly measures responsiveness under working conditions.</t>

</section>
</section>
<section anchor="design-constraints" title="Design Constraints">

<t>There are many challenges around measurements on the Internet.
They include the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
and the difficulty of attaining appropriate measurement conditions.</t>

<t>Internet paths are changing all the time.
Daily fluctuations in the demand make the bottlenecks ebb and flow.
To minimize the variability of routing changes,
it’s best to keep the test duration relatively short.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths on the Internet and
be subject to entirely different Quality of Service (QoS) treatment.
A good test will use standard transport layer traffic - typical
for people’s use of the network -
that is subject to the transport’s congestion control that might
reduce the traffic’s rate and thus its buffering in the network.</t>

<t>Traditionally, one thinks of bufferbloat happening on the
routers and switches of the Internet.
However, the networking stacks of the clients and servers can
have huge buffers.
Data sitting in TCP sockets or waiting for the application
to send or read causes artificial latency, and affects user experience
the same way as “traditional” bufferbloat.</t>

<t>Finally, it is important to note that queueing only happens behind
a slow “bottleneck” link in the network,
and only occurs when sufficient traffic is present.
The RPM Test must ensure that buffers are actually full
for a sustained period, and only then make repeated latency
measurements in this particular state.</t>

</section>
<section anchor="goals" title="Goals">

<t>The algorithm described here defines an RPM Test that serves as a good
proxy for user experience. This means:</t>

<t><list style="numbers">
  <t>Today’s Internet traffic primarily uses HTTP/2 over TLS.
Thus, the algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3)
and/or are already being used widely (RTP).
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>The Internet is marked by the deployment of countless middleboxes like
transparent TCP proxies or traffic prioritization for certain types of traffic.
The RPM Test must take into account their effect on
DNS-request <xref target="RFC1035"/>, TCP-handshake <xref target="RFC0793"/>, TLS-handshake, and request/response.</t>
  <t>The test result should be expressed in an intuitive, nontechnical form.</t>
  <t>Finally, to be useful to a wide audience, the measurement
should finish within a short time frame.
Our target is 20 seconds.</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions" title="Measuring Responsiveness Under Working Conditions">

<t>To make an accurate measurement,
the algorithm must reliably put the network in a state
that represents those “working conditions”.
Once the network has reached that state,
the algorithm can measure its responsiveness.
The following explains how
the former and the latter are achieved.</t>

<section anchor="working-conditions" title="Working Conditions">

<t>For the purpose of this methodology, typical “working conditions” represent a
state of the network in which the bottleneck node is experiencing ingress and
egress flows similar to those created by humans in the typical
day-to-day pattern.</t>

<t>While a single HTTP transaction might briefly put a network into
working conditions, making reliable measurements
requires maintaining the state over sufficient time.</t>

<t>The algorithm must also detect when the network is in a
persistent working condition, also called “saturation”.</t>

<t>Desired properties of “working condition”:</t>

<t><list style="symbols">
  <t>Should not waste traffic, because the person may be paying for it.</t>
  <t>Should finish within a short time to
avoid impacting other people on the same network,
to avoid varying network conditions, and not try the person’s patience.</t>
</list></t>

<section anchor="from-single-flow-to-multi-flow" title="From single-flow to multi-flow">

<t>A single TCP connection may not be sufficient to saturate a path.
For example, the 4MB constraints on TCP window size constraints
may not fill the pipe.
Additionally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it hard to reach saturation.</t>

<t>The goal of the RPM Test is to keep the network as busy as possible
in a sustained and persistent way.
It uses multiple TCP connections and gradually adds more TCP flows
until saturation is reached.</t>

</section>
<section anchor="parallel-vs-sequential-uplink-and-downlink" title="Parallel vs Sequential Uplink and Downlink">

<t>Poor responsiveness can be caused by queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or the routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must saturate both directions.</t>

<t>One approach could be to measure responsiveness in the uplink and downlink
in parallel. It would allow for a shorter test run-time.</t>

<t>However, a number of caveats come with measuring in parallel:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This means the test might not saturate both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debuggability of the results becomes harder:
During parallel measurement it is impossible to differentiate whether
the observed latency happens in the uplink or the downlink direction.</t>
</list></t>

<t>Thus, we recommend testing uplink and downlink sequentially. Parallel testing
is considered a future extension.</t>

</section>
<section anchor="reaching-saturation" title="Reaching saturation">

<t>The RPM Test gradually increases the number of TCP connections
and measures “goodput” - the sum of actual data transferred
across all connections in a unit of time.
When the goodput stops increasing, it means that saturation has been
reached.</t>

<t>Saturation has two criteria:
a) the load-generating connections are utilizing all the
capacity of the bottleneck,
b) the buffers in the bottleneck are completely filled.</t>

<t>The algorithm notes that throughput gradually increases until TCP
connections complete their TCP slow-start phase.
At that point, throughput eventually stalls
usually due to receive window limitations.
The only means to further increase throughput is by
adding more TCP connections to the pool of load-generating connections.
If new connections leave the throughput the same,
saturation has been reached and - more importantly -
the working condition is stable.</t>

<t>Filling buffers at the bottleneck depends on the congestion control
deployed on the sender side.
Congestion control algorithms like BBR may reach high throughput
without causing queueing because the bandwidth detection
portion of BBR effectively seeks the bottleneck capacity.</t>

<t>RPM Test clients and servers should use loss-based congestion controls
like Cubic to fill queues reliably.</t>

<t>The RPM Test detects saturation when the observed goodput is not increasing
even as connections are being added,
or it detects packet loss or ECN marks signaling
congestion or a full buffer of the bottleneck link.</t>

</section>
<section anchor="final-working-conditions-algorithm" title="Final “Working Conditions” Algorithm">

<t>The following algorithm reaches working conditions (saturation) of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term “load-generating connection” for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one (1) second.</t>

<t>Where</t>

<t><list style="symbols">
  <t>i: The index of the current interval. i is initialized to 0 when the algorithm begins and
increases by one for each interval.</t>
  <t>instantaneous aggregate goodput at interval p: The number of total bytes of data transferred within
interval p. If p is less than 0, the number of total bytes of data transferred within the
interval is considered to be 0.</t>
  <t>moving average aggregate goodput at interval p: The average of the number of total bytes of data
transferred in the instantaneous average aggregate goodput at intervals p - x, for all 0≤x&lt;4.</t>
  <t>moving average stability during the period between intervals b and e: Whether or not the differences between the moving average aggregate goodput at interval x and
the moving average aggregate goodput at interval x+1 (for all b≤x&lt;e) is less than 5%.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create four (4) load-generating connections.</t>
  <t>At each interval:
  <list style="symbols">
      <t>Compute the instantaneous aggregate goodput at interval i.</t>
      <t>Compute the moving average aggregate goodput at interval i.</t>
      <t>If the moving average aggregate goodput at interval i is more than a 5% increase over
the moving average aggregate goodput at interval i - 1, the network has not yet reached saturation.
      <list style="symbols">
          <t>If no load-generating connections have been added within the last four (4) intervals, add four (4) more load-generating connections.</t>
        </list></t>
      <t>Else, the network has reached saturation with the existing load-generating connections. The current state is a candidate for stable saturation.
      <list style="symbols">
          <t>If a) there have been load-generating connections added in the past four (4) intervals and b) there has been moving average stability during the period between intervals i-4 and i,
then the network has reached stable saturation and the algorithm terminates.</t>
          <t>Otherwise, add four (4) more load-generating connections.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that one of the goals is that the test finishes within
20 seconds. It is left to the implementation what to do when saturation is not reached
within that time-frame. For example, an implementation might gather a provisional
responsiveness measurement or let the test run for longer.</t>

<t>Note: It is tempting to envision an initial base round-trip time (RTT)
measurement and adjust the intervals as a function of that RTT.
However,
experiments have shown that this makes the saturation detection extremely
unstable in low RTT environments.
In the situation where the “unloaded” RTT is in the
single-digit millisecond range, yet the network’s RTT increases under load
to more than a hundred milliseconds, the intervals become much too low to
accurately drive the algorithm.</t>

</section>
</section>
<section anchor="measuring-responsiveness" title="Measuring Responsiveness">

<t>Once the network is in a consistent working conditions,
the RPM Test must “probe” the network multiple times
to measure its responsiveness.</t>

<t>Each RPM Test probe measures:</t>

<t><list style="numbers">
  <t>The responsiveness of the different steps to create a new connection,
all during working conditions.  <vspace blankLines='1'/>
To do this, the test measures the time needed to make a DNS request,
establish a TCP connection on port 443,
establish a TLS context using TLS1.3 <xref target="RFC8446"/>, and
send and receive a one-byte object with a HTTP/2 GET request.
It repeats these steps multiple times for accuracy.</t>
  <t>The responsiveness of the network and the client/server networking stacks
for the load-generating connections themselves.  <vspace blankLines='1'/>
To do this, the load-generating connections multiplex an HTTP/2 GET
request for a one-byte object to get the end-to-end latency on the
connections that are using the network at full speed.</t>
</list></t>

<section anchor="aggregating-the-measurements" title="Aggregating the Measurements">

<t>The algorithm produces sets of 5 times for each probe, namely:
DNS handshake, TCP handshake, TLS handshake, HTTP/2 request/response on
separate (idle) connections, HTTP/2 request/response on load-generating connections.
This fine-grained data is useful, but not necessary for creating a useful metric.</t>

<t>To create a single “Responsiveness” (e.g., RPM) number,
this first iteration of the algorithm gives
an equal weight to each of these values.
That is, it sums the five time values for each probe,
and divides by the total number of probes to compute
an average probe duration.
The reciprocal of this, normalized to 60 seconds,
gives the Round-trips Per Minute (RPM).</t>

</section>
<section anchor="statistical-confidence" title="Statistical Confidence">

<t>The number of probes necessary for statistical confidence
is an open question.
One could imagine a computation of the variance and confidence interval
that would drive the number of measurements and balance the accuracy
with the speed of the measurement itself.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results" title="Interpreting responsiveness results">

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with regular HTTP requests a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods
the responsiveness metric is not only influenced by the properties of the
network but can significantly be influenced by the properties of the client
and the server implementations. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness" title="Elements influencing responsiveness">

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential transparent HTTP “accelerators”), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence" title="Client side influence">

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation will
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network’s bottleneck is on the first hop, queue-buildup will happen at the
layers below the transport stack (e.g., NIC firmware).</t>

<t>Each of these queue build-ups may cause latency and thus low responsiveness.
A well-designed networking stack would ensure that queue-buildup in the TCP layer
layer is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="draft-ietf-tcpm-rfc793bis"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up. It is
important to keep these queues at reasonable sizes or that they implement techniques
like FQ-Codel. Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.</t>

</section>
<section anchor="network-influence" title="Network influence">

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server as well as queuing in the
bottleneck node will cause latency. Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy transparent
TCP Proxies, firewalls doing deep packet-inspection, HTTP “accelerators”,…
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network’s use of Smart Queue Management and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence" title="Server side influence">

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side. With the difference that the responsiveness will be impacted
during the downlink load generation.</t>

</section>
</section>
<section anchor="root-causing-responsiveness" title="Root-causing Responsiveness">

<t>Once an RPM result has been generated one might be tempted to try to localize
the source of a potential low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the responsiveness test allows to gain some insight into what the
source of the latency is. The previous section described the elements that influence
the responsiveness. From there it became apparent that the latency measured
on the load-generating connections and the latency measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the latency measured on separate connections is much less than the
latency measured on the load-generating connections, it is possible to narrow
down the source of the additional latency on the load-generating connections.
As long as the other elements of the network don’t do flow-queueing, the additional
latency must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate latency
probing connections in the same way.</t>

</section>
</section>
<section anchor="rpm-test-server-api" title="RPM Test Server API">

<t>The RPM measurement uses standard protocols:
no new protocol is defined.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS 1.3.
The client MUST be able to send a GET request and a POST.
The server MUST be able to respond to both of these
HTTP commands.
Further, the server endpoint MUST be accessible through a hostname
that can be resolved through DNS.
The server MUST have the ability to provide content upon a GET request.
Both client and server SHOULD use loss-based congestion controls
like Cubic.
The server MUST use a packet scheduling algorithm that minimizes internal queueing
to avoid affecting the client’s measurement.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A “small” URL/response:
The server must respond with a status code of 200 and 1 byte in the body.
The actual body content is irrelevant.</t>
  <t>A “large” URL/response:
The server must respond with a status code of 200 and a body size of at least 8GB.
The body can be bigger, and may need to grow as network speeds increases over time.
The actual body content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working condition
and making its measurements.</t>
  <t>An “upload” URL/response:
The server must handle a POST request with an arbitrary body size.
The server should discard the payload.</t>
  <t>A configuration URL that returns a JSON <xref target="RFC8259"/> object with the information
the client uses to run the test (sample below).
Sample JSON:  <vspace blankLines='1'/>
    <figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "small_https_download_url": "https://networkquality.example.com/api/v1/small",
    "large_https_download_url": "https://networkquality.example.com/api/v1/large",
    "https_upload_url": "https://networkquality.example.com/api/v1/upload"
  }
}
]]></artwork></figure>
  </t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>TBD</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>TBD</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>We would like to thank Rich Brown for his editorial pass over this I-D.
We also thank Erik Auerswald and Will Hawkins for their constructive feedback on the I-D.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>

<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="draft-ietf-tcpm-rfc793bis" >
  <front>
    <title>Transmission Control Protocol (TCP) Specification</title>
    <author initials="W." surname="Eddy">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Internet Engineering Task Force" value=""/>
</reference>




<reference  anchor="RFC0793" target='https://www.rfc-editor.org/info/rfc793'>
<front>
<title>Transmission Control Protocol</title>
<author initials='J.' surname='Postel' fullname='J. Postel'><organization /></author>
<date year='1981' month='September' />
</front>
<seriesInfo name='STD' value='7'/>
<seriesInfo name='RFC' value='793'/>
<seriesInfo name='DOI' value='10.17487/RFC0793'/>
</reference>



<reference  anchor="RFC1035" target='https://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference  anchor="RFC8290" target='https://www.rfc-editor.org/info/rfc8290'>
<front>
<title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
<author initials='T.' surname='Hoeiland-Joergensen' fullname='T. Hoeiland-Joergensen'><organization /></author>
<author initials='P.' surname='McKenney' fullname='P. McKenney'><organization /></author>
<author initials='D.' surname='Taht' fullname='D. Taht'><organization /></author>
<author initials='J.' surname='Gettys' fullname='J. Gettys'><organization /></author>
<author initials='E.' surname='Dumazet' fullname='E. Dumazet'><organization /></author>
<date year='2018' month='January' />
<abstract><t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t><t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic.  It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic.  It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t></abstract>
</front>
<seriesInfo name='RFC' value='8290'/>
<seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>



<reference  anchor="RFC8033" target='https://www.rfc-editor.org/info/rfc8033'>
<front>
<title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
<author initials='R.' surname='Pan' fullname='R. Pan'><organization /></author>
<author initials='P.' surname='Natarajan' fullname='P. Natarajan'><organization /></author>
<author initials='F.' surname='Baker' fullname='F. Baker'><organization /></author>
<author initials='G.' surname='White' fullname='G. White'><organization /></author>
<date year='2017' month='February' />
<abstract><t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation.  As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance.  There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t><t>This document presents a lightweight active queue management design called &quot;PIE&quot; (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations.  The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t></abstract>
</front>
<seriesInfo name='RFC' value='8033'/>
<seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>



<reference  anchor="RFC8259" target='https://www.rfc-editor.org/info/rfc8259'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2017' month='December' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='STD' value='90'/>
<seriesInfo name='RFC' value='8259'/>
<seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>



<reference  anchor="RFC8446" target='https://www.rfc-editor.org/info/rfc8446'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2018' month='August' />
<abstract><t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t><t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='8446'/>
<seriesInfo name='DOI' value='10.17487/RFC8446'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
H4sIAPuaImIAA9VcbXPcuJH+zl+Bm61kpbqZsWzLuazy4SJL9q4TvyiWNv5w
dbWFIaEZRBySS5AaT7Y2v/366QZAcGakXV/uQ+7qbk/mkECju9H99Aswm82y
znalOVMfjWvqytl7UxnnVF8VplWf6vbOVkt1UVeF7Sz9nunFojX3v/79os4r
vaYJilbfdrO80drlq5ltmvWsHY0xO3maFbozZ1lO/13W7fZMmc9NltmmPVNd
27vu2cnJNyfPMt0afaZuWl3R922XbWjaZVv3zZl6c6WuTHtbt2td5Ua9M9r1
rVmbqsvuzJZeLOidqjNtZbrZJUjKMtfpqvhBl3VFZG6Nyxp7pv6rq/OpcjR8
a24d/bVd44//zjLdd6u6PcuUmtH/KWUrd6Yu5uqKV8aPZMUXq9a6rm5W6U91
uzxT501TGqIjn/MzR3OY7kx9qIz/6Uq3d+qT3vLPue2IFRd9Y9rOVvVUXejS
0hIrq9U3L06enspbdV914Nn3le1Moa474qJT9a06X5vW5prfMmttyzPlxfBH
jdnmeb3Oxsv5OCfWbU2brOYjMUmXZfL8X2Mpbbt+cBnXcxKCcSvbmmQl112v
2278y7/GWnJP0oML+jBX1yvd2FYn6/lAA40e/2sspqa1PLiQd6RgultZl6yD
HnTpU17Gt3W9LM0UCxmt4+nvTk5o1mZlu5XR9JDXsxkt5x3I1bZSf7VmQ0s6
V+qb05PT51++ljWRtmbK/rhkgmRJtmJL05EFgz142d/emnZR1ro7468HU0H/
M5OV/2muvjVdt3Wjp3+eq/c2X9WlPPZGeZKOqC4hMHni6CtFC4+2bCLMIcKN
A1Uky3q97itaB9thrAvvn1+8m6q/1mW/NurFi6l6368XpD1P1dGzk6fPjmkU
sdPWdLezLoeRvs3/45vnC+seXtKnuXpVFNsR5Wyd19Y5mh3+oGvrUl21NZlV
+uPo5uLqWF03Jre3nsT9FYS1qVfV0laGfiHXcqPdnXpdtzn27cfXFydE3Jn8
+fTk+Qv/5++ffXMS/jx5/jw+ffFN+PP09HdnWTabzZRekE7pnBwBDUuSrrbk
BHRLNl+rUud3YN3YU03VvW5t3btyq3KyiabISr2c0tudqfLtlDRXLQbJTdVK
O7UwpqJx8npZ2b/TF/RIV+Q3SYO6vqIvp/RNR2q5XhPHyN00Xb1mMdeF3n7t
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
nBg5+x8CjMDvhGIAAA==

-->

</rfc>

